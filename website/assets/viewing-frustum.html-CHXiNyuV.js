import{_ as i,o as e,c as l,e as t}from"./app-7lRh3UNW.js";const n={},a=t('<h1 id="视域体" tabindex="-1"><a class="header-anchor" href="#视域体" aria-hidden="true">#</a> 视域体</h1><p>在3D图形学中，视锥体（Frustum）是一种几何体，用于表示相机（或观察者）的可视区域。视锥体呈金字塔状，其尖端位于相机位置，底部是相机的近裁剪平面，而尖端则是相机的远裁剪平面。这个形状的特性使其类似于一个三维的梯形。</p><p>视锥体定义了相机视野内的可见空间，对于确定哪些物体应该在屏幕上渲染是至关重要的。当一个物体完全在视锥体内时，它将被渲染；而当一个物体部分或完全在视锥体外时，它就被认为是不可见的，因此不会在最终的图像中出现，这有助于提高渲染效率。</p><p>视锥体通常由六个面构成，分别是四个截断金字塔的平面（相机的近、远裁剪平面，以及左、右、上、下平面）。通过调整这些平面的参数，可以改变视锥体的大小和形状，从而影响可见空间的范围。这些参数通常包括相机的视场角、纵横比以及近、远裁剪平面的距离。</p><p>以下是一些与视域体（Viewing Frustum）相关的重要概念:</p><ol><li>近裁剪平面（Near Clipping Plane）：定义了摄像机可以看到的最近的距离。在这个平面之前的物体会被裁剪掉，不会被渲染到最终的图像中。</li><li>远裁剪平面（Far Clipping Plane）：定义了摄像机可以看到的最远的距离。在这个平面之后的物体会被裁剪掉，不会被渲染到最终的图像中。</li><li>视野（Field of View，FOV）：定义了摄像机的视野宽度。视野越宽，摄像机可以看到的场景就越广。</li><li>纵横比（Aspect Ratio）：定义了视域体的宽度和高度的比例。在大多数情况下，这个比例应该与渲染目标（例如屏幕）的宽高比一致。</li><li>视点（Viewpoint）：摄像机在3D空间中的位置。</li><li>视线（Viewing Direction）：摄像机的朝向，通常由一个向量表示。</li><li>裁剪（Clipping）：裁剪是3D图形渲染中的一个重要步骤，它的目的是去除视域体之外的物体，以减少渲染的复杂性。</li></ol>',6),r=[a];function o(c,s){return e(),l("div",null,r)}const _=i(n,[["render",o],["__file","viewing-frustum.html.vue"]]);export{_ as default};
