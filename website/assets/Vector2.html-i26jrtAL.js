import{_ as n,r as d,o as r,c,a as t,b as o,w as s,d as e,e as a}from"./app-7lRh3UNW.js";const i={},h=a('<h1 id="class-vector2" tabindex="-1"><a class="header-anchor" href="#class-vector2" aria-hidden="true">#</a> Class: Vector2</h1><p>Class representing a vector containing 2 coordinates Example Playground - Overview - https://playground.babylonjs.com/#QYBWV4#9</p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>',4),u=t("h3",{id:"properties",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),e(" Properties")],-1),_=t("h3",{id:"accessors",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#accessors","aria-hidden":"true"},"#"),e(" Accessors")],-1),f=t("h3",{id:"methods",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),e(" Methods")],-1),p=t("h2",{id:"constructors-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),e(" Constructors")],-1),y=t("h3",{id:"constructor",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),e(" constructor")],-1),m=t("strong",null,"new Vector2",-1),g=t("code",null,"x?",-1),x=t("code",null,"y?",-1),b=t("code",null,"Vector2",-1),V=a('<p>Creates a new Vector2 from the given x and y coordinates</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the first coordinate</td></tr><tr><td style="text-align:left;"><code>y?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the second coordinate</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',4),v=t("code",null,"Vector2",-1),T=a('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="x" tabindex="-1"><a class="header-anchor" href="#x" aria-hidden="true">#</a> x</h3><p>• <strong>x</strong>: <code>number</code></p><p>defines the first coordinate</p><hr><h3 id="y" tabindex="-1"><a class="header-anchor" href="#y" aria-hidden="true">#</a> y</h3><p>• <strong>y</strong>: <code>number</code></p><p>defines the second coordinate</p><h2 id="accessors-1" tabindex="-1"><a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a> Accessors</h2><h3 id="zeroreadonly" tabindex="-1"><a class="header-anchor" href="#zeroreadonly" aria-hidden="true">#</a> ZeroReadOnly</h3>',10),D=t("code",null,"get",-1),q=t("strong",null,"ZeroReadOnly",-1),P=t("code",null,"DeepImmutableObject",-1),R=t("code",null,"Vector2",-1),j=t("p",null,"Gets a zero Vector2 that must not be updated",-1),w=t("h4",{id:"returns-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),e(" Returns")],-1),N=t("code",null,"DeepImmutableObject",-1),I=t("code",null,"Vector2",-1),B=t("h2",{id:"methods-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),e(" Methods")],-1),O=t("h3",{id:"add",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#add","aria-hidden":"true"},"#"),e(" add")],-1),z=t("strong",null,"add",-1),E=t("code",null,"otherVector",-1),W=t("code",null,"Vector2",-1),Q=t("p",null,"Add another vector with the current one Example Playground https://playground.babylonjs.com/#QYBWV4#11",-1),Y=t("h4",{id:"parameters-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),e(" Parameters")],-1),A=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),G=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),C={style:{"text-align":"left"}},F=t("code",null,"DeepImmutableObject",-1),S=t("code",null,"Vector2",-1),H=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),M=t("h4",{id:"returns-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),e(" Returns")],-1),L=t("code",null,"Vector2",-1),k=t("p",null,"a new Vector2 set with the addition of the current Vector2 and the given one coordinates",-1),Z=t("hr",null,null,-1),U=t("h3",{id:"addinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#addinplace","aria-hidden":"true"},"#"),e(" addInPlace")],-1),J=t("strong",null,"addInPlace",-1),K=t("code",null,"otherVector",-1),X=t("code",null,"Vector2",-1),$=t("p",null,"Set the Vector2 coordinates by adding the given Vector2 coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#13",-1),tt=t("h4",{id:"parameters-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),e(" Parameters")],-1),et=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),lt=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),ot={style:{"text-align":"left"}},st=t("code",null,"DeepImmutableObject",-1),at=t("code",null,"Vector2",-1),nt=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),dt=t("h4",{id:"returns-3",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),e(" Returns")],-1),rt=t("code",null,"Vector2",-1),ct=a('<p>the current updated Vector2</p><hr><h3 id="addtoref" tabindex="-1"><a class="header-anchor" href="#addtoref" aria-hidden="true">#</a> addToRef</h3><p>▸ <strong>addToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Sets the &quot;result&quot; coordinates with the addition of the current Vector2 and the given one coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#12</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4>',6),it=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ht=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ut={style:{"text-align":"left"}},_t=t("code",null,"Vector2",-1),ft=t("h4",{id:"parameters-3",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),e(" Parameters")],-1),pt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),yt=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),mt={style:{"text-align":"left"}},gt=t("code",null,"DeepImmutableObject",-1),xt=t("code",null,"Vector2",-1),bt=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),Vt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the target vector")],-1),vt=t("h4",{id:"returns-4",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-4","aria-hidden":"true"},"#"),e(" Returns")],-1),Tt=t("p",null,[t("code",null,"T")],-1),Dt=t("p",null,"result input",-1),qt=t("hr",null,null,-1),Pt=t("h3",{id:"addvector3",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#addvector3","aria-hidden":"true"},"#"),e(" addVector3")],-1),Rt=t("strong",null,"addVector3",-1),jt=t("code",null,"otherVector",-1),wt=t("code",null,"Vector2",-1),Nt=t("p",null,"Gets a new Vector2 by adding the current Vector2 coordinates to the given Vector3 x, y coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#14",-1),It=t("h4",{id:"parameters-4",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-4","aria-hidden":"true"},"#"),e(" Parameters")],-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ot=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),zt={style:{"text-align":"left"}},Et=t("code",null,"Vector3",-1),Wt=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),Qt=t("h4",{id:"returns-5",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),e(" Returns")],-1),Yt=t("code",null,"Vector2",-1),At=a('<p>a new Vector2</p><hr><h3 id="asarray" tabindex="-1"><a class="header-anchor" href="#asarray" aria-hidden="true">#</a> asArray</h3><p>▸ <strong>asArray</strong>(): <code>number</code>[]</p><p>Copy the current vector to an array Example Playground https://playground.babylonjs.com/#QYBWV4#40</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>number</code>[]</p><p>a new array with 2 elements: the Vector2 coordinates.</p><hr><h3 id="clone" tabindex="-1"><a class="header-anchor" href="#clone" aria-hidden="true">#</a> clone</h3>',10),Gt=t("strong",null,"clone",-1),Ct=t("code",null,"Vector2",-1),Ft=t("p",null,"Gets a new Vector2 copied from the Vector2 Example Playground https://playground.babylonjs.com/#QYBWV4#20",-1),St=t("h4",{id:"returns-7",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),e(" Returns")],-1),Ht=t("code",null,"Vector2",-1),Mt=t("p",null,"a new Vector2",-1),Lt=t("hr",null,null,-1),kt=t("h3",{id:"copyfrom",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#copyfrom","aria-hidden":"true"},"#"),e(" copyFrom")],-1),Zt=t("strong",null,"copyFrom",-1),Ut=t("code",null,"source",-1),Jt=t("code",null,"Vector2",-1),Kt=t("p",null,"Sets the Vector2 coordinates with the given Vector2 coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#24",-1),Xt=t("h4",{id:"parameters-5",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-5","aria-hidden":"true"},"#"),e(" Parameters")],-1),$t=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),te=t("td",{style:{"text-align":"left"}},[t("code",null,"source")],-1),ee={style:{"text-align":"left"}},le=t("code",null,"DeepImmutableObject",-1),oe=t("code",null,"Vector2",-1),se=t("td",{style:{"text-align":"left"}},"defines the source Vector2",-1),ae=t("h4",{id:"returns-8",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-8","aria-hidden":"true"},"#"),e(" Returns")],-1),ne=t("code",null,"Vector2",-1),de=t("p",null,"the current updated Vector2",-1),re=t("hr",null,null,-1),ce=t("h3",{id:"copyfromfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#copyfromfloats","aria-hidden":"true"},"#"),e(" copyFromFloats")],-1),ie=t("strong",null,"copyFromFloats",-1),he=t("code",null,"x",-1),ue=t("code",null,"y",-1),_e=t("code",null,"Vector2",-1),fe=a('<p>Sets the Vector2 coordinates with the given floats Example Playground https://playground.babylonjs.com/#QYBWV4#25</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the first coordinate</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the second coordinate</td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4>',4),pe=t("code",null,"Vector2",-1),ye=t("p",null,"the current updated Vector2",-1),me=t("hr",null,null,-1),ge=t("h3",{id:"divide",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#divide","aria-hidden":"true"},"#"),e(" divide")],-1),xe=t("strong",null,"divide",-1),be=t("code",null,"otherVector",-1),Ve=t("code",null,"Vector2",-1),ve=t("p",null,"Returns a new Vector2 set with the Vector2 coordinates divided by the given one coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#27",-1),Te=t("h4",{id:"parameters-7",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),e(" Parameters")],-1),De=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),qe=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Pe={style:{"text-align":"left"}},Re=t("code",null,"Vector2",-1),je=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),we=t("h4",{id:"returns-10",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),e(" Returns")],-1),Ne=t("code",null,"Vector2",-1),Ie=t("p",null,"a new Vector2",-1),Be=t("hr",null,null,-1),Oe=t("h3",{id:"divideinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#divideinplace","aria-hidden":"true"},"#"),e(" divideInPlace")],-1),ze=t("strong",null,"divideInPlace",-1),Ee=t("code",null,"otherVector",-1),We=t("code",null,"Vector2",-1),Qe=t("p",null,"Divides the current Vector2 coordinates by the given ones Example Playground https://playground.babylonjs.com/#QYBWV4#28",-1),Ye=t("h4",{id:"parameters-8",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-8","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ae=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ge=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Ce={style:{"text-align":"left"}},Fe=t("code",null,"DeepImmutableObject",-1),Se=t("code",null,"Vector2",-1),He=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),Me=t("h4",{id:"returns-11",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),e(" Returns")],-1),Le=t("code",null,"Vector2",-1),ke=a('<p>the current updated Vector2</p><hr><h3 id="dividetoref" tabindex="-1"><a class="header-anchor" href="#dividetoref" aria-hidden="true">#</a> divideToRef</h3><p>▸ <strong>divideToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Sets the &quot;result&quot; coordinates with the Vector2 divided by the given one coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#30</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',6),Ze=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Ue=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Je={style:{"text-align":"left"}},Ke=t("code",null,"Vector2",-1),Xe=t("h4",{id:"parameters-9",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-9","aria-hidden":"true"},"#"),e(" Parameters")],-1),$e=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),tl=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),el={style:{"text-align":"left"}},ll=t("code",null,"DeepImmutableObject",-1),ol=t("code",null,"Vector2",-1),sl=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),al=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the target vector")],-1),nl=a('<h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="dot" tabindex="-1"><a class="header-anchor" href="#dot" aria-hidden="true">#</a> dot</h3><p>▸ <strong>dot</strong>(<code>otherVector</code>): <code>number</code></p><p>Gets the dot product of the current vector and the vector &quot;otherVector&quot;</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>',8),dl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),rl=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),cl={style:{"text-align":"left"}},il=t("code",null,"DeepImmutableObject",-1),hl=t("code",null,"Vector2",-1),ul=t("td",{style:{"text-align":"left"}},"defines second vector",-1),_l=a('<h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the dot product (float)</p><hr><h3 id="equals" tabindex="-1"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> equals</h3><p>▸ <strong>equals</strong>(<code>otherVector</code>): <code>boolean</code></p><p>Gets a boolean if two vectors are equals Example Playground https://playground.babylonjs.com/#QYBWV4#31</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4>',8),fl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),pl=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),yl={style:{"text-align":"left"}},ml=t("code",null,"DeepImmutableObject",-1),gl=t("code",null,"Vector2",-1),xl=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),bl=a('<h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><p>true if the given vector coordinates strictly equal the current Vector2 ones</p><hr><h3 id="equalswithepsilon" tabindex="-1"><a class="header-anchor" href="#equalswithepsilon" aria-hidden="true">#</a> equalsWithEpsilon</h3><p>▸ <strong>equalsWithEpsilon</strong>(<code>otherVector</code>, <code>epsilon?</code>): <code>boolean</code></p><p>Gets a boolean if two vectors are equals (using an epsilon value) Example Playground https://playground.babylonjs.com/#QYBWV4#32</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4>',8),Vl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),vl=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Tl={style:{"text-align":"left"}},Dl=t("code",null,"DeepImmutableObject",-1),ql=t("code",null,"Vector2",-1),Pl=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),Rl=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"epsilon?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the minimal distance to consider equality")],-1),jl=t("h4",{id:"returns-15",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),e(" Returns")],-1),wl=t("p",null,[t("code",null,"boolean")],-1),Nl=t("p",null,"true if the given vector coordinates are close to the current ones by a distance of epsilon.",-1),Il=t("hr",null,null,-1),Bl=t("h3",{id:"floor",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#floor","aria-hidden":"true"},"#"),e(" floor")],-1),Ol=t("strong",null,"floor",-1),zl=t("code",null,"Vector2",-1),El=t("p",null,"Gets a new Vector2 from current Vector2 floored values Example Playground https://playground.babylonjs.com/#QYBWV4#35 eg (1.2, 2.31) returns (1, 2)",-1),Wl=t("h4",{id:"returns-16",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),e(" Returns")],-1),Ql=t("code",null,"Vector2",-1),Yl=t("p",null,"a new Vector2",-1),Al=t("hr",null,null,-1),Gl=t("h3",{id:"fract",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fract","aria-hidden":"true"},"#"),e(" fract")],-1),Cl=t("strong",null,"fract",-1),Fl=t("code",null,"Vector2",-1),Sl=t("p",null,"Gets a new Vector2 from current Vector2 fractional values Example Playground https://playground.babylonjs.com/#QYBWV4#34 eg (1.2, 2.31) returns (0.2, 0.31)",-1),Hl=t("h4",{id:"returns-17",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),e(" Returns")],-1),Ml=t("code",null,"Vector2",-1),Ll=t("p",null,"a new Vector2",-1),kl=t("hr",null,null,-1),Zl=t("h3",{id:"fromarray",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fromarray","aria-hidden":"true"},"#"),e(" fromArray")],-1),Ul=t("strong",null,"fromArray",-1),Jl=t("code",null,"array",-1),Kl=t("code",null,"index?",-1),Xl=t("code",null,"Vector2",-1),$l=a('<p>Update the current vector from an array Example Playground https://playground.babylonjs.com/#QYBWV4#39</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>FloatArray</code></td><td style="text-align:left;">defines the destination array</td></tr><tr><td style="text-align:left;"><code>index?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the destination array</td></tr></tbody></table><h4 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18" aria-hidden="true">#</a> Returns</h4>',4),to=t("code",null,"Vector2",-1),eo=a('<p>the current Vector2</p><hr><h3 id="getclassname" tabindex="-1"><a class="header-anchor" href="#getclassname" aria-hidden="true">#</a> getClassName</h3><p>▸ <strong>getClassName</strong>(): <code>string</code></p><p>Gets class name</p><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>the string &quot;Vector2&quot;</p><hr><h3 id="gethashcode" tabindex="-1"><a class="header-anchor" href="#gethashcode" aria-hidden="true">#</a> getHashCode</h3><p>▸ <strong>getHashCode</strong>(): <code>number</code></p><p>Gets current vector hash code</p><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the Vector2 hash code as a number</p><hr><h3 id="length" tabindex="-1"><a class="header-anchor" href="#length" aria-hidden="true">#</a> length</h3><p>▸ <strong>length</strong>(): <code>number</code></p><p>Gets the length of the vector</p><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the vector length (float)</p><hr><h3 id="lengthsquared" tabindex="-1"><a class="header-anchor" href="#lengthsquared" aria-hidden="true">#</a> lengthSquared</h3><p>▸ <strong>lengthSquared</strong>(): <code>number</code></p><p>Gets the vector squared length</p><h4 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the vector squared length (float)</p><hr><h3 id="multiply" tabindex="-1"><a class="header-anchor" href="#multiply" aria-hidden="true">#</a> multiply</h3>',31),lo=t("strong",null,"multiply",-1),oo=t("code",null,"otherVector",-1),so=t("code",null,"Vector2",-1),ao=t("p",null,"Returns a new Vector2 set with the multiplication of the current Vector2 and the given one coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#42",-1),no=t("h4",{id:"parameters-14",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-14","aria-hidden":"true"},"#"),e(" Parameters")],-1),ro=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),co=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),io={style:{"text-align":"left"}},ho=t("code",null,"DeepImmutableObject",-1),uo=t("code",null,"Vector2",-1),_o=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),fo=t("h4",{id:"returns-23",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),e(" Returns")],-1),po=t("code",null,"Vector2",-1),yo=t("p",null,"a new Vector2",-1),mo=t("hr",null,null,-1),go=t("h3",{id:"multiplybyfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#multiplybyfloats","aria-hidden":"true"},"#"),e(" multiplyByFloats")],-1),xo=t("strong",null,"multiplyByFloats",-1),bo=t("code",null,"x",-1),Vo=t("code",null,"y",-1),vo=t("code",null,"Vector2",-1),To=a('<p>Gets a new Vector2 set with the Vector2 coordinates multiplied by the given floats Example Playground https://playground.babylonjs.com/#QYBWV4#89</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the first coordinate</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the second coordinate</td></tr></tbody></table><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24" aria-hidden="true">#</a> Returns</h4>',4),Do=t("code",null,"Vector2",-1),qo=t("p",null,"a new Vector2",-1),Po=t("hr",null,null,-1),Ro=t("h3",{id:"multiplyinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#multiplyinplace","aria-hidden":"true"},"#"),e(" multiplyInPlace")],-1),jo=t("strong",null,"multiplyInPlace",-1),wo=t("code",null,"otherVector",-1),No=t("code",null,"Vector2",-1),Io=t("p",null,"Multiplies in place the current Vector2 coordinates by the given ones Example Playground https://playground.babylonjs.com/#QYBWV4#43",-1),Bo=t("h4",{id:"parameters-16",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-16","aria-hidden":"true"},"#"),e(" Parameters")],-1),Oo=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),zo=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Eo={style:{"text-align":"left"}},Wo=t("code",null,"DeepImmutableObject",-1),Qo=t("code",null,"Vector2",-1),Yo=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),Ao=t("h4",{id:"returns-25",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-25","aria-hidden":"true"},"#"),e(" Returns")],-1),Go=t("code",null,"Vector2",-1),Co=a('<p>the current updated Vector2</p><hr><h3 id="multiplytoref" tabindex="-1"><a class="header-anchor" href="#multiplytoref" aria-hidden="true">#</a> multiplyToRef</h3><p>▸ <strong>multiplyToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Sets &quot;result&quot; coordinates with the multiplication of the current Vector2 and the given one coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#44</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',6),Fo=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),So=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Ho={style:{"text-align":"left"}},Mo=t("code",null,"Vector2",-1),Lo=t("h4",{id:"parameters-17",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-17","aria-hidden":"true"},"#"),e(" Parameters")],-1),ko=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Zo=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Uo={style:{"text-align":"left"}},Jo=t("code",null,"DeepImmutableObject",-1),Ko=t("code",null,"Vector2",-1),Xo=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),$o=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the target vector")],-1),ts=t("h4",{id:"returns-26",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-26","aria-hidden":"true"},"#"),e(" Returns")],-1),es=t("p",null,[t("code",null,"T")],-1),ls=t("p",null,"result input",-1),os=t("hr",null,null,-1),ss=t("h3",{id:"negate",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#negate","aria-hidden":"true"},"#"),e(" negate")],-1),as=t("strong",null,"negate",-1),ns=t("code",null,"Vector2",-1),ds=t("p",null,"Gets a new Vector2 with current Vector2 negated coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#22",-1),rs=t("h4",{id:"returns-27",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-27","aria-hidden":"true"},"#"),e(" Returns")],-1),cs=t("code",null,"Vector2",-1),is=t("p",null,"a new Vector2",-1),hs=t("hr",null,null,-1),us=t("h3",{id:"negateinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#negateinplace","aria-hidden":"true"},"#"),e(" negateInPlace")],-1),_s=t("strong",null,"negateInPlace",-1),fs=t("code",null,"Vector2",-1),ps=t("p",null,"Negate this vector in place Example Playground https://playground.babylonjs.com/#QYBWV4#23",-1),ys=t("h4",{id:"returns-28",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-28","aria-hidden":"true"},"#"),e(" Returns")],-1),ms=t("code",null,"Vector2",-1),gs=a('<p>this</p><hr><h3 id="negatetoref" tabindex="-1"><a class="header-anchor" href="#negatetoref" aria-hidden="true">#</a> negateToRef</h3><p>▸ <strong>negateToRef</strong>&lt;<code>T</code>&gt;(<code>result</code>): <code>T</code></p><p>Negate the current Vector2 and stores the result in the given vector &quot;result&quot; coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#41</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',6),xs=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),bs=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Vs={style:{"text-align":"left"}},vs=t("code",null,"Vector2",-1),Ts=a('<h4 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 object where to store the result</td></tr></tbody></table><h4 id="returns-29" tabindex="-1"><a class="header-anchor" href="#returns-29" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the result</p><hr><h3 id="normalize" tabindex="-1"><a class="header-anchor" href="#normalize" aria-hidden="true">#</a> normalize</h3>',7),Ds=t("strong",null,"normalize",-1),qs=t("code",null,"Vector2",-1),Ps=t("p",null,"Normalize the vector Example Playground https://playground.babylonjs.com/#QYBWV4#48",-1),Rs=t("h4",{id:"returns-30",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-30","aria-hidden":"true"},"#"),e(" Returns")],-1),js=t("code",null,"Vector2",-1),ws=t("p",null,"the current updated Vector2",-1),Ns=t("hr",null,null,-1),Is=t("h3",{id:"normalizefromlength",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#normalizefromlength","aria-hidden":"true"},"#"),e(" normalizeFromLength")],-1),Bs=t("strong",null,"normalizeFromLength",-1),Os=t("code",null,"len",-1),zs=t("code",null,"Vector2",-1),Es=a('<p>Normalize the current Vector2 with the given input length. Please note that this is an in place operation.</p><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>len</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the length of the vector</td></tr></tbody></table><h4 id="returns-31" tabindex="-1"><a class="header-anchor" href="#returns-31" aria-hidden="true">#</a> Returns</h4>',4),Ws=t("code",null,"Vector2",-1),Qs=t("p",null,"the current updated Vector2",-1),Ys=t("hr",null,null,-1),As=t("h3",{id:"normalizetonew",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#normalizetonew","aria-hidden":"true"},"#"),e(" normalizeToNew")],-1),Gs=t("strong",null,"normalizeToNew",-1),Cs=t("code",null,"Vector2",-1),Fs=t("p",null,"Normalize the current Vector2 to a new vector",-1),Ss=t("h4",{id:"returns-32",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-32","aria-hidden":"true"},"#"),e(" Returns")],-1),Hs=t("code",null,"Vector2",-1),Ms=a('<p>the new Vector2</p><hr><h3 id="normalizetoref" tabindex="-1"><a class="header-anchor" href="#normalizetoref" aria-hidden="true">#</a> normalizeToRef</h3><p>▸ <strong>normalizeToRef</strong>&lt;<code>T</code>&gt;(<code>reference</code>): <code>T</code></p><p>Normalize the current Vector2 to the reference</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',6),Ls=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ks=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Zs={style:{"text-align":"left"}},Us=t("code",null,"Vector2",-1),Js=a('<h4 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>reference</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">define the Vector2 to update</td></tr></tbody></table><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the updated Vector2</p><hr><h3 id="rotatetoref" tabindex="-1"><a class="header-anchor" href="#rotatetoref" aria-hidden="true">#</a> rotateToRef</h3><p>▸ <strong>rotateToRef</strong>&lt;<code>T</code>&gt;(<code>angle</code>, <code>result</code>): <code>T</code></p><p>Rotate the current vector into a given result vector Example Playground https://playground.babylonjs.com/#QYBWV4#49</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4>',10),Ks=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Xs=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),$s={style:{"text-align":"left"}},ta=t("code",null,"Vector2",-1),ea=a('<h4 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>angle</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the rotation angle</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the result vector where to store the rotated vector</td></tr></tbody></table><h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="scale" tabindex="-1"><a class="header-anchor" href="#scale" aria-hidden="true">#</a> scale</h3>',7),la=t("strong",null,"scale",-1),oa=t("code",null,"scale",-1),sa=t("code",null,"Vector2",-1),aa=a('<p>Returns a new Vector2 scaled by &quot;scale&quot; from the current Vector2 Example Playground https://playground.babylonjs.com/#QYBWV4#52</p><h4 id="parameters-22" tabindex="-1"><a class="header-anchor" href="#parameters-22" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the scaling factor</td></tr></tbody></table><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35" aria-hidden="true">#</a> Returns</h4>',4),na=t("code",null,"Vector2",-1),da=a('<p>a new Vector2</p><hr><h3 id="scaleandaddtoref" tabindex="-1"><a class="header-anchor" href="#scaleandaddtoref" aria-hidden="true">#</a> scaleAndAddToRef</h3><p>▸ <strong>scaleAndAddToRef</strong>&lt;<code>T</code>&gt;(<code>scale</code>, <code>result</code>): <code>T</code></p><p>Scale the current Vector2 values by a factor and add the result to a given Vector2 Example Playground https://playground.babylonjs.com/#QYBWV4#58</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',6),ra=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ca=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ia={style:{"text-align":"left"}},ha=t("code",null,"Vector2",-1),ua=a('<h4 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the scale factor</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector2 object where to store the result</td></tr></tbody></table><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="scaleinplace" tabindex="-1"><a class="header-anchor" href="#scaleinplace" aria-hidden="true">#</a> scaleInPlace</h3>',7),_a=t("strong",null,"scaleInPlace",-1),fa=t("code",null,"scale",-1),pa=t("code",null,"Vector2",-1),ya=a('<p>Multiply the Vector2 coordinates by Example Playground https://playground.babylonjs.com/#QYBWV4#59</p><h4 id="parameters-24" tabindex="-1"><a class="header-anchor" href="#parameters-24" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the scaling factor</td></tr></tbody></table><h4 id="returns-37" tabindex="-1"><a class="header-anchor" href="#returns-37" aria-hidden="true">#</a> Returns</h4>',4),ma=t("code",null,"Vector2",-1),ga=a('<p>the current updated Vector2</p><hr><h3 id="scaletoref" tabindex="-1"><a class="header-anchor" href="#scaletoref" aria-hidden="true">#</a> scaleToRef</h3><p>▸ <strong>scaleToRef</strong>&lt;<code>T</code>&gt;(<code>scale</code>, <code>result</code>): <code>T</code></p><p>Scale the current Vector2 values by a factor to a given Vector2 Example Playground https://playground.babylonjs.com/#QYBWV4#57</p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4>',6),xa=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ba=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Va={style:{"text-align":"left"}},va=t("code",null,"Vector2",-1),Ta=a('<h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the scale factor</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector2 object where to store the result</td></tr></tbody></table><h4 id="returns-38" tabindex="-1"><a class="header-anchor" href="#returns-38" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set</h3>',7),Da=t("strong",null,"set",-1),qa=t("code",null,"x",-1),Pa=t("code",null,"y",-1),Ra=t("code",null,"Vector2",-1),ja=a('<p>Sets the Vector2 coordinates with the given floats Example Playground https://playground.babylonjs.com/#QYBWV4#62</p><h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the first coordinate</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the second coordinate</td></tr></tbody></table><h4 id="returns-39" tabindex="-1"><a class="header-anchor" href="#returns-39" aria-hidden="true">#</a> Returns</h4>',4),wa=t("code",null,"Vector2",-1),Na=t("p",null,"the current updated Vector2",-1),Ia=t("hr",null,null,-1),Ba=t("h3",{id:"subtract",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#subtract","aria-hidden":"true"},"#"),e(" subtract")],-1),Oa=t("strong",null,"subtract",-1),za=t("code",null,"otherVector",-1),Ea=t("code",null,"Vector2",-1),Wa=t("p",null,"Gets a new Vector2 set with the subtracted coordinates of the given one from the current Vector2 Example Playground https://playground.babylonjs.com/#QYBWV4#61",-1),Qa=t("h4",{id:"parameters-27",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-27","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ya=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Aa=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Ga={style:{"text-align":"left"}},Ca=t("code",null,"Vector2",-1),Fa=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),Sa=t("h4",{id:"returns-40",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-40","aria-hidden":"true"},"#"),e(" Returns")],-1),Ha=t("code",null,"Vector2",-1),Ma=t("p",null,"a new Vector2",-1),La=t("hr",null,null,-1),ka=t("h3",{id:"subtractinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#subtractinplace","aria-hidden":"true"},"#"),e(" subtractInPlace")],-1),Za=t("strong",null,"subtractInPlace",-1),Ua=t("code",null,"otherVector",-1),Ja=t("code",null,"Vector2",-1),Ka=t("p",null,"Sets the current Vector2 coordinates by subtracting from it the given one coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#88",-1),Xa=t("h4",{id:"parameters-28",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-28","aria-hidden":"true"},"#"),e(" Parameters")],-1),$a=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),tn=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),en={style:{"text-align":"left"}},ln=t("code",null,"DeepImmutableObject",-1),on=t("code",null,"Vector2",-1),sn=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),an=t("h4",{id:"returns-41",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-41","aria-hidden":"true"},"#"),e(" Returns")],-1),nn=t("code",null,"Vector2",-1),dn=a('<p>the current updated Vector2</p><hr><h3 id="subtracttoref" tabindex="-1"><a class="header-anchor" href="#subtracttoref" aria-hidden="true">#</a> subtractToRef</h3><p>▸ <strong>subtractToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Sets the &quot;result&quot; coordinates with the subtraction of the given one from the current Vector2 coordinates. Example Playground https://playground.babylonjs.com/#QYBWV4#63</p><h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4>',6),rn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),cn=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),hn={style:{"text-align":"left"}},un=t("code",null,"Vector2",-1),_n=t("h4",{id:"parameters-29",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-29","aria-hidden":"true"},"#"),e(" Parameters")],-1),fn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),pn=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),yn={style:{"text-align":"left"}},mn=t("code",null,"DeepImmutableObject",-1),gn=t("code",null,"Vector2",-1),xn=t("td",{style:{"text-align":"left"}},"defines the other vector",-1),bn=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the target vector")],-1),Vn=t("h4",{id:"returns-42",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-42","aria-hidden":"true"},"#"),e(" Returns")],-1),vn=t("p",null,[t("code",null,"T")],-1),Tn=t("p",null,"result input",-1),Dn=t("hr",null,null,-1),qn=t("h3",{id:"toarray",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#toarray","aria-hidden":"true"},"#"),e(" toArray")],-1),Pn=t("strong",null,"toArray",-1),Rn=t("code",null,"array",-1),jn=t("code",null,"index?",-1),wn=t("code",null,"Vector2",-1),Nn=a('<p>Sets the Vector2 coordinates in the given array or Float32Array from the given index. Example Playground https://playground.babylonjs.com/#QYBWV4#15</p><h4 id="parameters-30" tabindex="-1"><a class="header-anchor" href="#parameters-30" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>FloatArray</code></td><td style="text-align:left;">defines the source array</td></tr><tr><td style="text-align:left;"><code>index?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in source array</td></tr></tbody></table><h4 id="returns-43" tabindex="-1"><a class="header-anchor" href="#returns-43" aria-hidden="true">#</a> Returns</h4>',4),In=t("code",null,"Vector2",-1),Bn=a('<p>the current Vector2</p><hr><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><p>▸ <strong>toString</strong>(): <code>string</code></p><p>Gets a string with the Vector2 coordinates</p><h4 id="returns-44" tabindex="-1"><a class="header-anchor" href="#returns-44" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>a string with the Vector2 coordinates</p><hr><h3 id="catmullrom" tabindex="-1"><a class="header-anchor" href="#catmullrom" aria-hidden="true">#</a> CatmullRom</h3><p>▸ <strong>CatmullRom</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>value2</code>, <code>value3</code>, <code>value4</code>, <code>amount</code>): <code>T</code></p><p>Gets a new Vector2 located for &quot;amount&quot; (float) on the CatmullRom spline defined by the given four Vector2 Example Playground https://playground.babylonjs.com/#QYBWV4#65</p><h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h4>',13),On=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),zn=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),En={style:{"text-align":"left"}},Wn=t("code",null,"Vector2",-1),Qn=t("h4",{id:"parameters-31",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-31","aria-hidden":"true"},"#"),e(" Parameters")],-1),Yn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),An=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines 1st point of control")],-1),Gn=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),Cn={style:{"text-align":"left"}},Fn=t("code",null,"DeepImmutableObject",-1),Sn=t("code",null,"Vector2",-1),Hn=t("td",{style:{"text-align":"left"}},"defines 2nd point of control",-1),Mn=t("td",{style:{"text-align":"left"}},[t("code",null,"value3")],-1),Ln={style:{"text-align":"left"}},kn=t("code",null,"DeepImmutableObject",-1),Zn=t("code",null,"Vector2",-1),Un=t("td",{style:{"text-align":"left"}},"defines 3rd point of control",-1),Jn=t("td",{style:{"text-align":"left"}},[t("code",null,"value4")],-1),Kn={style:{"text-align":"left"}},Xn=t("code",null,"DeepImmutableObject",-1),$n=t("code",null,"Vector2",-1),td=t("td",{style:{"text-align":"left"}},"defines 4th point of control",-1),ed=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"amount")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the interpolation factor")],-1),ld=a('<h4 id="returns-45" tabindex="-1"><a class="header-anchor" href="#returns-45" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector2</p><hr><h3 id="center" tabindex="-1"><a class="header-anchor" href="#center" aria-hidden="true">#</a> Center</h3><p>▸ <strong>Center</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>value2</code>): <code>T</code></p><p>Gets a new Vector2 located at the center of the vectors &quot;value1&quot; and &quot;value2&quot; Example Playground https://playground.babylonjs.com/#QYBWV4#86 Example Playground https://playground.babylonjs.com/#QYBWV4#66</p><h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4>',8),od=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),sd=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ad={style:{"text-align":"left"}},nd=t("code",null,"Vector2",-1),dd=t("h4",{id:"parameters-32",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-32","aria-hidden":"true"},"#"),e(" Parameters")],-1),rd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),cd=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines first vector")],-1),id=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),hd={style:{"text-align":"left"}},ud=t("code",null,"DeepImmutableObject",-1),_d=t("code",null,"Vector2",-1),fd=t("td",{style:{"text-align":"left"}},"defines second vector",-1),pd=a('<h4 id="returns-46" tabindex="-1"><a class="header-anchor" href="#returns-46" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector2</p><hr><h3 id="centertoref" tabindex="-1"><a class="header-anchor" href="#centertoref" aria-hidden="true">#</a> CenterToRef</h3><p>▸ <strong>CenterToRef</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>value2</code>, <code>ref</code>): <code>T</code></p><p>Gets the center of the vectors &quot;value1&quot; and &quot;value2&quot; and stores the result in the vector &quot;ref&quot; Example Playground https://playground.babylonjs.com/#QYBWV4#66</p><h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4>',8),yd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),md=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),gd={style:{"text-align":"left"}},xd=t("code",null,"Vector2",-1),bd=t("h4",{id:"parameters-33",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-33","aria-hidden":"true"},"#"),e(" Parameters")],-1),Vd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),vd=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),Td={style:{"text-align":"left"}},Dd=t("code",null,"DeepImmutableObject",-1),qd=t("code",null,"Vector2",-1),Pd=t("td",{style:{"text-align":"left"}},"defines first vector",-1),Rd=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),jd={style:{"text-align":"left"}},wd=t("code",null,"DeepImmutableObject",-1),Nd=t("code",null,"Vector2",-1),Id=t("td",{style:{"text-align":"left"}},"defines second vector",-1),Bd=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"ref")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines third vector")],-1),Od=a('<h4 id="returns-47" tabindex="-1"><a class="header-anchor" href="#returns-47" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>ref</p><hr><h3 id="clamp" tabindex="-1"><a class="header-anchor" href="#clamp" aria-hidden="true">#</a> Clamp</h3><p>▸ <strong>Clamp</strong>&lt;<code>T</code>&gt;(<code>value</code>, <code>min</code>, <code>max</code>): <code>T</code></p><p>Returns a new Vector2 set with same the coordinates than &quot;value&quot; ones if the vector &quot;value&quot; is in the square defined by &quot;min&quot; and &quot;max&quot;. If a coordinate of &quot;value&quot; is lower than &quot;min&quot; coordinates, the returned Vector2 is given this &quot;min&quot; coordinate. If a coordinate of &quot;value&quot; is greater than &quot;max&quot; coordinates, the returned Vector2 is given this &quot;max&quot; coordinate Example Playground https://playground.babylonjs.com/#QYBWV4#76</p><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4>',8),zd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Ed=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Wd={style:{"text-align":"left"}},Qd=t("code",null,"Vector2",-1),Yd=t("h4",{id:"parameters-34",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-34","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ad=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Gd=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the value to clamp")],-1),Cd=t("td",{style:{"text-align":"left"}},[t("code",null,"min")],-1),Fd={style:{"text-align":"left"}},Sd=t("code",null,"DeepImmutableObject",-1),Hd=t("code",null,"Vector2",-1),Md=t("td",{style:{"text-align":"left"}},"defines the lower limit",-1),Ld=t("td",{style:{"text-align":"left"}},[t("code",null,"max")],-1),kd={style:{"text-align":"left"}},Zd=t("code",null,"DeepImmutableObject",-1),Ud=t("code",null,"Vector2",-1),Jd=t("td",{style:{"text-align":"left"}},"defines the upper limit",-1),Kd=a('<h4 id="returns-48" tabindex="-1"><a class="header-anchor" href="#returns-48" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector2</p><hr><h3 id="distance" tabindex="-1"><a class="header-anchor" href="#distance" aria-hidden="true">#</a> Distance</h3><p>▸ <strong>Distance</strong>(<code>value1</code>, <code>value2</code>): <code>number</code></p><p>Gets the distance between the vectors &quot;value1&quot; and &quot;value2&quot; Example Playground https://playground.babylonjs.com/#QYBWV4#71</p><h4 id="parameters-35" tabindex="-1"><a class="header-anchor" href="#parameters-35" aria-hidden="true">#</a> Parameters</h4>',8),Xd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),$d=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),tr={style:{"text-align":"left"}},er=t("code",null,"DeepImmutableObject",-1),lr=t("code",null,"Vector2",-1),or=t("td",{style:{"text-align":"left"}},"defines first vector",-1),sr=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),ar={style:{"text-align":"left"}},nr=t("code",null,"DeepImmutableObject",-1),dr=t("code",null,"Vector2",-1),rr=t("td",{style:{"text-align":"left"}},"defines second vector",-1),cr=a('<h4 id="returns-49" tabindex="-1"><a class="header-anchor" href="#returns-49" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the distance between vectors</p><hr><h3 id="distanceofpointfromsegment" tabindex="-1"><a class="header-anchor" href="#distanceofpointfromsegment" aria-hidden="true">#</a> DistanceOfPointFromSegment</h3><p>▸ <strong>DistanceOfPointFromSegment</strong>(<code>p</code>, <code>segA</code>, <code>segB</code>): <code>number</code></p><p>Gets the shortest distance (float) between the point &quot;p&quot; and the segment defined by the two points &quot;segA&quot; and &quot;segB&quot;. Example Playground https://playground.babylonjs.com/#QYBWV4#77</p><h4 id="parameters-36" tabindex="-1"><a class="header-anchor" href="#parameters-36" aria-hidden="true">#</a> Parameters</h4>',8),ir=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),hr=t("td",{style:{"text-align":"left"}},[t("code",null,"p")],-1),ur={style:{"text-align":"left"}},_r=t("code",null,"DeepImmutableObject",-1),fr=t("code",null,"Vector2",-1),pr=t("td",{style:{"text-align":"left"}},"defines the middle point",-1),yr=t("td",{style:{"text-align":"left"}},[t("code",null,"segA")],-1),mr={style:{"text-align":"left"}},gr=t("code",null,"DeepImmutableObject",-1),xr=t("code",null,"Vector2",-1),br=t("td",{style:{"text-align":"left"}},"defines one point of the segment",-1),Vr=t("td",{style:{"text-align":"left"}},[t("code",null,"segB")],-1),vr={style:{"text-align":"left"}},Tr=t("code",null,"DeepImmutableObject",-1),Dr=t("code",null,"Vector2",-1),qr=t("td",{style:{"text-align":"left"}},"defines the other point of the segment",-1),Pr=a('<h4 id="returns-50" tabindex="-1"><a class="header-anchor" href="#returns-50" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the shortest distance</p><hr><h3 id="distancesquared" tabindex="-1"><a class="header-anchor" href="#distancesquared" aria-hidden="true">#</a> DistanceSquared</h3><p>▸ <strong>DistanceSquared</strong>(<code>value1</code>, <code>value2</code>): <code>number</code></p><p>Returns the squared distance between the vectors &quot;value1&quot; and &quot;value2&quot; Example Playground https://playground.babylonjs.com/#QYBWV4#72</p><h4 id="parameters-37" tabindex="-1"><a class="header-anchor" href="#parameters-37" aria-hidden="true">#</a> Parameters</h4>',8),Rr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),jr=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),wr={style:{"text-align":"left"}},Nr=t("code",null,"DeepImmutableObject",-1),Ir=t("code",null,"Vector2",-1),Br=t("td",{style:{"text-align":"left"}},"defines first vector",-1),Or=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),zr={style:{"text-align":"left"}},Er=t("code",null,"DeepImmutableObject",-1),Wr=t("code",null,"Vector2",-1),Qr=t("td",{style:{"text-align":"left"}},"defines second vector",-1),Yr=a('<h4 id="returns-51" tabindex="-1"><a class="header-anchor" href="#returns-51" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the squared distance between vectors</p><hr><h3 id="dot-1" tabindex="-1"><a class="header-anchor" href="#dot-1" aria-hidden="true">#</a> Dot</h3><p>▸ <strong>Dot</strong>(<code>left</code>, <code>right</code>): <code>number</code></p><p>Gets the dot product of the vector &quot;left&quot; and the vector &quot;right&quot; Example Playground https://playground.babylonjs.com/#QYBWV4#90</p><h4 id="parameters-38" tabindex="-1"><a class="header-anchor" href="#parameters-38" aria-hidden="true">#</a> Parameters</h4>',8),Ar=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Gr=t("td",{style:{"text-align":"left"}},[t("code",null,"left")],-1),Cr={style:{"text-align":"left"}},Fr=t("code",null,"DeepImmutableObject",-1),Sr=t("code",null,"Vector2",-1),Hr=t("td",{style:{"text-align":"left"}},"defines first vector",-1),Mr=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),Lr={style:{"text-align":"left"}},kr=t("code",null,"DeepImmutableObject",-1),Zr=t("code",null,"Vector2",-1),Ur=t("td",{style:{"text-align":"left"}},"defines second vector",-1),Jr=t("h4",{id:"returns-52",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-52","aria-hidden":"true"},"#"),e(" Returns")],-1),Kr=t("p",null,[t("code",null,"number")],-1),Xr=t("p",null,"the dot product (float)",-1),$r=t("hr",null,null,-1),tc=t("h3",{id:"fromarray-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fromarray-1","aria-hidden":"true"},"#"),e(" FromArray")],-1),ec=t("strong",null,"FromArray",-1),lc=t("code",null,"array",-1),oc=t("code",null,"offset?",-1),sc=t("code",null,"Vector2",-1),ac=a('<p>Gets a new Vector2 set from the given index element of the given array Example Playground https://playground.babylonjs.com/#QYBWV4#79</p><h4 id="parameters-39" tabindex="-1"><a class="header-anchor" href="#parameters-39" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>ArrayLike</code>&lt;<code>number</code>&gt;&gt;</td><td style="text-align:left;">defines the data source</td></tr><tr><td style="text-align:left;"><code>offset?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the data source</td></tr></tbody></table><h4 id="returns-53" tabindex="-1"><a class="header-anchor" href="#returns-53" aria-hidden="true">#</a> Returns</h4>',4),nc=t("code",null,"Vector2",-1),dc=a('<p>a new Vector2</p><hr><h3 id="fromarraytoref" tabindex="-1"><a class="header-anchor" href="#fromarraytoref" aria-hidden="true">#</a> FromArrayToRef</h3><p>▸ <strong>FromArrayToRef</strong>&lt;<code>T</code>&gt;(<code>array</code>, <code>offset</code>, <code>result</code>): <code>T</code></p><p>Sets &quot;result&quot; from the given index element of the given array Example Playground https://playground.babylonjs.com/#QYBWV4#80</p><h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4>',6),rc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),cc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ic={style:{"text-align":"left"}},hc=t("code",null,"Vector2",-1),uc=a('<h4 id="parameters-40" tabindex="-1"><a class="header-anchor" href="#parameters-40" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>ArrayLike</code>&lt;<code>number</code>&gt;&gt;</td><td style="text-align:left;">defines the data source</td></tr><tr><td style="text-align:left;"><code>offset</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the data source</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the target vector</td></tr></tbody></table><h4 id="returns-54" tabindex="-1"><a class="header-anchor" href="#returns-54" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="hermite" tabindex="-1"><a class="header-anchor" href="#hermite" aria-hidden="true">#</a> Hermite</h3><p>▸ <strong>Hermite</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>tangent1</code>, <code>value2</code>, <code>tangent2</code>, <code>amount</code>): <code>T</code></p><p>Returns a new Vector2 located for &quot;amount&quot; (float) on the Hermite spline defined by the vectors &quot;value1&quot;, &quot;value2&quot;, &quot;tangent1&quot;, &quot;tangent2&quot; Example Playground https://playground.babylonjs.com/#QYBWV4#81</p><h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4>',10),_c=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),fc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),pc={style:{"text-align":"left"}},yc=t("code",null,"Vector2",-1),mc=t("h4",{id:"parameters-41",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-41","aria-hidden":"true"},"#"),e(" Parameters")],-1),gc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),xc=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the 1st control point")],-1),bc=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent1")],-1),Vc={style:{"text-align":"left"}},vc=t("code",null,"DeepImmutableObject",-1),Tc=t("code",null,"Vector2",-1),Dc=t("td",{style:{"text-align":"left"}},"defines the outgoing tangent",-1),qc=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),Pc={style:{"text-align":"left"}},Rc=t("code",null,"DeepImmutableObject",-1),jc=t("code",null,"Vector2",-1),wc=t("td",{style:{"text-align":"left"}},"defines the 2nd control point",-1),Nc=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent2")],-1),Ic={style:{"text-align":"left"}},Bc=t("code",null,"DeepImmutableObject",-1),Oc=t("code",null,"Vector2",-1),zc=t("td",{style:{"text-align":"left"}},"defines the incoming tangent",-1),Ec=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"amount")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the interpolation factor")],-1),Wc=a('<h4 id="returns-55" tabindex="-1"><a class="header-anchor" href="#returns-55" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector2</p><hr><h3 id="hermite1stderivative" tabindex="-1"><a class="header-anchor" href="#hermite1stderivative" aria-hidden="true">#</a> Hermite1stDerivative</h3><p>▸ <strong>Hermite1stDerivative</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>tangent1</code>, <code>value2</code>, <code>tangent2</code>, <code>time</code>): <code>T</code></p><p>Returns a new Vector2 which is the 1st derivative of the Hermite spline defined by the vectors &quot;value1&quot;, &quot;value2&quot;, &quot;tangent1&quot;, &quot;tangent2&quot;. Example Playground https://playground.babylonjs.com/#QYBWV4#82</p><h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4>',8),Qc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Yc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Ac={style:{"text-align":"left"}},Gc=t("code",null,"Vector2",-1),Cc=t("h4",{id:"parameters-42",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-42","aria-hidden":"true"},"#"),e(" Parameters")],-1),Fc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Sc=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the first control point")],-1),Hc=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent1")],-1),Mc={style:{"text-align":"left"}},Lc=t("code",null,"DeepImmutableObject",-1),kc=t("code",null,"Vector2",-1),Zc=t("td",{style:{"text-align":"left"}},"defines the first tangent",-1),Uc=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),Jc={style:{"text-align":"left"}},Kc=t("code",null,"DeepImmutableObject",-1),Xc=t("code",null,"Vector2",-1),$c=t("td",{style:{"text-align":"left"}},"defines the second control point",-1),ti=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent2")],-1),ei={style:{"text-align":"left"}},li=t("code",null,"DeepImmutableObject",-1),oi=t("code",null,"Vector2",-1),si=t("td",{style:{"text-align":"left"}},"defines the second tangent",-1),ai=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"time")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define where the derivative must be done")],-1),ni=a('<h4 id="returns-56" tabindex="-1"><a class="header-anchor" href="#returns-56" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>1st derivative</p><hr><h3 id="hermite1stderivativetoref" tabindex="-1"><a class="header-anchor" href="#hermite1stderivativetoref" aria-hidden="true">#</a> Hermite1stDerivativeToRef</h3><p>▸ <strong>Hermite1stDerivativeToRef</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>tangent1</code>, <code>value2</code>, <code>tangent2</code>, <code>time</code>, <code>result</code>): <code>T</code></p><p>Returns a new Vector2 which is the 1st derivative of the Hermite spline defined by the vectors &quot;value1&quot;, &quot;value2&quot;, &quot;tangent1&quot;, &quot;tangent2&quot;. Example Playground https://playground.babylonjs.com/#QYBWV4#83</p><h4 id="type-parameters-16" tabindex="-1"><a class="header-anchor" href="#type-parameters-16" aria-hidden="true">#</a> Type parameters</h4>',8),di=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ri=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ci={style:{"text-align":"left"}},ii=t("code",null,"Vector2",-1),hi=t("h4",{id:"parameters-43",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-43","aria-hidden":"true"},"#"),e(" Parameters")],-1),ui=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),_i=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),fi={style:{"text-align":"left"}},pi=t("code",null,"DeepImmutableObject",-1),yi=t("code",null,"Vector2",-1),mi=t("td",{style:{"text-align":"left"}},"defines the first control point",-1),gi=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent1")],-1),xi={style:{"text-align":"left"}},bi=t("code",null,"DeepImmutableObject",-1),Vi=t("code",null,"Vector2",-1),vi=t("td",{style:{"text-align":"left"}},"defines the first tangent",-1),Ti=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),Di={style:{"text-align":"left"}},qi=t("code",null,"DeepImmutableObject",-1),Pi=t("code",null,"Vector2",-1),Ri=t("td",{style:{"text-align":"left"}},"defines the second control point",-1),ji=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent2")],-1),wi={style:{"text-align":"left"}},Ni=t("code",null,"DeepImmutableObject",-1),Ii=t("code",null,"Vector2",-1),Bi=t("td",{style:{"text-align":"left"}},"defines the second tangent",-1),Oi=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"time")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define where the derivative must be done")],-1),zi=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"define where the derivative will be stored")],-1),Ei=t("h4",{id:"returns-57",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-57","aria-hidden":"true"},"#"),e(" Returns")],-1),Wi=t("p",null,[t("code",null,"T")],-1),Qi=t("p",null,"result input",-1),Yi=t("hr",null,null,-1),Ai=t("h3",{id:"lerp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#lerp","aria-hidden":"true"},"#"),e(" Lerp")],-1),Gi=t("strong",null,"Lerp",-1),Ci=t("code",null,"T",-1),Fi=t("code",null,"start",-1),Si=t("code",null,"end",-1),Hi=t("code",null,"amount",-1),Mi=t("code",null,"Vector2",-1),Li=t("p",null,'Returns a new Vector2 located for "amount" (float) on the linear interpolation between the vector "start" adn the vector "end". Example Playground https://playground.babylonjs.com/#QYBWV4#84',-1),ki=t("h4",{id:"type-parameters-17",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-parameters-17","aria-hidden":"true"},"#"),e(" Type parameters")],-1),Zi=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Ui=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Ji={style:{"text-align":"left"}},Ki=t("code",null,"Vector2",-1),Xi=t("h4",{id:"parameters-44",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-44","aria-hidden":"true"},"#"),e(" Parameters")],-1),$i=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),th=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"start")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the start vector")],-1),eh=t("td",{style:{"text-align":"left"}},[t("code",null,"end")],-1),lh={style:{"text-align":"left"}},oh=t("code",null,"DeepImmutableObject",-1),sh=t("code",null,"Vector2",-1),ah=t("td",{style:{"text-align":"left"}},"defines the end vector",-1),nh=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"amount")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the interpolation factor")],-1),dh=t("h4",{id:"returns-58",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-58","aria-hidden":"true"},"#"),e(" Returns")],-1),rh=t("code",null,"Vector2",-1),ch=a('<p>a new Vector2</p><hr><h3 id="maximize" tabindex="-1"><a class="header-anchor" href="#maximize" aria-hidden="true">#</a> Maximize</h3><p>▸ <strong>Maximize</strong>&lt;<code>T</code>&gt;(<code>left</code>, <code>right</code>): <code>T</code></p><p>Gets a new Vector2 set with the maximal coordinate values from the &quot;left&quot; and &quot;right&quot; vectors Example Playground https://playground.babylonjs.com/#QYBWV4#86</p><h4 id="type-parameters-18" tabindex="-1"><a class="header-anchor" href="#type-parameters-18" aria-hidden="true">#</a> Type parameters</h4>',6),ih=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),hh=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),uh={style:{"text-align":"left"}},_h=t("code",null,"Vector2",-1),fh=t("h4",{id:"parameters-45",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-45","aria-hidden":"true"},"#"),e(" Parameters")],-1),ph=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),yh=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"left")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines 1st vector")],-1),mh=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),gh={style:{"text-align":"left"}},xh=t("code",null,"DeepImmutableObject",-1),bh=t("code",null,"Vector2",-1),Vh=t("td",{style:{"text-align":"left"}},"defines 2nd vector",-1),vh=a('<h4 id="returns-59" tabindex="-1"><a class="header-anchor" href="#returns-59" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector2</p><hr><h3 id="minimize" tabindex="-1"><a class="header-anchor" href="#minimize" aria-hidden="true">#</a> Minimize</h3><p>▸ <strong>Minimize</strong>&lt;<code>T</code>&gt;(<code>left</code>, <code>right</code>): <code>T</code></p><p>Gets a new Vector2 set with the minimal coordinate values from the &quot;left&quot; and &quot;right&quot; vectors Example Playground https://playground.babylonjs.com/#QYBWV4#86</p><h4 id="type-parameters-19" tabindex="-1"><a class="header-anchor" href="#type-parameters-19" aria-hidden="true">#</a> Type parameters</h4>',8),Th=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Dh=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),qh={style:{"text-align":"left"}},Ph=t("code",null,"Vector2",-1),Rh=t("h4",{id:"parameters-46",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-46","aria-hidden":"true"},"#"),e(" Parameters")],-1),jh=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),wh=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"left")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines 1st vector")],-1),Nh=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),Ih={style:{"text-align":"left"}},Bh=t("code",null,"DeepImmutableObject",-1),Oh=t("code",null,"Vector2",-1),zh=t("td",{style:{"text-align":"left"}},"defines 2nd vector",-1),Eh=a('<h4 id="returns-60" tabindex="-1"><a class="header-anchor" href="#returns-60" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector2</p><hr><h3 id="normalize-1" tabindex="-1"><a class="header-anchor" href="#normalize-1" aria-hidden="true">#</a> Normalize</h3><p>▸ <strong>Normalize</strong>&lt;<code>T</code>&gt;(<code>vector</code>): <code>T</code></p><p>Returns a new Vector2 equal to the normalized given vector Example Playground https://playground.babylonjs.com/#QYBWV4#46</p><h4 id="type-parameters-20" tabindex="-1"><a class="header-anchor" href="#type-parameters-20" aria-hidden="true">#</a> Type parameters</h4>',8),Wh=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Qh=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Yh={style:{"text-align":"left"}},Ah=t("code",null,"Vector2",-1),Gh=a('<h4 id="parameters-47" tabindex="-1"><a class="header-anchor" href="#parameters-47" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>vector</code></td><td style="text-align:left;"><code>DeepImmutable</code>&lt;<code>T</code>&gt;</td><td style="text-align:left;">defines the vector to normalize</td></tr></tbody></table><h4 id="returns-61" tabindex="-1"><a class="header-anchor" href="#returns-61" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector2</p><hr><h3 id="normalizetoref-1" tabindex="-1"><a class="header-anchor" href="#normalizetoref-1" aria-hidden="true">#</a> NormalizeToRef</h3><p>▸ <strong>NormalizeToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>result</code>): <code>T</code></p><p>Normalize a given vector into a second one Example Playground https://playground.babylonjs.com/#QYBWV4#50</p><h4 id="type-parameters-21" tabindex="-1"><a class="header-anchor" href="#type-parameters-21" aria-hidden="true">#</a> Type parameters</h4>',10),Ch=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Fh=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Sh={style:{"text-align":"left"}},Hh=t("code",null,"Vector2",-1),Mh=t("h4",{id:"parameters-48",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-48","aria-hidden":"true"},"#"),e(" Parameters")],-1),Lh=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),kh=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),Zh={style:{"text-align":"left"}},Uh=t("code",null,"DeepImmutableObject",-1),Jh=t("code",null,"Vector2",-1),Kh=t("td",{style:{"text-align":"left"}},"defines the vector to normalize",-1),Xh=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the vector where to store the result")],-1),$h=t("h4",{id:"returns-62",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-62","aria-hidden":"true"},"#"),e(" Returns")],-1),tu=t("p",null,[t("code",null,"T")],-1),eu=t("p",null,"result input",-1),lu=t("hr",null,null,-1),ou=t("h3",{id:"one",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#one","aria-hidden":"true"},"#"),e(" One")],-1),su=t("strong",null,"One",-1),au=t("code",null,"Vector2",-1),nu=t("p",null,"Gets a new Vector2(1, 1)",-1),du=t("h4",{id:"returns-63",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-63","aria-hidden":"true"},"#"),e(" Returns")],-1),ru=t("code",null,"Vector2",-1),cu=a('<p>a new Vector2</p><hr><h3 id="pointintriangle" tabindex="-1"><a class="header-anchor" href="#pointintriangle" aria-hidden="true">#</a> PointInTriangle</h3><p>▸ <strong>PointInTriangle</strong>(<code>p</code>, <code>p0</code>, <code>p1</code>, <code>p2</code>): <code>boolean</code></p><p>Determines if a given vector is included in a triangle Example Playground https://playground.babylonjs.com/#QYBWV4#87</p><h4 id="parameters-49" tabindex="-1"><a class="header-anchor" href="#parameters-49" aria-hidden="true">#</a> Parameters</h4>',6),iu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),hu=t("td",{style:{"text-align":"left"}},[t("code",null,"p")],-1),uu={style:{"text-align":"left"}},_u=t("code",null,"DeepImmutableObject",-1),fu=t("code",null,"Vector2",-1),pu=t("td",{style:{"text-align":"left"}},"defines the vector to test",-1),yu=t("td",{style:{"text-align":"left"}},[t("code",null,"p0")],-1),mu={style:{"text-align":"left"}},gu=t("code",null,"DeepImmutableObject",-1),xu=t("code",null,"Vector2",-1),bu=t("td",{style:{"text-align":"left"}},"defines 1st triangle point",-1),Vu=t("td",{style:{"text-align":"left"}},[t("code",null,"p1")],-1),vu={style:{"text-align":"left"}},Tu=t("code",null,"DeepImmutableObject",-1),Du=t("code",null,"Vector2",-1),qu=t("td",{style:{"text-align":"left"}},"defines 2nd triangle point",-1),Pu=t("td",{style:{"text-align":"left"}},[t("code",null,"p2")],-1),Ru={style:{"text-align":"left"}},ju=t("code",null,"DeepImmutableObject",-1),wu=t("code",null,"Vector2",-1),Nu=t("td",{style:{"text-align":"left"}},"defines 3rd triangle point",-1),Iu=t("h4",{id:"returns-64",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-64","aria-hidden":"true"},"#"),e(" Returns")],-1),Bu=t("p",null,[t("code",null,"boolean")],-1),Ou=t("p",null,'true if the point "p" is in the triangle defined by the vectors "p0", "p1", "p2"',-1),zu=t("hr",null,null,-1),Eu=t("h3",{id:"random",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#random","aria-hidden":"true"},"#"),e(" Random")],-1),Wu=t("strong",null,"Random",-1),Qu=t("code",null,"min?",-1),Yu=t("code",null,"max?",-1),Au=t("code",null,"Vector2",-1),Gu=a('<p>Returns a new Vector2 with random values between min and max</p><h4 id="parameters-50" tabindex="-1"><a class="header-anchor" href="#parameters-50" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>min?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the minimum random value</td></tr><tr><td style="text-align:left;"><code>max?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the maximum random value</td></tr></tbody></table><h4 id="returns-65" tabindex="-1"><a class="header-anchor" href="#returns-65" aria-hidden="true">#</a> Returns</h4>',4),Cu=t("code",null,"Vector2",-1),Fu=a('<p>a Vector2 with random values between min and max</p><hr><h3 id="transform" tabindex="-1"><a class="header-anchor" href="#transform" aria-hidden="true">#</a> Transform</h3><p>▸ <strong>Transform</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>transformation</code>): <code>T</code></p><p>Gets a new Vector2 set with the transformed coordinates of the given vector by the given transformation matrix Example Playground https://playground.babylonjs.com/#QYBWV4#17</p><h4 id="type-parameters-22" tabindex="-1"><a class="header-anchor" href="#type-parameters-22" aria-hidden="true">#</a> Type parameters</h4>',6),Su=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Hu=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Mu={style:{"text-align":"left"}},Lu=t("code",null,"Vector2",-1),ku=t("h4",{id:"parameters-51",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-51","aria-hidden":"true"},"#"),e(" Parameters")],-1),Zu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Uu=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"vector")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the vector to transform")],-1),Ju=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),Ku={style:{"text-align":"left"}},Xu=t("code",null,"DeepImmutableObject",-1),$u=t("code",null,"Matrix",-1),t_=t("td",{style:{"text-align":"left"}},"defines the matrix to apply",-1),e_=a('<h4 id="returns-66" tabindex="-1"><a class="header-anchor" href="#returns-66" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector2</p><hr><h3 id="transformtoref" tabindex="-1"><a class="header-anchor" href="#transformtoref" aria-hidden="true">#</a> TransformToRef</h3><p>▸ <strong>TransformToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Transforms the given vector coordinates by the given transformation matrix and stores the result in the vector &quot;result&quot; coordinates Example Playground https://playground.babylonjs.com/#QYBWV4#19</p><h4 id="type-parameters-23" tabindex="-1"><a class="header-anchor" href="#type-parameters-23" aria-hidden="true">#</a> Type parameters</h4>',8),l_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),o_=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),s_={style:{"text-align":"left"}},a_=t("code",null,"Vector2",-1),n_=t("h4",{id:"parameters-52",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-52","aria-hidden":"true"},"#"),e(" Parameters")],-1),d_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),r_=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),c_={style:{"text-align":"left"}},i_=t("code",null,"DeepImmutableObject",-1),h_=t("code",null,"Vector2",-1),u_=t("td",{style:{"text-align":"left"}},"defines the vector to transform",-1),__=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),f_={style:{"text-align":"left"}},p_=t("code",null,"DeepImmutableObject",-1),y_=t("code",null,"Matrix",-1),m_=t("td",{style:{"text-align":"left"}},"defines the matrix to apply",-1),g_=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the target vector")],-1),x_=t("h4",{id:"returns-67",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-67","aria-hidden":"true"},"#"),e(" Returns")],-1),b_=t("p",null,[t("code",null,"T")],-1),V_=t("p",null,"result input",-1),v_=t("hr",null,null,-1),T_=t("h3",{id:"zero",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#zero","aria-hidden":"true"},"#"),e(" Zero")],-1),D_=t("strong",null,"Zero",-1),q_=t("code",null,"Vector2",-1),P_=t("p",null,"Gets a new Vector2(0, 0)",-1),R_=t("h4",{id:"returns-68",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-68","aria-hidden":"true"},"#"),e(" Returns")],-1),j_=t("code",null,"Vector2",-1),w_=t("p",null,"a new Vector2",-1);function N_(I_,B_){const l=d("RouterLink");return r(),c("div",null,[h,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector2.html#constructor"},{default:s(()=>[e("constructor")]),_:1})])]),u,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector2.html#x"},{default:s(()=>[e("x")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#y"},{default:s(()=>[e("y")]),_:1})])]),_,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector2.html#zeroreadonly"},{default:s(()=>[e("ZeroReadOnly")]),_:1})])]),f,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector2.html#add"},{default:s(()=>[e("add")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#addinplace"},{default:s(()=>[e("addInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#addtoref"},{default:s(()=>[e("addToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#addvector3"},{default:s(()=>[e("addVector3")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#asarray"},{default:s(()=>[e("asArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#clone"},{default:s(()=>[e("clone")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#copyfrom"},{default:s(()=>[e("copyFrom")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#copyfromfloats"},{default:s(()=>[e("copyFromFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#divide"},{default:s(()=>[e("divide")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#divideinplace"},{default:s(()=>[e("divideInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#dividetoref"},{default:s(()=>[e("divideToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#dot"},{default:s(()=>[e("dot")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#equals"},{default:s(()=>[e("equals")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#equalswithepsilon"},{default:s(()=>[e("equalsWithEpsilon")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#floor"},{default:s(()=>[e("floor")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#fract"},{default:s(()=>[e("fract")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#fromarray"},{default:s(()=>[e("fromArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#getclassname"},{default:s(()=>[e("getClassName")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#gethashcode"},{default:s(()=>[e("getHashCode")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#length"},{default:s(()=>[e("length")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#lengthsquared"},{default:s(()=>[e("lengthSquared")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#multiply"},{default:s(()=>[e("multiply")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#multiplybyfloats"},{default:s(()=>[e("multiplyByFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#multiplyinplace"},{default:s(()=>[e("multiplyInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#multiplytoref"},{default:s(()=>[e("multiplyToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#negate"},{default:s(()=>[e("negate")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#negateinplace"},{default:s(()=>[e("negateInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#negatetoref"},{default:s(()=>[e("negateToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#normalize"},{default:s(()=>[e("normalize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#normalizefromlength"},{default:s(()=>[e("normalizeFromLength")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#normalizetonew"},{default:s(()=>[e("normalizeToNew")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#normalizetoref"},{default:s(()=>[e("normalizeToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#rotatetoref"},{default:s(()=>[e("rotateToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#scale"},{default:s(()=>[e("scale")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#scaleandaddtoref"},{default:s(()=>[e("scaleAndAddToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#scaleinplace"},{default:s(()=>[e("scaleInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#scaletoref"},{default:s(()=>[e("scaleToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#set"},{default:s(()=>[e("set")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#subtract"},{default:s(()=>[e("subtract")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#subtractinplace"},{default:s(()=>[e("subtractInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#subtracttoref"},{default:s(()=>[e("subtractToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#toarray"},{default:s(()=>[e("toArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#tostring"},{default:s(()=>[e("toString")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#catmullrom"},{default:s(()=>[e("CatmullRom")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#center"},{default:s(()=>[e("Center")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#centertoref"},{default:s(()=>[e("CenterToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#clamp"},{default:s(()=>[e("Clamp")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#distance"},{default:s(()=>[e("Distance")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#distanceofpointfromsegment"},{default:s(()=>[e("DistanceOfPointFromSegment")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#distancesquared"},{default:s(()=>[e("DistanceSquared")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#dot-1"},{default:s(()=>[e("Dot")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#fromarray-1"},{default:s(()=>[e("FromArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#fromarraytoref"},{default:s(()=>[e("FromArrayToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#hermite"},{default:s(()=>[e("Hermite")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#hermite1stderivative"},{default:s(()=>[e("Hermite1stDerivative")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#hermite1stderivativetoref"},{default:s(()=>[e("Hermite1stDerivativeToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#lerp"},{default:s(()=>[e("Lerp")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#maximize"},{default:s(()=>[e("Maximize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#minimize"},{default:s(()=>[e("Minimize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#normalize-1"},{default:s(()=>[e("Normalize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#normalizetoref-1"},{default:s(()=>[e("NormalizeToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#one"},{default:s(()=>[e("One")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#pointintriangle"},{default:s(()=>[e("PointInTriangle")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#random"},{default:s(()=>[e("Random")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#transform"},{default:s(()=>[e("Transform")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#transformtoref"},{default:s(()=>[e("TransformToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html#zero"},{default:s(()=>[e("Zero")]),_:1})])]),p,y,t("p",null,[e("• "),m,e("("),g,e(", "),x,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[b]),_:1})]),V,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[v]),_:1})]),T,t("p",null,[e("• "),D,e(),q,e("(): "),P,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[R]),_:1}),e(">")]),j,w,t("p",null,[N,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[I]),_:1}),e(">")]),B,O,t("p",null,[e("▸ "),z,e("("),E,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[W]),_:1})]),Q,Y,t("table",null,[A,t("tbody",null,[t("tr",null,[G,t("td",C,[F,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[S]),_:1}),e(">")]),H])])]),M,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[L]),_:1})]),k,Z,U,t("p",null,[e("▸ "),J,e("("),K,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[X]),_:1})]),$,tt,t("table",null,[et,t("tbody",null,[t("tr",null,[lt,t("td",ot,[st,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[at]),_:1}),e(">")]),nt])])]),dt,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[rt]),_:1})]),ct,t("table",null,[it,t("tbody",null,[t("tr",null,[ht,t("td",ut,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[_t]),_:1})])])])]),ft,t("table",null,[pt,t("tbody",null,[t("tr",null,[yt,t("td",mt,[gt,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[xt]),_:1}),e(">")]),bt]),Vt])]),vt,Tt,Dt,qt,Pt,t("p",null,[e("▸ "),Rt,e("("),jt,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[wt]),_:1})]),Nt,It,t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ot,t("td",zt,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Et]),_:1})]),Wt])])]),Qt,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Yt]),_:1})]),At,t("p",null,[e("▸ "),Gt,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ct]),_:1})]),Ft,St,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ht]),_:1})]),Mt,Lt,kt,t("p",null,[e("▸ "),Zt,e("("),Ut,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Jt]),_:1})]),Kt,Xt,t("table",null,[$t,t("tbody",null,[t("tr",null,[te,t("td",ee,[le,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[oe]),_:1}),e(">")]),se])])]),ae,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ne]),_:1})]),de,re,ce,t("p",null,[e("▸ "),ie,e("("),he,e(", "),ue,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[_e]),_:1})]),fe,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[pe]),_:1})]),ye,me,ge,t("p",null,[e("▸ "),xe,e("("),be,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ve]),_:1})]),ve,Te,t("table",null,[De,t("tbody",null,[t("tr",null,[qe,t("td",Pe,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Re]),_:1})]),je])])]),we,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ne]),_:1})]),Ie,Be,Oe,t("p",null,[e("▸ "),ze,e("("),Ee,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[We]),_:1})]),Qe,Ye,t("table",null,[Ae,t("tbody",null,[t("tr",null,[Ge,t("td",Ce,[Fe,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Se]),_:1}),e(">")]),He])])]),Me,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Le]),_:1})]),ke,t("table",null,[Ze,t("tbody",null,[t("tr",null,[Ue,t("td",Je,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ke]),_:1})])])])]),Xe,t("table",null,[$e,t("tbody",null,[t("tr",null,[tl,t("td",el,[ll,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ol]),_:1}),e(">")]),sl]),al])]),nl,t("table",null,[dl,t("tbody",null,[t("tr",null,[rl,t("td",cl,[il,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[hl]),_:1}),e(">")]),ul])])]),_l,t("table",null,[fl,t("tbody",null,[t("tr",null,[pl,t("td",yl,[ml,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[gl]),_:1}),e(">")]),xl])])]),bl,t("table",null,[Vl,t("tbody",null,[t("tr",null,[vl,t("td",Tl,[Dl,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ql]),_:1}),e(">")]),Pl]),Rl])]),jl,wl,Nl,Il,Bl,t("p",null,[e("▸ "),Ol,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[zl]),_:1})]),El,Wl,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ql]),_:1})]),Yl,Al,Gl,t("p",null,[e("▸ "),Cl,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Fl]),_:1})]),Sl,Hl,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ml]),_:1})]),Ll,kl,Zl,t("p",null,[e("▸ "),Ul,e("("),Jl,e(", "),Kl,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Xl]),_:1})]),$l,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[to]),_:1})]),eo,t("p",null,[e("▸ "),lo,e("("),oo,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[so]),_:1})]),ao,no,t("table",null,[ro,t("tbody",null,[t("tr",null,[co,t("td",io,[ho,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[uo]),_:1}),e(">")]),_o])])]),fo,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[po]),_:1})]),yo,mo,go,t("p",null,[e("▸ "),xo,e("("),bo,e(", "),Vo,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[vo]),_:1})]),To,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Do]),_:1})]),qo,Po,Ro,t("p",null,[e("▸ "),jo,e("("),wo,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[No]),_:1})]),Io,Bo,t("table",null,[Oo,t("tbody",null,[t("tr",null,[zo,t("td",Eo,[Wo,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Qo]),_:1}),e(">")]),Yo])])]),Ao,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Go]),_:1})]),Co,t("table",null,[Fo,t("tbody",null,[t("tr",null,[So,t("td",Ho,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Mo]),_:1})])])])]),Lo,t("table",null,[ko,t("tbody",null,[t("tr",null,[Zo,t("td",Uo,[Jo,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ko]),_:1}),e(">")]),Xo]),$o])]),ts,es,ls,os,ss,t("p",null,[e("▸ "),as,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ns]),_:1})]),ds,rs,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[cs]),_:1})]),is,hs,us,t("p",null,[e("▸ "),_s,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[fs]),_:1})]),ps,ys,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ms]),_:1})]),gs,t("table",null,[xs,t("tbody",null,[t("tr",null,[bs,t("td",Vs,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[vs]),_:1})])])])]),Ts,t("p",null,[e("▸ "),Ds,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[qs]),_:1})]),Ps,Rs,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[js]),_:1})]),ws,Ns,Is,t("p",null,[e("▸ "),Bs,e("("),Os,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[zs]),_:1})]),Es,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ws]),_:1})]),Qs,Ys,As,t("p",null,[e("▸ "),Gs,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Cs]),_:1})]),Fs,Ss,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Hs]),_:1})]),Ms,t("table",null,[Ls,t("tbody",null,[t("tr",null,[ks,t("td",Zs,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Us]),_:1})])])])]),Js,t("table",null,[Ks,t("tbody",null,[t("tr",null,[Xs,t("td",$s,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ta]),_:1})])])])]),ea,t("p",null,[e("▸ "),la,e("("),oa,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[sa]),_:1})]),aa,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[na]),_:1})]),da,t("table",null,[ra,t("tbody",null,[t("tr",null,[ca,t("td",ia,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ha]),_:1})])])])]),ua,t("p",null,[e("▸ "),_a,e("("),fa,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[pa]),_:1})]),ya,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ma]),_:1})]),ga,t("table",null,[xa,t("tbody",null,[t("tr",null,[ba,t("td",Va,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[va]),_:1})])])])]),Ta,t("p",null,[e("▸ "),Da,e("("),qa,e(", "),Pa,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ra]),_:1})]),ja,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[wa]),_:1})]),Na,Ia,Ba,t("p",null,[e("▸ "),Oa,e("("),za,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ea]),_:1})]),Wa,Qa,t("table",null,[Ya,t("tbody",null,[t("tr",null,[Aa,t("td",Ga,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ca]),_:1})]),Fa])])]),Sa,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ha]),_:1})]),Ma,La,ka,t("p",null,[e("▸ "),Za,e("("),Ua,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ja]),_:1})]),Ka,Xa,t("table",null,[$a,t("tbody",null,[t("tr",null,[tn,t("td",en,[ln,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[on]),_:1}),e(">")]),sn])])]),an,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[nn]),_:1})]),dn,t("table",null,[rn,t("tbody",null,[t("tr",null,[cn,t("td",hn,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[un]),_:1})])])])]),_n,t("table",null,[fn,t("tbody",null,[t("tr",null,[pn,t("td",yn,[mn,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[gn]),_:1}),e(">")]),xn]),bn])]),Vn,vn,Tn,Dn,qn,t("p",null,[e("▸ "),Pn,e("("),Rn,e(", "),jn,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[wn]),_:1})]),Nn,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[In]),_:1})]),Bn,t("table",null,[On,t("tbody",null,[t("tr",null,[zn,t("td",En,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Wn]),_:1})])])])]),Qn,t("table",null,[Yn,t("tbody",null,[An,t("tr",null,[Gn,t("td",Cn,[Fn,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Sn]),_:1}),e(">")]),Hn]),t("tr",null,[Mn,t("td",Ln,[kn,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Zn]),_:1}),e(">")]),Un]),t("tr",null,[Jn,t("td",Kn,[Xn,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[$n]),_:1}),e(">")]),td]),ed])]),ld,t("table",null,[od,t("tbody",null,[t("tr",null,[sd,t("td",ad,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[nd]),_:1})])])])]),dd,t("table",null,[rd,t("tbody",null,[cd,t("tr",null,[id,t("td",hd,[ud,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[_d]),_:1}),e(">")]),fd])])]),pd,t("table",null,[yd,t("tbody",null,[t("tr",null,[md,t("td",gd,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[xd]),_:1})])])])]),bd,t("table",null,[Vd,t("tbody",null,[t("tr",null,[vd,t("td",Td,[Dd,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[qd]),_:1}),e(">")]),Pd]),t("tr",null,[Rd,t("td",jd,[wd,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Nd]),_:1}),e(">")]),Id]),Bd])]),Od,t("table",null,[zd,t("tbody",null,[t("tr",null,[Ed,t("td",Wd,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Qd]),_:1})])])])]),Yd,t("table",null,[Ad,t("tbody",null,[Gd,t("tr",null,[Cd,t("td",Fd,[Sd,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Hd]),_:1}),e(">")]),Md]),t("tr",null,[Ld,t("td",kd,[Zd,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ud]),_:1}),e(">")]),Jd])])]),Kd,t("table",null,[Xd,t("tbody",null,[t("tr",null,[$d,t("td",tr,[er,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[lr]),_:1}),e(">")]),or]),t("tr",null,[sr,t("td",ar,[nr,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[dr]),_:1}),e(">")]),rr])])]),cr,t("table",null,[ir,t("tbody",null,[t("tr",null,[hr,t("td",ur,[_r,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[fr]),_:1}),e(">")]),pr]),t("tr",null,[yr,t("td",mr,[gr,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[xr]),_:1}),e(">")]),br]),t("tr",null,[Vr,t("td",vr,[Tr,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Dr]),_:1}),e(">")]),qr])])]),Pr,t("table",null,[Rr,t("tbody",null,[t("tr",null,[jr,t("td",wr,[Nr,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ir]),_:1}),e(">")]),Br]),t("tr",null,[Or,t("td",zr,[Er,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Wr]),_:1}),e(">")]),Qr])])]),Yr,t("table",null,[Ar,t("tbody",null,[t("tr",null,[Gr,t("td",Cr,[Fr,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Sr]),_:1}),e(">")]),Hr]),t("tr",null,[Mr,t("td",Lr,[kr,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Zr]),_:1}),e(">")]),Ur])])]),Jr,Kr,Xr,$r,tc,t("p",null,[e("▸ "),ec,e("("),lc,e(", "),oc,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[sc]),_:1})]),ac,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[nc]),_:1})]),dc,t("table",null,[rc,t("tbody",null,[t("tr",null,[cc,t("td",ic,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[hc]),_:1})])])])]),uc,t("table",null,[_c,t("tbody",null,[t("tr",null,[fc,t("td",pc,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[yc]),_:1})])])])]),mc,t("table",null,[gc,t("tbody",null,[xc,t("tr",null,[bc,t("td",Vc,[vc,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Tc]),_:1}),e(">")]),Dc]),t("tr",null,[qc,t("td",Pc,[Rc,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[jc]),_:1}),e(">")]),wc]),t("tr",null,[Nc,t("td",Ic,[Bc,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Oc]),_:1}),e(">")]),zc]),Ec])]),Wc,t("table",null,[Qc,t("tbody",null,[t("tr",null,[Yc,t("td",Ac,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Gc]),_:1})])])])]),Cc,t("table",null,[Fc,t("tbody",null,[Sc,t("tr",null,[Hc,t("td",Mc,[Lc,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[kc]),_:1}),e(">")]),Zc]),t("tr",null,[Uc,t("td",Jc,[Kc,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Xc]),_:1}),e(">")]),$c]),t("tr",null,[ti,t("td",ei,[li,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[oi]),_:1}),e(">")]),si]),ai])]),ni,t("table",null,[di,t("tbody",null,[t("tr",null,[ri,t("td",ci,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ii]),_:1})])])])]),hi,t("table",null,[ui,t("tbody",null,[t("tr",null,[_i,t("td",fi,[pi,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[yi]),_:1}),e(">")]),mi]),t("tr",null,[gi,t("td",xi,[bi,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Vi]),_:1}),e(">")]),vi]),t("tr",null,[Ti,t("td",Di,[qi,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Pi]),_:1}),e(">")]),Ri]),t("tr",null,[ji,t("td",wi,[Ni,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ii]),_:1}),e(">")]),Bi]),Oi,zi])]),Ei,Wi,Qi,Yi,Ai,t("p",null,[e("▸ "),Gi,e("<"),Ci,e(">("),Fi,e(", "),Si,e(", "),Hi,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Mi]),_:1})]),Li,ki,t("table",null,[Zi,t("tbody",null,[t("tr",null,[Ui,t("td",Ji,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ki]),_:1})])])])]),Xi,t("table",null,[$i,t("tbody",null,[th,t("tr",null,[eh,t("td",lh,[oh,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[sh]),_:1}),e(">")]),ah]),nh])]),dh,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[rh]),_:1})]),ch,t("table",null,[ih,t("tbody",null,[t("tr",null,[hh,t("td",uh,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[_h]),_:1})])])])]),fh,t("table",null,[ph,t("tbody",null,[yh,t("tr",null,[mh,t("td",gh,[xh,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[bh]),_:1}),e(">")]),Vh])])]),vh,t("table",null,[Th,t("tbody",null,[t("tr",null,[Dh,t("td",qh,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ph]),_:1})])])])]),Rh,t("table",null,[jh,t("tbody",null,[wh,t("tr",null,[Nh,t("td",Ih,[Bh,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Oh]),_:1}),e(">")]),zh])])]),Eh,t("table",null,[Wh,t("tbody",null,[t("tr",null,[Qh,t("td",Yh,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Ah]),_:1})])])])]),Gh,t("table",null,[Ch,t("tbody",null,[t("tr",null,[Fh,t("td",Sh,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Hh]),_:1})])])])]),Mh,t("table",null,[Lh,t("tbody",null,[t("tr",null,[kh,t("td",Zh,[Uh,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Jh]),_:1}),e(">")]),Kh]),Xh])]),$h,tu,eu,lu,ou,t("p",null,[e("▸ "),su,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[au]),_:1})]),nu,du,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[ru]),_:1})]),cu,t("table",null,[iu,t("tbody",null,[t("tr",null,[hu,t("td",uu,[_u,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[fu]),_:1}),e(">")]),pu]),t("tr",null,[yu,t("td",mu,[gu,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[xu]),_:1}),e(">")]),bu]),t("tr",null,[Vu,t("td",vu,[Tu,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Du]),_:1}),e(">")]),qu]),t("tr",null,[Pu,t("td",Ru,[ju,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[wu]),_:1}),e(">")]),Nu])])]),Iu,Bu,Ou,zu,Eu,t("p",null,[e("▸ "),Wu,e("("),Qu,e(", "),Yu,e("): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Au]),_:1})]),Gu,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Cu]),_:1})]),Fu,t("table",null,[Su,t("tbody",null,[t("tr",null,[Hu,t("td",Mu,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[Lu]),_:1})])])])]),ku,t("table",null,[Zu,t("tbody",null,[Uu,t("tr",null,[Ju,t("td",Ku,[Xu,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[$u]),_:1}),e(">")]),t_])])]),e_,t("table",null,[l_,t("tbody",null,[t("tr",null,[o_,t("td",s_,[e("extends "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[a_]),_:1})])])])]),n_,t("table",null,[d_,t("tbody",null,[t("tr",null,[r_,t("td",c_,[i_,e("<"),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[h_]),_:1}),e(">")]),u_]),t("tr",null,[__,t("td",f_,[p_,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[y_]),_:1}),e(">")]),m_]),g_])]),x_,b_,V_,v_,T_,t("p",null,[e("▸ "),D_,e("(): "),o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[q_]),_:1})]),P_,R_,t("p",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:s(()=>[j_]),_:1})]),w_])}const z_=n(i,[["render",N_],["__file","Vector2.html.vue"]]);export{z_ as default};
