import{_ as d,r,o as n,c,a as t,b as o,w as s,d as e,e as a}from"./app-fBKvO6Dl.js";const h={},i=a('<h1 id="class-vector4" tabindex="-1"><a class="header-anchor" href="#class-vector4" aria-hidden="true">#</a> Class: Vector4</h1><p>Vector4 class created for EulerAngle class conversion to Quaternion</p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>',4),u=t("h3",{id:"properties",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),e(" Properties")],-1),_=t("h3",{id:"accessors",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#accessors","aria-hidden":"true"},"#"),e(" Accessors")],-1),f=t("h3",{id:"methods",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),e(" Methods")],-1),m=t("h2",{id:"constructors-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),e(" Constructors")],-1),p=t("h3",{id:"constructor",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),e(" constructor")],-1),y=t("strong",null,"new Vector4",-1),x=t("code",null,"x?",-1),g=t("code",null,"y?",-1),b=t("code",null,"z?",-1),V=t("code",null,"w?",-1),v=t("code",null,"Vector4",-1),T=a('<p>Creates a Vector4 object from the given floats.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">x value of the vector</td></tr><tr><td style="text-align:left;"><code>y?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">y value of the vector</td></tr><tr><td style="text-align:left;"><code>z?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">z value of the vector</td></tr><tr><td style="text-align:left;"><code>w?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">w value of the vector</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',4),w=t("code",null,"Vector4",-1),R=a('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="w" tabindex="-1"><a class="header-anchor" href="#w" aria-hidden="true">#</a> w</h3><p>• <strong>w</strong>: <code>number</code></p><p>w value of the vector</p><hr><h3 id="x" tabindex="-1"><a class="header-anchor" href="#x" aria-hidden="true">#</a> x</h3><p>• <strong>x</strong>: <code>number</code></p><p>x value of the vector</p><hr><h3 id="y" tabindex="-1"><a class="header-anchor" href="#y" aria-hidden="true">#</a> y</h3><p>• <strong>y</strong>: <code>number</code></p><p>y value of the vector</p><hr><h3 id="z" tabindex="-1"><a class="header-anchor" href="#z" aria-hidden="true">#</a> z</h3><p>• <strong>z</strong>: <code>number</code></p><p>z value of the vector</p><h2 id="accessors-1" tabindex="-1"><a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a> Accessors</h2><h3 id="zeroreadonly" tabindex="-1"><a class="header-anchor" href="#zeroreadonly" aria-hidden="true">#</a> ZeroReadOnly</h3>',18),z=t("code",null,"get",-1),D=t("strong",null,"ZeroReadOnly",-1),N=t("code",null,"DeepImmutableObject",-1),q=t("code",null,"Vector4",-1),P=t("p",null,"Gets a zero Vector4 that must not be updated",-1),I=t("h4",{id:"returns-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),e(" Returns")],-1),F=t("code",null,"DeepImmutableObject",-1),O=t("code",null,"Vector4",-1),j=t("h2",{id:"methods-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),e(" Methods")],-1),A=t("h3",{id:"add",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#add","aria-hidden":"true"},"#"),e(" add")],-1),C=t("strong",null,"add",-1),M=t("code",null,"otherVector",-1),S=t("code",null,"Vector4",-1),U=t("p",null,"Returns a new Vector4 as the result of the addition of the current Vector4 and the given one.",-1),B=t("h4",{id:"parameters-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),e(" Parameters")],-1),k=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),L=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Z={style:{"text-align":"left"}},E=t("code",null,"DeepImmutableObject",-1),G=t("code",null,"Vector4",-1),H=t("td",{style:{"text-align":"left"}},"the vector to add",-1),W=t("h4",{id:"returns-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),e(" Returns")],-1),Q=t("code",null,"Vector4",-1),J=t("p",null,"the resulting vector",-1),K=t("hr",null,null,-1),X=t("h3",{id:"addinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#addinplace","aria-hidden":"true"},"#"),e(" addInPlace")],-1),Y=t("strong",null,"addInPlace",-1),$=t("code",null,"otherVector",-1),tt=t("code",null,"Vector4",-1),et=t("p",null,"Adds the given vector to the current Vector4.",-1),lt=t("h4",{id:"parameters-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),e(" Parameters")],-1),ot=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),st=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),at={style:{"text-align":"left"}},dt=t("code",null,"DeepImmutableObject",-1),rt=t("code",null,"Vector4",-1),nt=t("td",{style:{"text-align":"left"}},"the vector to add",-1),ct=t("h4",{id:"returns-3",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),e(" Returns")],-1),ht=t("code",null,"Vector4",-1),it=a('<p>the updated Vector4.</p><hr><h3 id="addtoref" tabindex="-1"><a class="header-anchor" href="#addtoref" aria-hidden="true">#</a> addToRef</h3><p>▸ <strong>addToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Updates the given vector &quot;result&quot; with the result of the addition of the current Vector4 and the given one.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4>',6),ut=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),_t=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ft={style:{"text-align":"left"}},mt=t("code",null,"Vector4",-1),pt=t("h4",{id:"parameters-3",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),e(" Parameters")],-1),yt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),xt=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),gt={style:{"text-align":"left"}},bt=t("code",null,"DeepImmutableObject",-1),Vt=t("code",null,"Vector4",-1),vt=t("td",{style:{"text-align":"left"}},"the vector to add",-1),Tt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the vector to store the result")],-1),wt=a('<h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="asarray" tabindex="-1"><a class="header-anchor" href="#asarray" aria-hidden="true">#</a> asArray</h3><p>▸ <strong>asArray</strong>(): <code>number</code>[]</p><p>Returns a new array populated with 4 elements : the Vector4 coordinates.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>number</code>[]</p><p>the resulting array</p><hr><h3 id="clone" tabindex="-1"><a class="header-anchor" href="#clone" aria-hidden="true">#</a> clone</h3>',12),Rt=t("strong",null,"clone",-1),zt=t("code",null,"Vector4",-1),Dt=t("p",null,"Returns a new Vector4 copied from the current one.",-1),Nt=t("h4",{id:"returns-6",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-6","aria-hidden":"true"},"#"),e(" Returns")],-1),qt=t("code",null,"Vector4",-1),Pt=t("p",null,"the new cloned vector",-1),It=t("hr",null,null,-1),Ft=t("h3",{id:"copyfrom",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#copyfrom","aria-hidden":"true"},"#"),e(" copyFrom")],-1),Ot=t("strong",null,"copyFrom",-1),jt=t("code",null,"source",-1),At=t("code",null,"Vector4",-1),Ct=t("p",null,"Updates the current Vector4 with the given one coordinates.",-1),Mt=t("h4",{id:"parameters-4",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-4","aria-hidden":"true"},"#"),e(" Parameters")],-1),St=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ut=t("td",{style:{"text-align":"left"}},[t("code",null,"source")],-1),Bt={style:{"text-align":"left"}},kt=t("code",null,"DeepImmutableObject",-1),Lt=t("code",null,"Vector4",-1),Zt=t("td",{style:{"text-align":"left"}},"the source vector to copy from",-1),Et=t("h4",{id:"returns-7",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-7","aria-hidden":"true"},"#"),e(" Returns")],-1),Gt=t("code",null,"Vector4",-1),Ht=t("p",null,"the updated Vector4.",-1),Wt=t("hr",null,null,-1),Qt=t("h3",{id:"copyfromfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#copyfromfloats","aria-hidden":"true"},"#"),e(" copyFromFloats")],-1),Jt=t("strong",null,"copyFromFloats",-1),Kt=t("code",null,"x",-1),Xt=t("code",null,"y",-1),Yt=t("code",null,"z",-1),$t=t("code",null,"w",-1),te=t("code",null,"Vector4",-1),ee=a('<p>Updates the current Vector4 coordinates with the given floats.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to copy from</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to copy from</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to copy from</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to copy from</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4>',4),le=t("code",null,"Vector4",-1),oe=t("p",null,"the updated Vector4.",-1),se=t("hr",null,null,-1),ae=t("h3",{id:"divide",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#divide","aria-hidden":"true"},"#"),e(" divide")],-1),de=t("strong",null,"divide",-1),re=t("code",null,"otherVector",-1),ne=t("code",null,"Vector4",-1),ce=t("p",null,"Returns a new Vector4 set with the division result of the current Vector4 by the given one.",-1),he=t("h4",{id:"parameters-6",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),e(" Parameters")],-1),ie=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ue=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),_e={style:{"text-align":"left"}},fe=t("code",null,"DeepImmutableObject",-1),me=t("code",null,"Vector4",-1),pe=t("td",{style:{"text-align":"left"}},"vector to devide with",-1),ye=t("h4",{id:"returns-9",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),e(" Returns")],-1),xe=t("code",null,"Vector4",-1),ge=t("p",null,"resulting new vector",-1),be=t("hr",null,null,-1),Ve=t("h3",{id:"divideinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#divideinplace","aria-hidden":"true"},"#"),e(" divideInPlace")],-1),ve=t("strong",null,"divideInPlace",-1),Te=t("code",null,"otherVector",-1),we=t("code",null,"Vector4",-1),Re=t("p",null,"Divides the current Vector3 coordinates by the given ones.",-1),ze=t("h4",{id:"parameters-7",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),e(" Parameters")],-1),De=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ne=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),qe={style:{"text-align":"left"}},Pe=t("code",null,"DeepImmutableObject",-1),Ie=t("code",null,"Vector4",-1),Fe=t("td",{style:{"text-align":"left"}},"vector to devide with",-1),Oe=t("h4",{id:"returns-10",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),e(" Returns")],-1),je=t("code",null,"Vector4",-1),Ae=a('<p>the updated Vector3.</p><hr><h3 id="dividetoref" tabindex="-1"><a class="header-anchor" href="#dividetoref" aria-hidden="true">#</a> divideToRef</h3><p>▸ <strong>divideToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Updates the given vector &quot;result&quot; with the division result of the current Vector4 by the given one.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',6),Ce=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Me=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Se={style:{"text-align":"left"}},Ue=t("code",null,"Vector4",-1),Be=t("h4",{id:"parameters-8",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-8","aria-hidden":"true"},"#"),e(" Parameters")],-1),ke=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Le=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Ze={style:{"text-align":"left"}},Ee=t("code",null,"DeepImmutableObject",-1),Ge=t("code",null,"Vector4",-1),He=t("td",{style:{"text-align":"left"}},"vector to devide with",-1),We=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"vector to store the result")],-1),Qe=a('<h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="dot" tabindex="-1"><a class="header-anchor" href="#dot" aria-hidden="true">#</a> dot</h3><p>▸ <strong>dot</strong>(<code>otherVector</code>): <code>number</code></p><p>Returns the dot product (float) between the current vectors and &quot;otherVector&quot;</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4>',8),Je=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ke=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Xe={style:{"text-align":"left"}},Ye=t("code",null,"DeepImmutableObject",-1),$e=t("code",null,"Vector4",-1),tl=t("td",{style:{"text-align":"left"}},"defines the right operand",-1),el=a('<h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the dot product</p><hr><h3 id="equals" tabindex="-1"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> equals</h3><p>▸ <strong>equals</strong>(<code>otherVector</code>): <code>boolean</code></p><p>Boolean : True if the current Vector4 coordinates are stricly equal to the given ones.</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>',8),ll=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ol=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),sl={style:{"text-align":"left"}},al=t("code",null,"DeepImmutableObject",-1),dl=t("code",null,"Vector4",-1),rl=t("td",{style:{"text-align":"left"}},"the vector to compare against",-1),nl=a('<h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><p>true if they are equal</p><hr><h3 id="equalstofloats" tabindex="-1"><a class="header-anchor" href="#equalstofloats" aria-hidden="true">#</a> equalsToFloats</h3><p>▸ <strong>equalsToFloats</strong>(<code>x</code>, <code>y</code>, <code>z</code>, <code>w</code>): <code>boolean</code></p><p>Boolean : True if the given floats are strictly equal to the current Vector4 coordinates.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">x value to compare against</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">y value to compare against</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">z value to compare against</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">w value to compare against</td></tr></tbody></table><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><p>true if equal</p><hr><h3 id="equalswithepsilon" tabindex="-1"><a class="header-anchor" href="#equalswithepsilon" aria-hidden="true">#</a> equalsWithEpsilon</h3><p>▸ <strong>equalsWithEpsilon</strong>(<code>otherVector</code>, <code>epsilon?</code>): <code>boolean</code></p><p>Boolean : True if the current Vector4 coordinates are each beneath the distance &quot;epsilon&quot; from the given vector ones.</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4>',17),cl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),hl=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),il={style:{"text-align":"left"}},ul=t("code",null,"DeepImmutableObject",-1),_l=t("code",null,"Vector4",-1),fl=t("td",{style:{"text-align":"left"}},"vector to compare against",-1),ml=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"epsilon?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"(Default: very small number)")],-1),pl=t("h4",{id:"returns-15",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),e(" Returns")],-1),yl=t("p",null,[t("code",null,"boolean")],-1),xl=t("p",null,"true if they are equal",-1),gl=t("hr",null,null,-1),bl=t("h3",{id:"floor",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#floor","aria-hidden":"true"},"#"),e(" floor")],-1),Vl=t("strong",null,"floor",-1),vl=t("code",null,"Vector4",-1),Tl=t("p",null,"Gets a new Vector4 from current Vector4 floored values",-1),wl=t("h4",{id:"returns-16",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),e(" Returns")],-1),Rl=t("code",null,"Vector4",-1),zl=t("p",null,"a new Vector4",-1),Dl=t("hr",null,null,-1),Nl=t("h3",{id:"fract",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fract","aria-hidden":"true"},"#"),e(" fract")],-1),ql=t("strong",null,"fract",-1),Pl=t("code",null,"Vector4",-1),Il=t("p",null,"Gets a new Vector4 from current Vector4 fractional values",-1),Fl=t("h4",{id:"returns-17",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),e(" Returns")],-1),Ol=t("code",null,"Vector4",-1),jl=t("p",null,"a new Vector4",-1),Al=t("hr",null,null,-1),Cl=t("h3",{id:"fromarray",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fromarray","aria-hidden":"true"},"#"),e(" fromArray")],-1),Ml=t("strong",null,"fromArray",-1),Sl=t("code",null,"array",-1),Ul=t("code",null,"index?",-1),Bl=t("code",null,"Vector4",-1),kl=a('<p>Update the current vector from an array</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>FloatArray</code></td><td style="text-align:left;">defines the destination array</td></tr><tr><td style="text-align:left;"><code>index?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the destination array</td></tr></tbody></table><h4 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18" aria-hidden="true">#</a> Returns</h4>',4),Ll=t("code",null,"Vector4",-1),Zl=a('<p>the current Vector3</p><hr><h3 id="getclassname" tabindex="-1"><a class="header-anchor" href="#getclassname" aria-hidden="true">#</a> getClassName</h3><p>▸ <strong>getClassName</strong>(): <code>string</code></p><p>Returns the string &quot;Vector4&quot;.</p><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>&quot;Vector4&quot;</p><hr><h3 id="gethashcode" tabindex="-1"><a class="header-anchor" href="#gethashcode" aria-hidden="true">#</a> getHashCode</h3><p>▸ <strong>getHashCode</strong>(): <code>number</code></p><p>Returns the Vector4 hash code.</p><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>a unique hash code</p><hr><h3 id="length" tabindex="-1"><a class="header-anchor" href="#length" aria-hidden="true">#</a> length</h3><p>▸ <strong>length</strong>(): <code>number</code></p><p>Returns the Vector4 length (float).</p><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the length</p><hr><h3 id="lengthsquared" tabindex="-1"><a class="header-anchor" href="#lengthsquared" aria-hidden="true">#</a> lengthSquared</h3><p>▸ <strong>lengthSquared</strong>(): <code>number</code></p><p>Returns the Vector4 squared length (float).</p><h4 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the length squared</p><hr><h3 id="maximizeinplace" tabindex="-1"><a class="header-anchor" href="#maximizeinplace" aria-hidden="true">#</a> maximizeInPlace</h3>',31),El=t("strong",null,"maximizeInPlace",-1),Gl=t("code",null,"other",-1),Hl=t("code",null,"Vector4",-1),Wl=t("p",null,"Updates the Vector4 coordinates with the maximum values between its own and the given vector ones",-1),Ql=t("h4",{id:"parameters-14",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-14","aria-hidden":"true"},"#"),e(" Parameters")],-1),Jl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Kl=t("td",{style:{"text-align":"left"}},[t("code",null,"other")],-1),Xl={style:{"text-align":"left"}},Yl=t("code",null,"DeepImmutableObject",-1),$l=t("code",null,"Vector4",-1),to=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),eo=t("h4",{id:"returns-23",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),e(" Returns")],-1),lo=t("code",null,"Vector4",-1),oo=t("p",null,"the current updated Vector4",-1),so=t("hr",null,null,-1),ao=t("h3",{id:"minimizeinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#minimizeinplace","aria-hidden":"true"},"#"),e(" minimizeInPlace")],-1),ro=t("strong",null,"minimizeInPlace",-1),no=t("code",null,"other",-1),co=t("code",null,"Vector4",-1),ho=t("p",null,"Updates the Vector4 coordinates with the minimum values between its own and the given vector ones",-1),io=t("h4",{id:"parameters-15",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-15","aria-hidden":"true"},"#"),e(" Parameters")],-1),uo=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),_o=t("td",{style:{"text-align":"left"}},[t("code",null,"other")],-1),fo={style:{"text-align":"left"}},mo=t("code",null,"DeepImmutableObject",-1),po=t("code",null,"Vector4",-1),yo=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),xo=t("h4",{id:"returns-24",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-24","aria-hidden":"true"},"#"),e(" Returns")],-1),go=t("code",null,"Vector4",-1),bo=t("p",null,"the current updated Vector4",-1),Vo=t("hr",null,null,-1),vo=t("h3",{id:"multiply",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#multiply","aria-hidden":"true"},"#"),e(" multiply")],-1),To=t("strong",null,"multiply",-1),wo=t("code",null,"otherVector",-1),Ro=t("code",null,"Vector4",-1),zo=t("p",null,"Returns a new Vector4 set with the multiplication result of the current Vector4 and the given one.",-1),Do=t("h4",{id:"parameters-16",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-16","aria-hidden":"true"},"#"),e(" Parameters")],-1),No=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),qo=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Po={style:{"text-align":"left"}},Io=t("code",null,"DeepImmutableObject",-1),Fo=t("code",null,"Vector4",-1),Oo=t("td",{style:{"text-align":"left"}},"vector to multiple with",-1),jo=t("h4",{id:"returns-25",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-25","aria-hidden":"true"},"#"),e(" Returns")],-1),Ao=t("code",null,"Vector4",-1),Co=t("p",null,"resulting new vector",-1),Mo=t("hr",null,null,-1),So=t("h3",{id:"multiplybyfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#multiplybyfloats","aria-hidden":"true"},"#"),e(" multiplyByFloats")],-1),Uo=t("strong",null,"multiplyByFloats",-1),Bo=t("code",null,"x",-1),ko=t("code",null,"y",-1),Lo=t("code",null,"z",-1),Zo=t("code",null,"w",-1),Eo=t("code",null,"Vector4",-1),Go=a('<p>Returns a new Vector4 set with the multiplication result of the given floats and the current Vector4 coordinates.</p><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">x value multiply with</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">y value multiply with</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">z value multiply with</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">w value multiply with</td></tr></tbody></table><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26" aria-hidden="true">#</a> Returns</h4>',4),Ho=t("code",null,"Vector4",-1),Wo=t("p",null,"resulting new vector",-1),Qo=t("hr",null,null,-1),Jo=t("h3",{id:"multiplyinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#multiplyinplace","aria-hidden":"true"},"#"),e(" multiplyInPlace")],-1),Ko=t("strong",null,"multiplyInPlace",-1),Xo=t("code",null,"otherVector",-1),Yo=t("code",null,"Vector4",-1),$o=t("p",null,"Multiplies in place the current Vector4 by the given one.",-1),ts=t("h4",{id:"parameters-18",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-18","aria-hidden":"true"},"#"),e(" Parameters")],-1),es=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ls=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),os={style:{"text-align":"left"}},ss=t("code",null,"Vector4",-1),as=t("td",{style:{"text-align":"left"}},"vector to multiple with",-1),ds=t("h4",{id:"returns-27",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-27","aria-hidden":"true"},"#"),e(" Returns")],-1),rs=t("code",null,"Vector4",-1),ns=a('<p>the updated Vector4.</p><hr><h3 id="multiplytoref" tabindex="-1"><a class="header-anchor" href="#multiplytoref" aria-hidden="true">#</a> multiplyToRef</h3><p>▸ <strong>multiplyToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Updates the given vector &quot;result&quot; with the multiplication result of the current Vector4 and the given one.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',6),cs=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),hs=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),is={style:{"text-align":"left"}},us=t("code",null,"Vector4",-1),_s=t("h4",{id:"parameters-19",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-19","aria-hidden":"true"},"#"),e(" Parameters")],-1),fs=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ms=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),ps={style:{"text-align":"left"}},ys=t("code",null,"DeepImmutableObject",-1),xs=t("code",null,"Vector4",-1),gs=t("td",{style:{"text-align":"left"}},"vector to multiple with",-1),bs=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"vector to store the result")],-1),Vs=t("h4",{id:"returns-28",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-28","aria-hidden":"true"},"#"),e(" Returns")],-1),vs=t("p",null,[t("code",null,"T")],-1),Ts=t("p",null,"result input",-1),ws=t("hr",null,null,-1),Rs=t("h3",{id:"negate",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#negate","aria-hidden":"true"},"#"),e(" negate")],-1),zs=t("strong",null,"negate",-1),Ds=t("code",null,"Vector4",-1),Ns=t("p",null,"Returns a new Vector4 set with the current Vector4 negated coordinates.",-1),qs=t("h4",{id:"returns-29",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-29","aria-hidden":"true"},"#"),e(" Returns")],-1),Ps=t("code",null,"Vector4",-1),Is=t("p",null,"a new vector with the negated values",-1),Fs=t("hr",null,null,-1),Os=t("h3",{id:"negateinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#negateinplace","aria-hidden":"true"},"#"),e(" negateInPlace")],-1),js=t("strong",null,"negateInPlace",-1),As=t("code",null,"Vector4",-1),Cs=t("p",null,"Negate this vector in place",-1),Ms=t("h4",{id:"returns-30",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-30","aria-hidden":"true"},"#"),e(" Returns")],-1),Ss=t("code",null,"Vector4",-1),Us=a('<p>this</p><hr><h3 id="negatetoref" tabindex="-1"><a class="header-anchor" href="#negatetoref" aria-hidden="true">#</a> negateToRef</h3><p>▸ <strong>negateToRef</strong>&lt;<code>T</code>&gt;(<code>result</code>): <code>T</code></p><p>Negate the current Vector4 and stores the result in the given vector &quot;result&quot; coordinates</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',6),Bs=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ks=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Ls={style:{"text-align":"left"}},Zs=t("code",null,"Vector4",-1),Es=a('<h4 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 object where to store the result</td></tr></tbody></table><h4 id="returns-31" tabindex="-1"><a class="header-anchor" href="#returns-31" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the result</p><hr><h3 id="normalize" tabindex="-1"><a class="header-anchor" href="#normalize" aria-hidden="true">#</a> normalize</h3>',7),Gs=t("strong",null,"normalize",-1),Hs=t("code",null,"Vector4",-1),Ws=t("p",null,"Normalizes in place the Vector4.",-1),Qs=t("h4",{id:"returns-32",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-32","aria-hidden":"true"},"#"),e(" Returns")],-1),Js=t("code",null,"Vector4",-1),Ks=t("p",null,"the updated Vector4.",-1),Xs=t("hr",null,null,-1),Ys=t("h3",{id:"normalizefromlength",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#normalizefromlength","aria-hidden":"true"},"#"),e(" normalizeFromLength")],-1),$s=t("strong",null,"normalizeFromLength",-1),ta=t("code",null,"len",-1),ea=t("code",null,"Vector4",-1),la=a('<p>Normalize the current Vector4 with the given input length. Please note that this is an in place operation.</p><h4 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>len</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the length of the vector</td></tr></tbody></table><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33" aria-hidden="true">#</a> Returns</h4>',4),oa=t("code",null,"Vector4",-1),sa=t("p",null,"the current updated Vector4",-1),aa=t("hr",null,null,-1),da=t("h3",{id:"normalizetonew",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#normalizetonew","aria-hidden":"true"},"#"),e(" normalizeToNew")],-1),ra=t("strong",null,"normalizeToNew",-1),na=t("code",null,"Vector4",-1),ca=t("p",null,"Normalize the current Vector4 to a new vector",-1),ha=t("h4",{id:"returns-34",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-34","aria-hidden":"true"},"#"),e(" Returns")],-1),ia=t("code",null,"Vector4",-1),ua=a('<p>the new Vector4</p><hr><h3 id="normalizetoref" tabindex="-1"><a class="header-anchor" href="#normalizetoref" aria-hidden="true">#</a> normalizeToRef</h3><p>▸ <strong>normalizeToRef</strong>&lt;<code>T</code>&gt;(<code>reference</code>): <code>T</code></p><p>Normalize the current Vector4 to the reference</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',6),_a=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),fa=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ma={style:{"text-align":"left"}},pa=t("code",null,"Vector4",-1),ya=a('<h4 id="parameters-22" tabindex="-1"><a class="header-anchor" href="#parameters-22" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>reference</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">define the Vector4 to update</td></tr></tbody></table><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the updated Vector4</p><hr><h3 id="scale" tabindex="-1"><a class="header-anchor" href="#scale" aria-hidden="true">#</a> scale</h3>',7),xa=t("strong",null,"scale",-1),ga=t("code",null,"scale",-1),ba=t("code",null,"Vector4",-1),Va=a('<p>Returns a new Vector4 set with the current Vector4 coordinates multiplied by scale (float).</p><h4 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the number to scale with</td></tr></tbody></table><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36" aria-hidden="true">#</a> Returns</h4>',4),va=t("code",null,"Vector4",-1),Ta=a('<p>a new vector with the result</p><hr><h3 id="scaleandaddtoref" tabindex="-1"><a class="header-anchor" href="#scaleandaddtoref" aria-hidden="true">#</a> scaleAndAddToRef</h3><p>▸ <strong>scaleAndAddToRef</strong>&lt;<code>T</code>&gt;(<code>scale</code>, <code>result</code>): <code>T</code></p><p>Scale the current Vector4 values by a factor and add the result to a given Vector4</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4>',6),wa=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Ra=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),za={style:{"text-align":"left"}},Da=t("code",null,"Vector4",-1),Na=a('<h4 id="parameters-24" tabindex="-1"><a class="header-anchor" href="#parameters-24" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the scale factor</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector4 object where to store the result</td></tr></tbody></table><h4 id="returns-37" tabindex="-1"><a class="header-anchor" href="#returns-37" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="scaleinplace" tabindex="-1"><a class="header-anchor" href="#scaleinplace" aria-hidden="true">#</a> scaleInPlace</h3>',7),qa=t("strong",null,"scaleInPlace",-1),Pa=t("code",null,"scale",-1),Ia=t("code",null,"Vector4",-1),Fa=a('<p>Multiplies the current Vector4 coordinates by scale (float).</p><h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the number to scale with</td></tr></tbody></table><h4 id="returns-38" tabindex="-1"><a class="header-anchor" href="#returns-38" aria-hidden="true">#</a> Returns</h4>',4),Oa=t("code",null,"Vector4",-1),ja=a('<p>the updated Vector4.</p><hr><h3 id="scaletoref" tabindex="-1"><a class="header-anchor" href="#scaletoref" aria-hidden="true">#</a> scaleToRef</h3><p>▸ <strong>scaleToRef</strong>&lt;<code>T</code>&gt;(<code>scale</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the current Vector4 coordinates multiplied by scale (float).</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',6),Aa=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Ca=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Ma={style:{"text-align":"left"}},Sa=t("code",null,"Vector4",-1),Ua=a('<h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the number to scale with</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">a vector to store the result in</td></tr></tbody></table><h4 id="returns-39" tabindex="-1"><a class="header-anchor" href="#returns-39" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set</h3>',7),Ba=t("strong",null,"set",-1),ka=t("code",null,"x",-1),La=t("code",null,"y",-1),Za=t("code",null,"z",-1),Ea=t("code",null,"w",-1),Ga=t("code",null,"Vector4",-1),Ha=a('<p>Updates the current Vector4 coordinates with the given floats.</p><h4 id="parameters-27" tabindex="-1"><a class="header-anchor" href="#parameters-27" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to set from</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to set from</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to set from</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to set from</td></tr></tbody></table><h4 id="returns-40" tabindex="-1"><a class="header-anchor" href="#returns-40" aria-hidden="true">#</a> Returns</h4>',4),Wa=t("code",null,"Vector4",-1),Qa=t("p",null,"the updated Vector4.",-1),Ja=t("hr",null,null,-1),Ka=t("h3",{id:"setall",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#setall","aria-hidden":"true"},"#"),e(" setAll")],-1),Xa=t("strong",null,"setAll",-1),Ya=t("code",null,"v",-1),$a=t("code",null,"Vector4",-1),td=a('<p>Copies the given float to the current Vector3 coordinates</p><h4 id="parameters-28" tabindex="-1"><a class="header-anchor" href="#parameters-28" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x, y, z and w coordinates of the operand</td></tr></tbody></table><h4 id="returns-41" tabindex="-1"><a class="header-anchor" href="#returns-41" aria-hidden="true">#</a> Returns</h4>',4),ed=t("code",null,"Vector4",-1),ld=t("p",null,"the current updated Vector3",-1),od=t("hr",null,null,-1),sd=t("h3",{id:"subtract",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#subtract","aria-hidden":"true"},"#"),e(" subtract")],-1),ad=t("strong",null,"subtract",-1),dd=t("code",null,"otherVector",-1),rd=t("code",null,"Vector4",-1),nd=t("p",null,"Returns a new Vector4 with the result of the subtraction of the given vector from the current Vector4.",-1),cd=t("h4",{id:"parameters-29",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-29","aria-hidden":"true"},"#"),e(" Parameters")],-1),hd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),id=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),ud={style:{"text-align":"left"}},_d=t("code",null,"DeepImmutableObject",-1),fd=t("code",null,"Vector4",-1),md=t("td",{style:{"text-align":"left"}},"the vector to add",-1),pd=t("h4",{id:"returns-42",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-42","aria-hidden":"true"},"#"),e(" Returns")],-1),yd=t("code",null,"Vector4",-1),xd=t("p",null,"the new vector with the result",-1),gd=t("hr",null,null,-1),bd=t("h3",{id:"subtractfromfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#subtractfromfloats","aria-hidden":"true"},"#"),e(" subtractFromFloats")],-1),Vd=t("strong",null,"subtractFromFloats",-1),vd=t("code",null,"x",-1),Td=t("code",null,"y",-1),wd=t("code",null,"z",-1),Rd=t("code",null,"w",-1),zd=t("code",null,"Vector4",-1),Dd=a('<p>Returns a new Vector4 set with the result of the subtraction of the given floats from the current Vector4 coordinates.</p><h4 id="parameters-30" tabindex="-1"><a class="header-anchor" href="#parameters-30" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">value to subtract</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">value to subtract</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">value to subtract</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">value to subtract</td></tr></tbody></table><h4 id="returns-43" tabindex="-1"><a class="header-anchor" href="#returns-43" aria-hidden="true">#</a> Returns</h4>',4),Nd=t("code",null,"Vector4",-1),qd=a('<p>new vector containing the result</p><hr><h3 id="subtractfromfloatstoref" tabindex="-1"><a class="header-anchor" href="#subtractfromfloatstoref" aria-hidden="true">#</a> subtractFromFloatsToRef</h3><p>▸ <strong>subtractFromFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>x</code>, <code>y</code>, <code>z</code>, <code>w</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; set with the result of the subtraction of the given floats from the current Vector4 coordinates.</p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4>',6),Pd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Id=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Fd={style:{"text-align":"left"}},Od=t("code",null,"Vector4",-1),jd=a('<h4 id="parameters-31" tabindex="-1"><a class="header-anchor" href="#parameters-31" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">value to subtract</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">value to subtract</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">value to subtract</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">value to subtract</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">the vector to store the result in</td></tr></tbody></table><h4 id="returns-44" tabindex="-1"><a class="header-anchor" href="#returns-44" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="subtractinplace" tabindex="-1"><a class="header-anchor" href="#subtractinplace" aria-hidden="true">#</a> subtractInPlace</h3>',7),Ad=t("strong",null,"subtractInPlace",-1),Cd=t("code",null,"otherVector",-1),Md=t("code",null,"Vector4",-1),Sd=t("p",null,"Subtract in place the given vector from the current Vector4.",-1),Ud=t("h4",{id:"parameters-32",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-32","aria-hidden":"true"},"#"),e(" Parameters")],-1),Bd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),kd=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Ld={style:{"text-align":"left"}},Zd=t("code",null,"DeepImmutableObject",-1),Ed=t("code",null,"Vector4",-1),Gd=t("td",{style:{"text-align":"left"}},"the vector to subtract",-1),Hd=t("h4",{id:"returns-45",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-45","aria-hidden":"true"},"#"),e(" Returns")],-1),Wd=t("code",null,"Vector4",-1),Qd=a('<p>the updated Vector4.</p><hr><h3 id="subtracttoref" tabindex="-1"><a class="header-anchor" href="#subtracttoref" aria-hidden="true">#</a> subtractToRef</h3><p>▸ <strong>subtractToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the result of the subtraction of the given vector from the current Vector4.</p><h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4>',6),Jd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Kd=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Xd={style:{"text-align":"left"}},Yd=t("code",null,"Vector4",-1),$d=t("h4",{id:"parameters-33",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-33","aria-hidden":"true"},"#"),e(" Parameters")],-1),tr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),er=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),lr={style:{"text-align":"left"}},or=t("code",null,"DeepImmutableObject",-1),sr=t("code",null,"Vector4",-1),ar=t("td",{style:{"text-align":"left"}},"the vector to subtract",-1),dr=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the vector to store the result")],-1),rr=t("h4",{id:"returns-46",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-46","aria-hidden":"true"},"#"),e(" Returns")],-1),nr=t("p",null,[t("code",null,"T")],-1),cr=t("p",null,"result input",-1),hr=t("hr",null,null,-1),ir=t("h3",{id:"toarray",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#toarray","aria-hidden":"true"},"#"),e(" toArray")],-1),ur=t("strong",null,"toArray",-1),_r=t("code",null,"array",-1),fr=t("code",null,"index?",-1),mr=t("code",null,"Vector4",-1),pr=a('<p>Populates the given array from the given index with the Vector4 coordinates.</p><h4 id="parameters-34" tabindex="-1"><a class="header-anchor" href="#parameters-34" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>FloatArray</code></td><td style="text-align:left;">array to populate</td></tr><tr><td style="text-align:left;"><code>index?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">index of the array to start at (default: 0)</td></tr></tbody></table><h4 id="returns-47" tabindex="-1"><a class="header-anchor" href="#returns-47" aria-hidden="true">#</a> Returns</h4>',4),yr=t("code",null,"Vector4",-1),xr=a('<p>the Vector4.</p><hr><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><p>▸ <strong>toString</strong>(): <code>string</code></p><p>Returns the string with the Vector4 coordinates.</p><h4 id="returns-48" tabindex="-1"><a class="header-anchor" href="#returns-48" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>a string containing all the vector values</p><hr><h3 id="tovector3" tabindex="-1"><a class="header-anchor" href="#tovector3" aria-hidden="true">#</a> toVector3</h3>',10),gr=t("strong",null,"toVector3",-1),br=t("code",null,"Vector3",-1),Vr=t("p",null,"Returns a new Vector3 from the Vector4 (x, y, z) coordinates.",-1),vr=t("h4",{id:"returns-49",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-49","aria-hidden":"true"},"#"),e(" Returns")],-1),Tr=t("code",null,"Vector3",-1),wr=t("p",null,"this converted to a new vector3",-1),Rr=t("hr",null,null,-1),zr=t("h3",{id:"center",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#center","aria-hidden":"true"},"#"),e(" Center")],-1),Dr=t("strong",null,"Center",-1),Nr=t("code",null,"value1",-1),qr=t("code",null,"value2",-1),Pr=t("code",null,"Vector4",-1),Ir=t("p",null,'Returns a new Vector4 located at the center between the vectors "value1" and "value2".',-1),Fr=t("h4",{id:"parameters-35",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-35","aria-hidden":"true"},"#"),e(" Parameters")],-1),Or=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),jr=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),Ar={style:{"text-align":"left"}},Cr=t("code",null,"DeepImmutableObject",-1),Mr=t("code",null,"Vector4",-1),Sr=t("td",{style:{"text-align":"left"}},"value to calulate the center between",-1),Ur=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),Br={style:{"text-align":"left"}},kr=t("code",null,"DeepImmutableObject",-1),Lr=t("code",null,"Vector4",-1),Zr=t("td",{style:{"text-align":"left"}},"value to calulate the center between",-1),Er=t("h4",{id:"returns-50",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-50","aria-hidden":"true"},"#"),e(" Returns")],-1),Gr=t("code",null,"Vector4",-1),Hr=a('<p>the center between the two vectors</p><hr><h3 id="centertoref" tabindex="-1"><a class="header-anchor" href="#centertoref" aria-hidden="true">#</a> CenterToRef</h3><p>▸ <strong>CenterToRef</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>value2</code>, <code>ref</code>): <code>T</code></p><p>Gets the center of the vectors &quot;value1&quot; and &quot;value2&quot; and stores the result in the vector &quot;ref&quot;</p><h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h4>',6),Wr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Qr=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Jr={style:{"text-align":"left"}},Kr=t("code",null,"Vector4",-1),Xr=t("h4",{id:"parameters-36",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-36","aria-hidden":"true"},"#"),e(" Parameters")],-1),Yr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),$r=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),tn={style:{"text-align":"left"}},en=t("code",null,"DeepImmutableObject",-1),ln=t("code",null,"Vector4",-1),on=t("td",{style:{"text-align":"left"}},"defines first vector",-1),sn=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),an={style:{"text-align":"left"}},dn=t("code",null,"DeepImmutableObject",-1),rn=t("code",null,"Vector4",-1),nn=t("td",{style:{"text-align":"left"}},"defines second vector",-1),cn=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"ref")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines third vector")],-1),hn=a('<h4 id="returns-51" tabindex="-1"><a class="header-anchor" href="#returns-51" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>ref</p><hr><h3 id="distance" tabindex="-1"><a class="header-anchor" href="#distance" aria-hidden="true">#</a> Distance</h3><p>▸ <strong>Distance</strong>(<code>value1</code>, <code>value2</code>): <code>number</code></p><p>Returns the distance (float) between the vectors &quot;value1&quot; and &quot;value2&quot;.</p><h4 id="parameters-37" tabindex="-1"><a class="header-anchor" href="#parameters-37" aria-hidden="true">#</a> Parameters</h4>',8),un=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),_n=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),fn={style:{"text-align":"left"}},mn=t("code",null,"DeepImmutableObject",-1),pn=t("code",null,"Vector4",-1),yn=t("td",{style:{"text-align":"left"}},"value to calulate the distance between",-1),xn=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),gn={style:{"text-align":"left"}},bn=t("code",null,"DeepImmutableObject",-1),Vn=t("code",null,"Vector4",-1),vn=t("td",{style:{"text-align":"left"}},"value to calulate the distance between",-1),Tn=a('<h4 id="returns-52" tabindex="-1"><a class="header-anchor" href="#returns-52" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the distance between the two vectors</p><hr><h3 id="distancesquared" tabindex="-1"><a class="header-anchor" href="#distancesquared" aria-hidden="true">#</a> DistanceSquared</h3><p>▸ <strong>DistanceSquared</strong>(<code>value1</code>, <code>value2</code>): <code>number</code></p><p>Returns the squared distance (float) between the vectors &quot;value1&quot; and &quot;value2&quot;.</p><h4 id="parameters-38" tabindex="-1"><a class="header-anchor" href="#parameters-38" aria-hidden="true">#</a> Parameters</h4>',8),wn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Rn=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),zn={style:{"text-align":"left"}},Dn=t("code",null,"DeepImmutableObject",-1),Nn=t("code",null,"Vector4",-1),qn=t("td",{style:{"text-align":"left"}},"value to calulate the distance between",-1),Pn=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),In={style:{"text-align":"left"}},Fn=t("code",null,"DeepImmutableObject",-1),On=t("code",null,"Vector4",-1),jn=t("td",{style:{"text-align":"left"}},"value to calulate the distance between",-1),An=a('<h4 id="returns-53" tabindex="-1"><a class="header-anchor" href="#returns-53" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the distance between the two vectors squared</p><hr><h3 id="dot-1" tabindex="-1"><a class="header-anchor" href="#dot-1" aria-hidden="true">#</a> Dot</h3><p>▸ <strong>Dot</strong>(<code>left</code>, <code>right</code>): <code>number</code></p><p>Returns the dot product (float) between the vectors &quot;left&quot; and &quot;right&quot;</p><h4 id="parameters-39" tabindex="-1"><a class="header-anchor" href="#parameters-39" aria-hidden="true">#</a> Parameters</h4>',8),Cn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Mn=t("td",{style:{"text-align":"left"}},[t("code",null,"left")],-1),Sn={style:{"text-align":"left"}},Un=t("code",null,"DeepImmutableObject",-1),Bn=t("code",null,"Vector4",-1),kn=t("td",{style:{"text-align":"left"}},"defines the left operand",-1),Ln=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),Zn={style:{"text-align":"left"}},En=t("code",null,"DeepImmutableObject",-1),Gn=t("code",null,"Vector4",-1),Hn=t("td",{style:{"text-align":"left"}},"defines the right operand",-1),Wn=t("h4",{id:"returns-54",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-54","aria-hidden":"true"},"#"),e(" Returns")],-1),Qn=t("p",null,[t("code",null,"number")],-1),Jn=t("p",null,"the dot product",-1),Kn=t("hr",null,null,-1),Xn=t("h3",{id:"fromarray-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fromarray-1","aria-hidden":"true"},"#"),e(" FromArray")],-1),Yn=t("strong",null,"FromArray",-1),$n=t("code",null,"array",-1),tc=t("code",null,"offset?",-1),ec=t("code",null,"Vector4",-1),lc=a('<p>Returns a new Vector4 set from the starting index of the given array.</p><h4 id="parameters-40" tabindex="-1"><a class="header-anchor" href="#parameters-40" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>ArrayLike</code>&lt;<code>number</code>&gt;&gt;</td><td style="text-align:left;">the array to pull values from</td></tr><tr><td style="text-align:left;"><code>offset?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the offset into the array to start at</td></tr></tbody></table><h4 id="returns-55" tabindex="-1"><a class="header-anchor" href="#returns-55" aria-hidden="true">#</a> Returns</h4>',4),oc=t("code",null,"Vector4",-1),sc=a('<p>the new vector</p><hr><h3 id="fromarraytoref" tabindex="-1"><a class="header-anchor" href="#fromarraytoref" aria-hidden="true">#</a> FromArrayToRef</h3><p>▸ <strong>FromArrayToRef</strong>&lt;<code>T</code>&gt;(<code>array</code>, <code>offset</code>, <code>result</code>): <code>T</code></p><p>Updates the given vector &quot;result&quot; from the starting index of the given array.</p><h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4>',6),ac=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),dc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),rc={style:{"text-align":"left"}},nc=t("code",null,"Vector4",-1),cc=a('<h4 id="parameters-41" tabindex="-1"><a class="header-anchor" href="#parameters-41" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>ArrayLike</code>&lt;<code>number</code>&gt;&gt;</td><td style="text-align:left;">the array to pull values from</td></tr><tr><td style="text-align:left;"><code>offset</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the offset into the array to start at</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">the vector to store the result in</td></tr></tbody></table><h4 id="returns-56" tabindex="-1"><a class="header-anchor" href="#returns-56" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="fromfloatarraytoref" tabindex="-1"><a class="header-anchor" href="#fromfloatarraytoref" aria-hidden="true">#</a> FromFloatArrayToRef</h3><p>▸ <strong>FromFloatArrayToRef</strong>&lt;<code>T</code>&gt;(<code>array</code>, <code>offset</code>, <code>result</code>): <code>T</code></p><p>Updates the given vector &quot;result&quot; from the starting index of the given Float32Array.</p><h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4>',10),hc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ic=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),uc={style:{"text-align":"left"}},_c=t("code",null,"Vector4",-1),fc=a('<h4 id="parameters-42" tabindex="-1"><a class="header-anchor" href="#parameters-42" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>Float32Array</code>&gt;</td><td style="text-align:left;">the array to pull values from</td></tr><tr><td style="text-align:left;"><code>offset</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the offset into the array to start at</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">the vector to store the result in</td></tr></tbody></table><h4 id="returns-57" tabindex="-1"><a class="header-anchor" href="#returns-57" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="fromfloatstoref" tabindex="-1"><a class="header-anchor" href="#fromfloatstoref" aria-hidden="true">#</a> FromFloatsToRef</h3><p>▸ <strong>FromFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>x</code>, <code>y</code>, <code>z</code>, <code>w</code>, <code>result</code>): <code>T</code></p><p>Updates the given vector &quot;result&quot; coordinates from the given floats.</p><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4>',10),mc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),pc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),yc={style:{"text-align":"left"}},xc=t("code",null,"Vector4",-1),gc=a('<h4 id="parameters-43" tabindex="-1"><a class="header-anchor" href="#parameters-43" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to set from</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to set from</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to set from</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">float to set from</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">the vector to the floats in</td></tr></tbody></table><h4 id="returns-58" tabindex="-1"><a class="header-anchor" href="#returns-58" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="fromvector3" tabindex="-1"><a class="header-anchor" href="#fromvector3" aria-hidden="true">#</a> FromVector3</h3>',7),bc=t("strong",null,"FromVector3",-1),Vc=t("code",null,"source",-1),vc=t("code",null,"w?",-1),Tc=t("code",null,"Vector4",-1),wc=t("p",null,"Creates a new Vector4 from a Vector3",-1),Rc=t("h4",{id:"parameters-44",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-44","aria-hidden":"true"},"#"),e(" Parameters")],-1),zc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Dc=t("td",{style:{"text-align":"left"}},[t("code",null,"source")],-1),Nc={style:{"text-align":"left"}},qc=t("code",null,"Vector3",-1),Pc=t("td",{style:{"text-align":"left"}},"defines the source data",-1),Ic=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"w?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the 4th component (default is 0)")],-1),Fc=t("h4",{id:"returns-59",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-59","aria-hidden":"true"},"#"),e(" Returns")],-1),Oc=t("code",null,"Vector4",-1),jc=a('<p>a new Vector4</p><hr><h3 id="maximize" tabindex="-1"><a class="header-anchor" href="#maximize" aria-hidden="true">#</a> Maximize</h3><p>▸ <strong>Maximize</strong>&lt;<code>T</code>&gt;(<code>left</code>, <code>right</code>): <code>T</code></p><p>Returns a vector with the maximum values from the left and right vectors</p><h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4>',6),Ac=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Cc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Mc={style:{"text-align":"left"}},Sc=t("code",null,"Vector4",-1),Uc=t("h4",{id:"parameters-45",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-45","aria-hidden":"true"},"#"),e(" Parameters")],-1),Bc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),kc=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"left")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"left vector to maximize")],-1),Lc=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),Zc={style:{"text-align":"left"}},Ec=t("code",null,"DeepImmutableObject",-1),Gc=t("code",null,"Vector4",-1),Hc=t("td",{style:{"text-align":"left"}},"right vector to maximize",-1),Wc=a('<h4 id="returns-60" tabindex="-1"><a class="header-anchor" href="#returns-60" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new vector with the maximum of the left and right vector values</p><hr><h3 id="minimize" tabindex="-1"><a class="header-anchor" href="#minimize" aria-hidden="true">#</a> Minimize</h3><p>▸ <strong>Minimize</strong>&lt;<code>T</code>&gt;(<code>left</code>, <code>right</code>): <code>T</code></p><p>Returns a vector with the minimum values from the left and right vectors</p><h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4>',8),Qc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Jc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Kc={style:{"text-align":"left"}},Xc=t("code",null,"Vector4",-1),Yc=t("h4",{id:"parameters-46",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-46","aria-hidden":"true"},"#"),e(" Parameters")],-1),$c=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),th=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"left")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"left vector to minimize")],-1),eh=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),lh={style:{"text-align":"left"}},oh=t("code",null,"DeepImmutableObject",-1),sh=t("code",null,"Vector4",-1),ah=t("td",{style:{"text-align":"left"}},"right vector to minimize",-1),dh=t("h4",{id:"returns-61",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-61","aria-hidden":"true"},"#"),e(" Returns")],-1),rh=t("p",null,[t("code",null,"T")],-1),nh=t("p",null,"a new vector with the minimum of the left and right vector values",-1),ch=t("hr",null,null,-1),hh=t("h3",{id:"normalize-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#normalize-1","aria-hidden":"true"},"#"),e(" Normalize")],-1),ih=t("strong",null,"Normalize",-1),uh=t("code",null,"vector",-1),_h=t("code",null,"Vector4",-1),fh=t("p",null,"Returns a new normalized Vector4 from the given one.",-1),mh=t("h4",{id:"parameters-47",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-47","aria-hidden":"true"},"#"),e(" Parameters")],-1),ph=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),yh=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),xh={style:{"text-align":"left"}},gh=t("code",null,"DeepImmutableObject",-1),bh=t("code",null,"Vector4",-1),Vh=t("td",{style:{"text-align":"left"}},"the vector to normalize",-1),vh=t("h4",{id:"returns-62",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-62","aria-hidden":"true"},"#"),e(" Returns")],-1),Th=t("code",null,"Vector4",-1),wh=a('<p>the vector</p><hr><h3 id="normalizetoref-1" tabindex="-1"><a class="header-anchor" href="#normalizetoref-1" aria-hidden="true">#</a> NormalizeToRef</h3><p>▸ <strong>NormalizeToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>result</code>): <code>T</code></p><p>Updates the given vector &quot;result&quot; from the normalization of the given one.</p><h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4>',6),Rh=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),zh=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Dh={style:{"text-align":"left"}},Nh=t("code",null,"Vector4",-1),qh=t("h4",{id:"parameters-48",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-48","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ph=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ih=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),Fh={style:{"text-align":"left"}},Oh=t("code",null,"DeepImmutableObject",-1),jh=t("code",null,"Vector4",-1),Ah=t("td",{style:{"text-align":"left"}},"the vector to normalize",-1),Ch=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the vector to store the result in")],-1),Mh=t("h4",{id:"returns-63",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-63","aria-hidden":"true"},"#"),e(" Returns")],-1),Sh=t("p",null,[t("code",null,"T")],-1),Uh=t("p",null,"result input",-1),Bh=t("hr",null,null,-1),kh=t("h3",{id:"one",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#one","aria-hidden":"true"},"#"),e(" One")],-1),Lh=t("strong",null,"One",-1),Zh=t("code",null,"Vector4",-1),Eh=t("p",null,"Returns a new Vector4 set to (1.0, 1.0, 1.0, 1.0)",-1),Gh=t("h4",{id:"returns-64",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-64","aria-hidden":"true"},"#"),e(" Returns")],-1),Hh=t("code",null,"Vector4",-1),Wh=t("p",null,"the new vector",-1),Qh=t("hr",null,null,-1),Jh=t("h3",{id:"random",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#random","aria-hidden":"true"},"#"),e(" Random")],-1),Kh=t("strong",null,"Random",-1),Xh=t("code",null,"min?",-1),Yh=t("code",null,"max?",-1),$h=t("code",null,"Vector4",-1),ti=a('<p>Returns a new Vector4 with random values between min and max</p><h4 id="parameters-49" tabindex="-1"><a class="header-anchor" href="#parameters-49" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>min?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the minimum random value</td></tr><tr><td style="text-align:left;"><code>max?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the maximum random value</td></tr></tbody></table><h4 id="returns-65" tabindex="-1"><a class="header-anchor" href="#returns-65" aria-hidden="true">#</a> Returns</h4>',4),ei=t("code",null,"Vector4",-1),li=t("p",null,"a Vector4 with random values between min and max",-1),oi=t("hr",null,null,-1),si=t("h3",{id:"transformcoordinates",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#transformcoordinates","aria-hidden":"true"},"#"),e(" TransformCoordinates")],-1),ai=t("strong",null,"TransformCoordinates",-1),di=t("code",null,"vector",-1),ri=t("code",null,"transformation",-1),ni=t("code",null,"Vector4",-1),ci=t("p",null,"Returns a new Vector4 set with the result of the transformation by the given matrix of the given vector. This method computes tranformed coordinates only, not transformed direction vectors (ie. it takes translation in account) The difference with Vector3.TransformCoordinates is that the w component is not used to divide the other coordinates but is returned in the w coordinate instead",-1),hi=t("h4",{id:"parameters-50",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-50","aria-hidden":"true"},"#"),e(" Parameters")],-1),ii=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ui=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),_i={style:{"text-align":"left"}},fi=t("code",null,"DeepImmutableObject",-1),mi=t("code",null,"Vector3",-1),pi=t("td",{style:{"text-align":"left"}},"defines the Vector3 to transform",-1),yi=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),xi={style:{"text-align":"left"}},gi=t("code",null,"DeepImmutableObject",-1),bi=t("code",null,"Matrix",-1),Vi=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),vi=t("h4",{id:"returns-66",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-66","aria-hidden":"true"},"#"),e(" Returns")],-1),Ti=t("code",null,"Vector4",-1),wi=a('<p>the transformed Vector4</p><hr><h3 id="transformcoordinatesfromfloatstoref" tabindex="-1"><a class="header-anchor" href="#transformcoordinatesfromfloatstoref" aria-hidden="true">#</a> TransformCoordinatesFromFloatsToRef</h3><p>▸ <strong>TransformCoordinatesFromFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>x</code>, <code>y</code>, <code>z</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; coordinates with the result of the transformation by the given matrix of the given floats (x, y, z) This method computes tranformed coordinates only, not transformed direction vectors The difference with Vector3.TransformCoordinatesFromFloatsToRef is that the w component is not used to divide the other coordinates but is returned in the w coordinate instead</p><h4 id="type-parameters-16" tabindex="-1"><a class="header-anchor" href="#type-parameters-16" aria-hidden="true">#</a> Type parameters</h4>',6),Ri=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),zi=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Di={style:{"text-align":"left"}},Ni=t("code",null,"Vector4",-1),qi=t("h4",{id:"parameters-51",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-51","aria-hidden":"true"},"#"),e(" Parameters")],-1),Pi=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ii=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"x")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the x coordinate of the source vector")],-1),Fi=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"y")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the y coordinate of the source vector")],-1),Oi=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"z")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the z coordinate of the source vector")],-1),ji=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),Ai={style:{"text-align":"left"}},Ci=t("code",null,"DeepImmutableObject",-1),Mi=t("code",null,"Matrix",-1),Si=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),Ui=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector4 where to store the result")],-1),Bi=a('<h4 id="returns-67" tabindex="-1"><a class="header-anchor" href="#returns-67" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="transformcoordinatestoref" tabindex="-1"><a class="header-anchor" href="#transformcoordinatestoref" aria-hidden="true">#</a> TransformCoordinatesToRef</h3><p>▸ <strong>TransformCoordinatesToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; coordinates with the result of the transformation by the given matrix of the given vector This method computes tranformed coordinates only, not transformed direction vectors (ie. it takes translation in account) The difference with Vector3.TransformCoordinatesToRef is that the w component is not used to divide the other coordinates but is returned in the w coordinate instead</p><h4 id="type-parameters-17" tabindex="-1"><a class="header-anchor" href="#type-parameters-17" aria-hidden="true">#</a> Type parameters</h4>',8),ki=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Li=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Zi={style:{"text-align":"left"}},Ei=t("code",null,"Vector4",-1),Gi=t("h4",{id:"parameters-52",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-52","aria-hidden":"true"},"#"),e(" Parameters")],-1),Hi=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Wi=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),Qi={style:{"text-align":"left"}},Ji=t("code",null,"DeepImmutableObject",-1),Ki=t("code",null,"Vector3",-1),Xi=t("td",{style:{"text-align":"left"}},"defines the Vector3 to transform",-1),Yi=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),$i={style:{"text-align":"left"}},tu=t("code",null,"DeepImmutableObject",-1),eu=t("code",null,"Matrix",-1),lu=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),ou=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector4 where to store the result")],-1),su=a('<h4 id="returns-68" tabindex="-1"><a class="header-anchor" href="#returns-68" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="transformnormal" tabindex="-1"><a class="header-anchor" href="#transformnormal" aria-hidden="true">#</a> TransformNormal</h3><p>▸ <strong>TransformNormal</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>transformation</code>): <code>T</code></p><p>Returns a new Vector4 set with the result of the normal transformation by the given matrix of the given vector. This methods computes transformed normalized direction vectors only.</p><h4 id="type-parameters-18" tabindex="-1"><a class="header-anchor" href="#type-parameters-18" aria-hidden="true">#</a> Type parameters</h4>',8),au=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),du=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ru={style:{"text-align":"left"}},nu=t("code",null,"Vector4",-1),cu=t("h4",{id:"parameters-53",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-53","aria-hidden":"true"},"#"),e(" Parameters")],-1),hu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),iu=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"vector")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"the vector to transform")],-1),uu=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),_u={style:{"text-align":"left"}},fu=t("code",null,"DeepImmutableObject",-1),mu=t("code",null,"Matrix",-1),pu=t("td",{style:{"text-align":"left"}},"the transformation matrix to apply",-1),yu=a('<h4 id="returns-69" tabindex="-1"><a class="header-anchor" href="#returns-69" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the new vector</p><hr><h3 id="transformnormalfromfloatstoref" tabindex="-1"><a class="header-anchor" href="#transformnormalfromfloatstoref" aria-hidden="true">#</a> TransformNormalFromFloatsToRef</h3><p>▸ <strong>TransformNormalFromFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>x</code>, <code>y</code>, <code>z</code>, <code>w</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the result of the normal transformation by the given matrix of the given floats (x, y, z, w). This methods computes transformed normalized direction vectors only.</p><h4 id="type-parameters-19" tabindex="-1"><a class="header-anchor" href="#type-parameters-19" aria-hidden="true">#</a> Type parameters</h4>',8),xu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),gu=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),bu={style:{"text-align":"left"}},Vu=t("code",null,"Vector4",-1),vu=t("h4",{id:"parameters-54",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-54","aria-hidden":"true"},"#"),e(" Parameters")],-1),Tu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),wu=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"x")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"value to transform")],-1),Ru=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"y")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"value to transform")],-1),zu=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"z")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"value to transform")],-1),Du=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"w")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"value to transform")],-1),Nu=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),qu={style:{"text-align":"left"}},Pu=t("code",null,"DeepImmutableObject",-1),Iu=t("code",null,"Matrix",-1),Fu=t("td",{style:{"text-align":"left"}},"the transformation matrix to apply",-1),Ou=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the vector to store the results in")],-1),ju=a('<h4 id="returns-70" tabindex="-1"><a class="header-anchor" href="#returns-70" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="transformnormaltoref" tabindex="-1"><a class="header-anchor" href="#transformnormaltoref" aria-hidden="true">#</a> TransformNormalToRef</h3><p>▸ <strong>TransformNormalToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the result of the normal transformation by the given matrix of the given vector. This methods computes transformed normalized direction vectors only.</p><h4 id="type-parameters-20" tabindex="-1"><a class="header-anchor" href="#type-parameters-20" aria-hidden="true">#</a> Type parameters</h4>',8),Au=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Cu=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Mu={style:{"text-align":"left"}},Su=t("code",null,"Vector4",-1),Uu=t("h4",{id:"parameters-55",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-55","aria-hidden":"true"},"#"),e(" Parameters")],-1),Bu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ku=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),Lu={style:{"text-align":"left"}},Zu=t("code",null,"DeepImmutableObject",-1),Eu=t("code",null,"Vector4",-1),Gu=t("td",{style:{"text-align":"left"}},"the vector to transform",-1),Hu=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),Wu={style:{"text-align":"left"}},Qu=t("code",null,"DeepImmutableObject",-1),Ju=t("code",null,"Matrix",-1),Ku=t("td",{style:{"text-align":"left"}},"the transformation matrix to apply",-1),Xu=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the vector to store the result in")],-1),Yu=t("h4",{id:"returns-71",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-71","aria-hidden":"true"},"#"),e(" Returns")],-1),$u=t("p",null,[t("code",null,"T")],-1),t_=t("p",null,"result input",-1),e_=t("hr",null,null,-1),l_=t("h3",{id:"zero",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#zero","aria-hidden":"true"},"#"),e(" Zero")],-1),o_=t("strong",null,"Zero",-1),s_=t("code",null,"Vector4",-1),a_=t("p",null,"Returns a new Vector4 set to (0.0, 0.0, 0.0, 0.0)",-1),d_=t("h4",{id:"returns-72",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-72","aria-hidden":"true"},"#"),e(" Returns")],-1),r_=t("code",null,"Vector4",-1),n_=t("p",null,"the new vector",-1);function c_(h_,i_){const l=r("RouterLink");return n(),c("div",null,[i,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector4.html#constructor"},{default:s(()=>[e("constructor")]),_:1})])]),u,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector4.html#w"},{default:s(()=>[e("w")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#x"},{default:s(()=>[e("x")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#y"},{default:s(()=>[e("y")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#z"},{default:s(()=>[e("z")]),_:1})])]),_,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector4.html#zeroreadonly"},{default:s(()=>[e("ZeroReadOnly")]),_:1})])]),f,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector4.html#add"},{default:s(()=>[e("add")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#addinplace"},{default:s(()=>[e("addInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#addtoref"},{default:s(()=>[e("addToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#asarray"},{default:s(()=>[e("asArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#clone"},{default:s(()=>[e("clone")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#copyfrom"},{default:s(()=>[e("copyFrom")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#copyfromfloats"},{default:s(()=>[e("copyFromFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#divide"},{default:s(()=>[e("divide")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#divideinplace"},{default:s(()=>[e("divideInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#dividetoref"},{default:s(()=>[e("divideToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#dot"},{default:s(()=>[e("dot")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#equals"},{default:s(()=>[e("equals")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#equalstofloats"},{default:s(()=>[e("equalsToFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#equalswithepsilon"},{default:s(()=>[e("equalsWithEpsilon")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#floor"},{default:s(()=>[e("floor")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#fract"},{default:s(()=>[e("fract")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#fromarray"},{default:s(()=>[e("fromArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#getclassname"},{default:s(()=>[e("getClassName")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#gethashcode"},{default:s(()=>[e("getHashCode")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#length"},{default:s(()=>[e("length")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#lengthsquared"},{default:s(()=>[e("lengthSquared")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#maximizeinplace"},{default:s(()=>[e("maximizeInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#minimizeinplace"},{default:s(()=>[e("minimizeInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#multiply"},{default:s(()=>[e("multiply")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#multiplybyfloats"},{default:s(()=>[e("multiplyByFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#multiplyinplace"},{default:s(()=>[e("multiplyInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#multiplytoref"},{default:s(()=>[e("multiplyToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#negate"},{default:s(()=>[e("negate")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#negateinplace"},{default:s(()=>[e("negateInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#negatetoref"},{default:s(()=>[e("negateToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#normalize"},{default:s(()=>[e("normalize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#normalizefromlength"},{default:s(()=>[e("normalizeFromLength")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#normalizetonew"},{default:s(()=>[e("normalizeToNew")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#normalizetoref"},{default:s(()=>[e("normalizeToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#scale"},{default:s(()=>[e("scale")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#scaleandaddtoref"},{default:s(()=>[e("scaleAndAddToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#scaleinplace"},{default:s(()=>[e("scaleInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#scaletoref"},{default:s(()=>[e("scaleToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#set"},{default:s(()=>[e("set")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#setall"},{default:s(()=>[e("setAll")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#subtract"},{default:s(()=>[e("subtract")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#subtractfromfloats"},{default:s(()=>[e("subtractFromFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#subtractfromfloatstoref"},{default:s(()=>[e("subtractFromFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#subtractinplace"},{default:s(()=>[e("subtractInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#subtracttoref"},{default:s(()=>[e("subtractToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#toarray"},{default:s(()=>[e("toArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#tostring"},{default:s(()=>[e("toString")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#tovector3"},{default:s(()=>[e("toVector3")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#center"},{default:s(()=>[e("Center")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#centertoref"},{default:s(()=>[e("CenterToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#distance"},{default:s(()=>[e("Distance")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#distancesquared"},{default:s(()=>[e("DistanceSquared")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#dot-1"},{default:s(()=>[e("Dot")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#fromarray-1"},{default:s(()=>[e("FromArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#fromarraytoref"},{default:s(()=>[e("FromArrayToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#fromfloatarraytoref"},{default:s(()=>[e("FromFloatArrayToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#fromfloatstoref"},{default:s(()=>[e("FromFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#fromvector3"},{default:s(()=>[e("FromVector3")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#maximize"},{default:s(()=>[e("Maximize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#minimize"},{default:s(()=>[e("Minimize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#normalize-1"},{default:s(()=>[e("Normalize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#normalizetoref-1"},{default:s(()=>[e("NormalizeToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#one"},{default:s(()=>[e("One")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#random"},{default:s(()=>[e("Random")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#transformcoordinates"},{default:s(()=>[e("TransformCoordinates")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#transformcoordinatesfromfloatstoref"},{default:s(()=>[e("TransformCoordinatesFromFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#transformcoordinatestoref"},{default:s(()=>[e("TransformCoordinatesToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#transformnormal"},{default:s(()=>[e("TransformNormal")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#transformnormalfromfloatstoref"},{default:s(()=>[e("TransformNormalFromFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#transformnormaltoref"},{default:s(()=>[e("TransformNormalToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html#zero"},{default:s(()=>[e("Zero")]),_:1})])]),m,p,t("p",null,[e("• "),y,e("("),x,e(", "),g,e(", "),b,e(", "),V,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[v]),_:1})]),T,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[w]),_:1})]),R,t("p",null,[e("• "),z,e(),D,e("(): "),N,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[q]),_:1}),e(">")]),P,I,t("p",null,[F,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[O]),_:1}),e(">")]),j,A,t("p",null,[e("▸ "),C,e("("),M,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[S]),_:1})]),U,B,t("table",null,[k,t("tbody",null,[t("tr",null,[L,t("td",Z,[E,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[G]),_:1}),e(">")]),H])])]),W,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Q]),_:1})]),J,K,X,t("p",null,[e("▸ "),Y,e("("),$,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[tt]),_:1})]),et,lt,t("table",null,[ot,t("tbody",null,[t("tr",null,[st,t("td",at,[dt,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[rt]),_:1}),e(">")]),nt])])]),ct,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ht]),_:1})]),it,t("table",null,[ut,t("tbody",null,[t("tr",null,[_t,t("td",ft,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[mt]),_:1})])])])]),pt,t("table",null,[yt,t("tbody",null,[t("tr",null,[xt,t("td",gt,[bt,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Vt]),_:1}),e(">")]),vt]),Tt])]),wt,t("p",null,[e("▸ "),Rt,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[zt]),_:1})]),Dt,Nt,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[qt]),_:1})]),Pt,It,Ft,t("p",null,[e("▸ "),Ot,e("("),jt,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[At]),_:1})]),Ct,Mt,t("table",null,[St,t("tbody",null,[t("tr",null,[Ut,t("td",Bt,[kt,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Lt]),_:1}),e(">")]),Zt])])]),Et,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Gt]),_:1})]),Ht,Wt,Qt,t("p",null,[e("▸ "),Jt,e("("),Kt,e(", "),Xt,e(", "),Yt,e(", "),$t,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[te]),_:1})]),ee,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[le]),_:1})]),oe,se,ae,t("p",null,[e("▸ "),de,e("("),re,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ne]),_:1})]),ce,he,t("table",null,[ie,t("tbody",null,[t("tr",null,[ue,t("td",_e,[fe,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[me]),_:1}),e(">")]),pe])])]),ye,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[xe]),_:1})]),ge,be,Ve,t("p",null,[e("▸ "),ve,e("("),Te,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[we]),_:1})]),Re,ze,t("table",null,[De,t("tbody",null,[t("tr",null,[Ne,t("td",qe,[Pe,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ie]),_:1}),e(">")]),Fe])])]),Oe,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[je]),_:1})]),Ae,t("table",null,[Ce,t("tbody",null,[t("tr",null,[Me,t("td",Se,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ue]),_:1})])])])]),Be,t("table",null,[ke,t("tbody",null,[t("tr",null,[Le,t("td",Ze,[Ee,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ge]),_:1}),e(">")]),He]),We])]),Qe,t("table",null,[Je,t("tbody",null,[t("tr",null,[Ke,t("td",Xe,[Ye,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[$e]),_:1}),e(">")]),tl])])]),el,t("table",null,[ll,t("tbody",null,[t("tr",null,[ol,t("td",sl,[al,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[dl]),_:1}),e(">")]),rl])])]),nl,t("table",null,[cl,t("tbody",null,[t("tr",null,[hl,t("td",il,[ul,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[_l]),_:1}),e(">")]),fl]),ml])]),pl,yl,xl,gl,bl,t("p",null,[e("▸ "),Vl,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[vl]),_:1})]),Tl,wl,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Rl]),_:1})]),zl,Dl,Nl,t("p",null,[e("▸ "),ql,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Pl]),_:1})]),Il,Fl,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ol]),_:1})]),jl,Al,Cl,t("p",null,[e("▸ "),Ml,e("("),Sl,e(", "),Ul,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Bl]),_:1})]),kl,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ll]),_:1})]),Zl,t("p",null,[e("▸ "),El,e("("),Gl,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Hl]),_:1})]),Wl,Ql,t("table",null,[Jl,t("tbody",null,[t("tr",null,[Kl,t("td",Xl,[Yl,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[$l]),_:1}),e(">")]),to])])]),eo,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[lo]),_:1})]),oo,so,ao,t("p",null,[e("▸ "),ro,e("("),no,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[co]),_:1})]),ho,io,t("table",null,[uo,t("tbody",null,[t("tr",null,[_o,t("td",fo,[mo,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[po]),_:1}),e(">")]),yo])])]),xo,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[go]),_:1})]),bo,Vo,vo,t("p",null,[e("▸ "),To,e("("),wo,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ro]),_:1})]),zo,Do,t("table",null,[No,t("tbody",null,[t("tr",null,[qo,t("td",Po,[Io,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Fo]),_:1}),e(">")]),Oo])])]),jo,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ao]),_:1})]),Co,Mo,So,t("p",null,[e("▸ "),Uo,e("("),Bo,e(", "),ko,e(", "),Lo,e(", "),Zo,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Eo]),_:1})]),Go,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ho]),_:1})]),Wo,Qo,Jo,t("p",null,[e("▸ "),Ko,e("("),Xo,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Yo]),_:1})]),$o,ts,t("table",null,[es,t("tbody",null,[t("tr",null,[ls,t("td",os,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ss]),_:1})]),as])])]),ds,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[rs]),_:1})]),ns,t("table",null,[cs,t("tbody",null,[t("tr",null,[hs,t("td",is,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[us]),_:1})])])])]),_s,t("table",null,[fs,t("tbody",null,[t("tr",null,[ms,t("td",ps,[ys,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[xs]),_:1}),e(">")]),gs]),bs])]),Vs,vs,Ts,ws,Rs,t("p",null,[e("▸ "),zs,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ds]),_:1})]),Ns,qs,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ps]),_:1})]),Is,Fs,Os,t("p",null,[e("▸ "),js,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[As]),_:1})]),Cs,Ms,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ss]),_:1})]),Us,t("table",null,[Bs,t("tbody",null,[t("tr",null,[ks,t("td",Ls,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Zs]),_:1})])])])]),Es,t("p",null,[e("▸ "),Gs,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Hs]),_:1})]),Ws,Qs,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Js]),_:1})]),Ks,Xs,Ys,t("p",null,[e("▸ "),$s,e("("),ta,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ea]),_:1})]),la,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[oa]),_:1})]),sa,aa,da,t("p",null,[e("▸ "),ra,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[na]),_:1})]),ca,ha,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ia]),_:1})]),ua,t("table",null,[_a,t("tbody",null,[t("tr",null,[fa,t("td",ma,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[pa]),_:1})])])])]),ya,t("p",null,[e("▸ "),xa,e("("),ga,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ba]),_:1})]),Va,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[va]),_:1})]),Ta,t("table",null,[wa,t("tbody",null,[t("tr",null,[Ra,t("td",za,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Da]),_:1})])])])]),Na,t("p",null,[e("▸ "),qa,e("("),Pa,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ia]),_:1})]),Fa,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Oa]),_:1})]),ja,t("table",null,[Aa,t("tbody",null,[t("tr",null,[Ca,t("td",Ma,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Sa]),_:1})])])])]),Ua,t("p",null,[e("▸ "),Ba,e("("),ka,e(", "),La,e(", "),Za,e(", "),Ea,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ga]),_:1})]),Ha,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Wa]),_:1})]),Qa,Ja,Ka,t("p",null,[e("▸ "),Xa,e("("),Ya,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[$a]),_:1})]),td,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ed]),_:1})]),ld,od,sd,t("p",null,[e("▸ "),ad,e("("),dd,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[rd]),_:1})]),nd,cd,t("table",null,[hd,t("tbody",null,[t("tr",null,[id,t("td",ud,[_d,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[fd]),_:1}),e(">")]),md])])]),pd,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[yd]),_:1})]),xd,gd,bd,t("p",null,[e("▸ "),Vd,e("("),vd,e(", "),Td,e(", "),wd,e(", "),Rd,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[zd]),_:1})]),Dd,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Nd]),_:1})]),qd,t("table",null,[Pd,t("tbody",null,[t("tr",null,[Id,t("td",Fd,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Od]),_:1})])])])]),jd,t("p",null,[e("▸ "),Ad,e("("),Cd,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Md]),_:1})]),Sd,Ud,t("table",null,[Bd,t("tbody",null,[t("tr",null,[kd,t("td",Ld,[Zd,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ed]),_:1}),e(">")]),Gd])])]),Hd,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Wd]),_:1})]),Qd,t("table",null,[Jd,t("tbody",null,[t("tr",null,[Kd,t("td",Xd,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Yd]),_:1})])])])]),$d,t("table",null,[tr,t("tbody",null,[t("tr",null,[er,t("td",lr,[or,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[sr]),_:1}),e(">")]),ar]),dr])]),rr,nr,cr,hr,ir,t("p",null,[e("▸ "),ur,e("("),_r,e(", "),fr,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[mr]),_:1})]),pr,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[yr]),_:1})]),xr,t("p",null,[e("▸ "),gr,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[br]),_:1})]),Vr,vr,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Tr]),_:1})]),wr,Rr,zr,t("p",null,[e("▸ "),Dr,e("("),Nr,e(", "),qr,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Pr]),_:1})]),Ir,Fr,t("table",null,[Or,t("tbody",null,[t("tr",null,[jr,t("td",Ar,[Cr,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Mr]),_:1}),e(">")]),Sr]),t("tr",null,[Ur,t("td",Br,[kr,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Lr]),_:1}),e(">")]),Zr])])]),Er,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Gr]),_:1})]),Hr,t("table",null,[Wr,t("tbody",null,[t("tr",null,[Qr,t("td",Jr,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Kr]),_:1})])])])]),Xr,t("table",null,[Yr,t("tbody",null,[t("tr",null,[$r,t("td",tn,[en,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ln]),_:1}),e(">")]),on]),t("tr",null,[sn,t("td",an,[dn,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[rn]),_:1}),e(">")]),nn]),cn])]),hn,t("table",null,[un,t("tbody",null,[t("tr",null,[_n,t("td",fn,[mn,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[pn]),_:1}),e(">")]),yn]),t("tr",null,[xn,t("td",gn,[bn,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Vn]),_:1}),e(">")]),vn])])]),Tn,t("table",null,[wn,t("tbody",null,[t("tr",null,[Rn,t("td",zn,[Dn,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Nn]),_:1}),e(">")]),qn]),t("tr",null,[Pn,t("td",In,[Fn,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[On]),_:1}),e(">")]),jn])])]),An,t("table",null,[Cn,t("tbody",null,[t("tr",null,[Mn,t("td",Sn,[Un,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Bn]),_:1}),e(">")]),kn]),t("tr",null,[Ln,t("td",Zn,[En,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Gn]),_:1}),e(">")]),Hn])])]),Wn,Qn,Jn,Kn,Xn,t("p",null,[e("▸ "),Yn,e("("),$n,e(", "),tc,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ec]),_:1})]),lc,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[oc]),_:1})]),sc,t("table",null,[ac,t("tbody",null,[t("tr",null,[dc,t("td",rc,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[nc]),_:1})])])])]),cc,t("table",null,[hc,t("tbody",null,[t("tr",null,[ic,t("td",uc,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[_c]),_:1})])])])]),fc,t("table",null,[mc,t("tbody",null,[t("tr",null,[pc,t("td",yc,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[xc]),_:1})])])])]),gc,t("p",null,[e("▸ "),bc,e("("),Vc,e(", "),vc,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Tc]),_:1})]),wc,Rc,t("table",null,[zc,t("tbody",null,[t("tr",null,[Dc,t("td",Nc,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[qc]),_:1})]),Pc]),Ic])]),Fc,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Oc]),_:1})]),jc,t("table",null,[Ac,t("tbody",null,[t("tr",null,[Cc,t("td",Mc,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Sc]),_:1})])])])]),Uc,t("table",null,[Bc,t("tbody",null,[kc,t("tr",null,[Lc,t("td",Zc,[Ec,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Gc]),_:1}),e(">")]),Hc])])]),Wc,t("table",null,[Qc,t("tbody",null,[t("tr",null,[Jc,t("td",Kc,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Xc]),_:1})])])])]),Yc,t("table",null,[$c,t("tbody",null,[th,t("tr",null,[eh,t("td",lh,[oh,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[sh]),_:1}),e(">")]),ah])])]),dh,rh,nh,ch,hh,t("p",null,[e("▸ "),ih,e("("),uh,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[_h]),_:1})]),fh,mh,t("table",null,[ph,t("tbody",null,[t("tr",null,[yh,t("td",xh,[gh,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[bh]),_:1}),e(">")]),Vh])])]),vh,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Th]),_:1})]),wh,t("table",null,[Rh,t("tbody",null,[t("tr",null,[zh,t("td",Dh,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Nh]),_:1})])])])]),qh,t("table",null,[Ph,t("tbody",null,[t("tr",null,[Ih,t("td",Fh,[Oh,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[jh]),_:1}),e(">")]),Ah]),Ch])]),Mh,Sh,Uh,Bh,kh,t("p",null,[e("▸ "),Lh,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Zh]),_:1})]),Eh,Gh,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Hh]),_:1})]),Wh,Qh,Jh,t("p",null,[e("▸ "),Kh,e("("),Xh,e(", "),Yh,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[$h]),_:1})]),ti,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ei]),_:1})]),li,oi,si,t("p",null,[e("▸ "),ai,e("("),di,e(", "),ri,e("): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[ni]),_:1})]),ci,hi,t("table",null,[ii,t("tbody",null,[t("tr",null,[ui,t("td",_i,[fi,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[mi]),_:1}),e(">")]),pi]),t("tr",null,[yi,t("td",xi,[gi,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[bi]),_:1}),e(">")]),Vi])])]),vi,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ti]),_:1})]),wi,t("table",null,[Ri,t("tbody",null,[t("tr",null,[zi,t("td",Di,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ni]),_:1})])])])]),qi,t("table",null,[Pi,t("tbody",null,[Ii,Fi,Oi,t("tr",null,[ji,t("td",Ai,[Ci,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[Mi]),_:1}),e(">")]),Si]),Ui])]),Bi,t("table",null,[ki,t("tbody",null,[t("tr",null,[Li,t("td",Zi,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Ei]),_:1})])])])]),Gi,t("table",null,[Hi,t("tbody",null,[t("tr",null,[Wi,t("td",Qi,[Ji,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ki]),_:1}),e(">")]),Xi]),t("tr",null,[Yi,t("td",$i,[tu,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[eu]),_:1}),e(">")]),lu]),ou])]),su,t("table",null,[au,t("tbody",null,[t("tr",null,[du,t("td",ru,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[nu]),_:1})])])])]),cu,t("table",null,[hu,t("tbody",null,[iu,t("tr",null,[uu,t("td",_u,[fu,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[mu]),_:1}),e(">")]),pu])])]),yu,t("table",null,[xu,t("tbody",null,[t("tr",null,[gu,t("td",bu,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Vu]),_:1})])])])]),vu,t("table",null,[Tu,t("tbody",null,[wu,Ru,zu,Du,t("tr",null,[Nu,t("td",qu,[Pu,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[Iu]),_:1}),e(">")]),Fu]),Ou])]),ju,t("table",null,[Au,t("tbody",null,[t("tr",null,[Cu,t("td",Mu,[e("extends "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Su]),_:1})])])])]),Uu,t("table",null,[Bu,t("tbody",null,[t("tr",null,[ku,t("td",Lu,[Zu,e("<"),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[Eu]),_:1}),e(">")]),Gu]),t("tr",null,[Hu,t("td",Wu,[Qu,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[Ju]),_:1}),e(">")]),Ku]),Xu])]),Yu,$u,t_,e_,l_,t("p",null,[e("▸ "),o_,e("(): "),o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[s_]),_:1})]),a_,d_,t("p",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:s(()=>[r_]),_:1})]),n_])}const __=d(h,[["render",c_],["__file","Vector4.html.vue"]]);export{__ as default};
