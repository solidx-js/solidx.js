import{_ as a,r as d,o as r,c,a as t,b as o,w as s,d as e,e as n}from"./app-cd6VGQi8.js";const i={},h=n('<h1 id="class-vector3" tabindex="-1"><a class="header-anchor" href="#class-vector3" aria-hidden="true">#</a> Class: Vector3</h1><p>Class used to store (x,y,z) vector representation A Vector3 is the main object used in 3D geometry It can represent either the coordinates of a point the space, either a direction Reminder: js uses a left handed forward facing system Example Playground - Overview - https://playground.babylonjs.com/#R1F8YU</p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>',4),u=t("h3",{id:"accessors",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#accessors","aria-hidden":"true"},"#"),e(" Accessors")],-1),_=t("h3",{id:"methods",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),e(" Methods")],-1),f=t("h2",{id:"constructors-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),e(" Constructors")],-1),p=t("h3",{id:"constructor",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),e(" constructor")],-1),y=t("strong",null,"new Vector3",-1),m=t("code",null,"x?",-1),g=t("code",null,"y?",-1),x=t("code",null,"z?",-1),b=t("code",null,"Vector3",-1),V=n('<p>Creates a new Vector3 object from the given x, y, z (floats) coordinates.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the first coordinates (on X axis)</td></tr><tr><td style="text-align:left;"><code>y?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the second coordinates (on Y axis)</td></tr><tr><td style="text-align:left;"><code>z?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the third coordinates (on Z axis)</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',4),T=t("code",null,"Vector3",-1),v=n('<h2 id="accessors-1" tabindex="-1"><a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a> Accessors</h2><h3 id="hasazerocomponent" tabindex="-1"><a class="header-anchor" href="#hasazerocomponent" aria-hidden="true">#</a> hasAZeroComponent</h3><p>• <code>get</code> <strong>hasAZeroComponent</strong>(): <code>boolean</code></p><p>Gets a boolean indicating if the vector contains a zero in one of its components Example Playground https://playground.babylonjs.com/#R1F8YU#1</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><hr><h3 id="isnonuniform" tabindex="-1"><a class="header-anchor" href="#isnonuniform" aria-hidden="true">#</a> isNonUniform</h3><p>• <code>get</code> <strong>isNonUniform</strong>(): <code>boolean</code></p><p>Gets a boolean indicating that the vector is non uniform meaning x, y or z are not all the same</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><hr><h3 id="x" tabindex="-1"><a class="header-anchor" href="#x" aria-hidden="true">#</a> x</h3><p>• <code>get</code> <strong>x</strong>(): <code>number</code></p><p>Gets or sets the x coordinate</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>• <code>set</code> <strong>x</strong>(<code>value</code>): <code>void</code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="y" tabindex="-1"><a class="header-anchor" href="#y" aria-hidden="true">#</a> y</h3><p>• <code>get</code> <strong>y</strong>(): <code>number</code></p><p>Gets or sets the y coordinate</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>• <code>set</code> <strong>y</strong>(<code>value</code>): <code>void</code></p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="z" tabindex="-1"><a class="header-anchor" href="#z" aria-hidden="true">#</a> z</h3><p>• <code>get</code> <strong>z</strong>(): <code>number</code></p><p>Gets or sets the z coordinate</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>• <code>set</code> <strong>z</strong>(<code>value</code>): <code>void</code></p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="downreadonly" tabindex="-1"><a class="header-anchor" href="#downreadonly" aria-hidden="true">#</a> DownReadOnly</h3>',47),R=t("code",null,"get",-1),w=t("strong",null,"DownReadOnly",-1),j=t("code",null,"DeepImmutableObject",-1),P=t("code",null,"Vector3",-1),q=t("p",null,"Gets a down Vector3 that must not be updated",-1),D=t("h4",{id:"returns-9",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-9","aria-hidden":"true"},"#"),e(" Returns")],-1),F=t("code",null,"DeepImmutableObject",-1),N=t("code",null,"Vector3",-1),I=t("hr",null,null,-1),O=t("h3",{id:"lefthandedbackwardreadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#lefthandedbackwardreadonly","aria-hidden":"true"},"#"),e(" LeftHandedBackwardReadOnly")],-1),z=t("code",null,"get",-1),U=t("strong",null,"LeftHandedBackwardReadOnly",-1),E=t("code",null,"DeepImmutableObject",-1),Y=t("code",null,"Vector3",-1),A=t("p",null,"Gets a backward Vector3 that must not be updated",-1),C=t("h4",{id:"returns-10",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-10","aria-hidden":"true"},"#"),e(" Returns")],-1),M=t("code",null,"DeepImmutableObject",-1),S=t("code",null,"Vector3",-1),G=t("hr",null,null,-1),H=t("h3",{id:"lefthandedforwardreadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#lefthandedforwardreadonly","aria-hidden":"true"},"#"),e(" LeftHandedForwardReadOnly")],-1),k=t("code",null,"get",-1),B=t("strong",null,"LeftHandedForwardReadOnly",-1),Q=t("code",null,"DeepImmutableObject",-1),L=t("code",null,"Vector3",-1),W=t("p",null,"Gets a forward Vector3 that must not be updated",-1),Z=t("h4",{id:"returns-11",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-11","aria-hidden":"true"},"#"),e(" Returns")],-1),X=t("code",null,"DeepImmutableObject",-1),J=t("code",null,"Vector3",-1),K=t("hr",null,null,-1),$=t("h3",{id:"leftreadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#leftreadonly","aria-hidden":"true"},"#"),e(" LeftReadOnly")],-1),tt=t("code",null,"get",-1),et=t("strong",null,"LeftReadOnly",-1),lt=t("code",null,"DeepImmutableObject",-1),ot=t("code",null,"Vector3",-1),st=t("p",null,"Gets a left Vector3 that must not be updated",-1),nt=t("h4",{id:"returns-12",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-12","aria-hidden":"true"},"#"),e(" Returns")],-1),at=t("code",null,"DeepImmutableObject",-1),dt=t("code",null,"Vector3",-1),rt=t("hr",null,null,-1),ct=t("h3",{id:"onereadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#onereadonly","aria-hidden":"true"},"#"),e(" OneReadOnly")],-1),it=t("code",null,"get",-1),ht=t("strong",null,"OneReadOnly",-1),ut=t("code",null,"DeepImmutableObject",-1),_t=t("code",null,"Vector3",-1),ft=t("p",null,"Gets a one Vector3 that must not be updated",-1),pt=t("h4",{id:"returns-13",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-13","aria-hidden":"true"},"#"),e(" Returns")],-1),yt=t("code",null,"DeepImmutableObject",-1),mt=t("code",null,"Vector3",-1),gt=t("hr",null,null,-1),xt=t("h3",{id:"righthandedbackwardreadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#righthandedbackwardreadonly","aria-hidden":"true"},"#"),e(" RightHandedBackwardReadOnly")],-1),bt=t("code",null,"get",-1),Vt=t("strong",null,"RightHandedBackwardReadOnly",-1),Tt=t("code",null,"DeepImmutableObject",-1),vt=t("code",null,"Vector3",-1),Rt=t("p",null,"Gets a backward Vector3 that must not be updated",-1),wt=t("h4",{id:"returns-14",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-14","aria-hidden":"true"},"#"),e(" Returns")],-1),jt=t("code",null,"DeepImmutableObject",-1),Pt=t("code",null,"Vector3",-1),qt=t("hr",null,null,-1),Dt=t("h3",{id:"righthandedforwardreadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#righthandedforwardreadonly","aria-hidden":"true"},"#"),e(" RightHandedForwardReadOnly")],-1),Ft=t("code",null,"get",-1),Nt=t("strong",null,"RightHandedForwardReadOnly",-1),It=t("code",null,"DeepImmutableObject",-1),Ot=t("code",null,"Vector3",-1),zt=t("p",null,"Gets a forward Vector3 that must not be updated",-1),Ut=t("h4",{id:"returns-15",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-15","aria-hidden":"true"},"#"),e(" Returns")],-1),Et=t("code",null,"DeepImmutableObject",-1),Yt=t("code",null,"Vector3",-1),At=t("hr",null,null,-1),Ct=t("h3",{id:"rightreadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#rightreadonly","aria-hidden":"true"},"#"),e(" RightReadOnly")],-1),Mt=t("code",null,"get",-1),St=t("strong",null,"RightReadOnly",-1),Gt=t("code",null,"DeepImmutableObject",-1),Ht=t("code",null,"Vector3",-1),kt=t("p",null,"Gets a right Vector3 that must not be updated",-1),Bt=t("h4",{id:"returns-16",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-16","aria-hidden":"true"},"#"),e(" Returns")],-1),Qt=t("code",null,"DeepImmutableObject",-1),Lt=t("code",null,"Vector3",-1),Wt=t("hr",null,null,-1),Zt=t("h3",{id:"upreadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#upreadonly","aria-hidden":"true"},"#"),e(" UpReadOnly")],-1),Xt=t("code",null,"get",-1),Jt=t("strong",null,"UpReadOnly",-1),Kt=t("code",null,"DeepImmutableObject",-1),$t=t("code",null,"Vector3",-1),te=t("p",null,"Gets an up Vector3 that must not be updated",-1),ee=t("h4",{id:"returns-17",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-17","aria-hidden":"true"},"#"),e(" Returns")],-1),le=t("code",null,"DeepImmutableObject",-1),oe=t("code",null,"Vector3",-1),se=t("hr",null,null,-1),ne=t("h3",{id:"zeroreadonly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#zeroreadonly","aria-hidden":"true"},"#"),e(" ZeroReadOnly")],-1),ae=t("code",null,"get",-1),de=t("strong",null,"ZeroReadOnly",-1),re=t("code",null,"DeepImmutableObject",-1),ce=t("code",null,"Vector3",-1),ie=t("p",null,"Gets a zero Vector3 that must not be updated",-1),he=t("h4",{id:"returns-18",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-18","aria-hidden":"true"},"#"),e(" Returns")],-1),ue=t("code",null,"DeepImmutableObject",-1),_e=t("code",null,"Vector3",-1),fe=t("h2",{id:"methods-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),e(" Methods")],-1),pe=t("h3",{id:"add",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#add","aria-hidden":"true"},"#"),e(" add")],-1),ye=t("strong",null,"add",-1),me=t("code",null,"otherVector",-1),ge=t("code",null,"Vector3",-1),xe=t("p",null,"Gets a new Vector3, result of the addition the current Vector3 and the given vector Example Playground https://playground.babylonjs.com/#R1F8YU#3",-1),be=t("h4",{id:"parameters-4",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-4","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ve=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Te=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),ve={style:{"text-align":"left"}},Re=t("code",null,"DeepImmutableObject",-1),we=t("code",null,"Vector3",-1),je=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Pe=t("h4",{id:"returns-19",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-19","aria-hidden":"true"},"#"),e(" Returns")],-1),qe=t("code",null,"Vector3",-1),De=t("p",null,"the resulting Vector3",-1),Fe=t("hr",null,null,-1),Ne=t("h3",{id:"addinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#addinplace","aria-hidden":"true"},"#"),e(" addInPlace")],-1),Ie=t("strong",null,"addInPlace",-1),Oe=t("code",null,"otherVector",-1),ze=t("code",null,"Vector3",-1),Ue=t("p",null,"Adds the given vector to the current Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#4",-1),Ee=t("h4",{id:"parameters-5",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-5","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ye=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ae=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Ce={style:{"text-align":"left"}},Me=t("code",null,"DeepImmutableObject",-1),Se=t("code",null,"Vector3",-1),Ge=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),He=t("h4",{id:"returns-20",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-20","aria-hidden":"true"},"#"),e(" Returns")],-1),ke=t("code",null,"Vector3",-1),Be=t("p",null,"the current updated Vector3",-1),Qe=t("hr",null,null,-1),Le=t("h3",{id:"addinplacefromfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#addinplacefromfloats","aria-hidden":"true"},"#"),e(" addInPlaceFromFloats")],-1),We=t("strong",null,"addInPlaceFromFloats",-1),Ze=t("code",null,"x",-1),Xe=t("code",null,"y",-1),Je=t("code",null,"z",-1),Ke=t("code",null,"Vector3",-1),$e=n('<p>Adds the given coordinates to the current Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#5</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr></tbody></table><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h4>',4),tl=t("code",null,"Vector3",-1),el=n('<p>the current updated Vector3</p><hr><h3 id="addtoref" tabindex="-1"><a class="header-anchor" href="#addtoref" aria-hidden="true">#</a> addToRef</h3><p>▸ <strong>addToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Adds the current Vector3 to the given one and stores the result in the vector &quot;result&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#6</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4>',6),ll=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ol=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),sl={style:{"text-align":"left"}},nl=t("code",null,"Vector3",-1),al=t("h4",{id:"parameters-7",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-7","aria-hidden":"true"},"#"),e(" Parameters")],-1),dl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),rl=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),cl={style:{"text-align":"left"}},il=t("code",null,"DeepImmutableObject",-1),hl=t("code",null,"Vector3",-1),ul=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),_l=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 object where to store the result")],-1),fl=t("h4",{id:"returns-22",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-22","aria-hidden":"true"},"#"),e(" Returns")],-1),pl=t("p",null,[t("code",null,"T")],-1),yl=t("p",null,"the result",-1),ml=t("hr",null,null,-1),gl=t("h3",{id:"applyrotationquaternion",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#applyrotationquaternion","aria-hidden":"true"},"#"),e(" applyRotationQuaternion")],-1),xl=t("strong",null,"applyRotationQuaternion",-1),bl=t("code",null,"q",-1),Vl=t("code",null,"Vector3",-1),Tl=t("p",null,"Rotates the vector using the given unit quaternion and returns the new vector Example Playground https://playground.babylonjs.com/#R1F8YU#7",-1),vl=t("h4",{id:"parameters-8",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-8","aria-hidden":"true"},"#"),e(" Parameters")],-1),Rl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),wl=t("td",{style:{"text-align":"left"}},[t("code",null,"q")],-1),jl={style:{"text-align":"left"}},Pl=t("code",null,"Quaternion",-1),ql=t("td",{style:{"text-align":"left"}},"the unit quaternion representing the rotation",-1),Dl=t("h4",{id:"returns-23",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-23","aria-hidden":"true"},"#"),e(" Returns")],-1),Fl=t("code",null,"Vector3",-1),Nl=t("p",null,"a new Vector3",-1),Il=t("hr",null,null,-1),Ol=t("h3",{id:"applyrotationquaternioninplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#applyrotationquaternioninplace","aria-hidden":"true"},"#"),e(" applyRotationQuaternionInPlace")],-1),zl=t("strong",null,"applyRotationQuaternionInPlace",-1),Ul=t("code",null,"q",-1),El=t("code",null,"Vector3",-1),Yl=t("p",null,"Rotates the vector in place using the given unit quaternion Example Playground https://playground.babylonjs.com/#R1F8YU#8",-1),Al=t("h4",{id:"parameters-9",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-9","aria-hidden":"true"},"#"),e(" Parameters")],-1),Cl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Ml=t("td",{style:{"text-align":"left"}},[t("code",null,"q")],-1),Sl={style:{"text-align":"left"}},Gl=t("code",null,"Quaternion",-1),Hl=t("td",{style:{"text-align":"left"}},"the unit quaternion representing the rotation",-1),kl=t("h4",{id:"returns-24",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-24","aria-hidden":"true"},"#"),e(" Returns")],-1),Bl=t("code",null,"Vector3",-1),Ql=n('<p>the current updated Vector3</p><hr><h3 id="applyrotationquaterniontoref" tabindex="-1"><a class="header-anchor" href="#applyrotationquaterniontoref" aria-hidden="true">#</a> applyRotationQuaternionToRef</h3><p>▸ <strong>applyRotationQuaternionToRef</strong>&lt;<code>T</code>&gt;(<code>q</code>, <code>result</code>): <code>T</code></p><p>Rotates the vector using the given unit quaternion and stores the new vector in result Example Playground https://playground.babylonjs.com/#R1F8YU#9</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',6),Ll=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Wl=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Zl={style:{"text-align":"left"}},Xl=t("code",null,"Vector3",-1),Jl=t("h4",{id:"parameters-10",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-10","aria-hidden":"true"},"#"),e(" Parameters")],-1),Kl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),$l=t("td",{style:{"text-align":"left"}},[t("code",null,"q")],-1),to={style:{"text-align":"left"}},eo=t("code",null,"Quaternion",-1),lo=t("td",{style:{"text-align":"left"}},"the unit quaternion representing the rotation",-1),oo=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the output vector")],-1),so=n('<h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the result</p><hr><h3 id="asarray" tabindex="-1"><a class="header-anchor" href="#asarray" aria-hidden="true">#</a> asArray</h3><p>▸ <strong>asArray</strong>(): <code>number</code>[]</p><p>Creates an array containing three elements : the coordinates of the Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#10</p><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26" aria-hidden="true">#</a> Returns</h4><p><code>number</code>[]</p><p>a new array of numbers</p><hr><h3 id="clone" tabindex="-1"><a class="header-anchor" href="#clone" aria-hidden="true">#</a> clone</h3>',12),no=t("strong",null,"clone",-1),ao=t("code",null,"Vector3",-1),ro=t("p",null,"Creates a new Vector3 copied from the current Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#11",-1),co=t("h4",{id:"returns-27",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-27","aria-hidden":"true"},"#"),e(" Returns")],-1),io=t("code",null,"Vector3",-1),ho=t("p",null,"the new Vector3",-1),uo=t("hr",null,null,-1),_o=t("h3",{id:"copyfrom",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#copyfrom","aria-hidden":"true"},"#"),e(" copyFrom")],-1),fo=t("strong",null,"copyFrom",-1),po=t("code",null,"source",-1),yo=t("code",null,"Vector3",-1),mo=t("p",null,"Copies the given vector coordinates to the current Vector3 ones Example Playground https://playground.babylonjs.com/#R1F8YU#12",-1),go=t("h4",{id:"parameters-11",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-11","aria-hidden":"true"},"#"),e(" Parameters")],-1),xo=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),bo=t("td",{style:{"text-align":"left"}},[t("code",null,"source")],-1),Vo={style:{"text-align":"left"}},To=t("code",null,"DeepImmutableObject",-1),vo=t("code",null,"Vector3",-1),Ro=t("td",{style:{"text-align":"left"}},"defines the source Vector3",-1),wo=t("h4",{id:"returns-28",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-28","aria-hidden":"true"},"#"),e(" Returns")],-1),jo=t("code",null,"Vector3",-1),Po=t("p",null,"the current updated Vector3",-1),qo=t("hr",null,null,-1),Do=t("h3",{id:"copyfromfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#copyfromfloats","aria-hidden":"true"},"#"),e(" copyFromFloats")],-1),Fo=t("strong",null,"copyFromFloats",-1),No=t("code",null,"x",-1),Io=t("code",null,"y",-1),Oo=t("code",null,"z",-1),zo=t("code",null,"Vector3",-1),Uo=n('<p>Copies the given floats to the current Vector3 coordinates Example Playground https://playground.babylonjs.com/#R1F8YU#13</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr></tbody></table><h4 id="returns-29" tabindex="-1"><a class="header-anchor" href="#returns-29" aria-hidden="true">#</a> Returns</h4>',4),Eo=t("code",null,"Vector3",-1),Yo=t("p",null,"the current updated Vector3",-1),Ao=t("hr",null,null,-1),Co=t("h3",{id:"cross",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#cross","aria-hidden":"true"},"#"),e(" cross")],-1),Mo=t("strong",null,"cross",-1),So=t("code",null,"other",-1),Go=t("code",null,"Vector3",-1),Ho=t("p",null,'Returns a new Vector3 as the cross product of the current vector and the "other" one The cross product is then orthogonal to both current and "other" Example Playground https://playground.babylonjs.com/#R1F8YU#14',-1),ko=t("h4",{id:"parameters-13",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-13","aria-hidden":"true"},"#"),e(" Parameters")],-1),Bo=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Qo=t("td",{style:{"text-align":"left"}},[t("code",null,"other")],-1),Lo={style:{"text-align":"left"}},Wo=t("code",null,"Vector3",-1),Zo=t("td",{style:{"text-align":"left"}},"defines the right operand",-1),Xo=t("h4",{id:"returns-30",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-30","aria-hidden":"true"},"#"),e(" Returns")],-1),Jo=t("code",null,"Vector3",-1),Ko=t("p",null,"the cross product",-1),$o=t("hr",null,null,-1),ts=t("h3",{id:"divide",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#divide","aria-hidden":"true"},"#"),e(" divide")],-1),es=t("strong",null,"divide",-1),ls=t("code",null,"otherVector",-1),os=t("code",null,"Vector3",-1),ss=t("p",null,"Returns a new Vector3 set with the result of the division of the current Vector3 coordinates by the given ones Example Playground https://playground.babylonjs.com/#R1F8YU#16",-1),ns=t("h4",{id:"parameters-14",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-14","aria-hidden":"true"},"#"),e(" Parameters")],-1),as=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ds=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),rs={style:{"text-align":"left"}},cs=t("code",null,"DeepImmutableObject",-1),is=t("code",null,"Vector3",-1),hs=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),us=t("h4",{id:"returns-31",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-31","aria-hidden":"true"},"#"),e(" Returns")],-1),_s=t("code",null,"Vector3",-1),fs=t("p",null,"the new Vector3",-1),ps=t("hr",null,null,-1),ys=t("h3",{id:"divideinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#divideinplace","aria-hidden":"true"},"#"),e(" divideInPlace")],-1),ms=t("strong",null,"divideInPlace",-1),gs=t("code",null,"otherVector",-1),xs=t("code",null,"Vector3",-1),bs=t("p",null,"Divides the current Vector3 coordinates by the given ones. Example Playground https://playground.babylonjs.com/#R1F8YU#17",-1),Vs=t("h4",{id:"parameters-15",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-15","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ts=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),vs=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Rs={style:{"text-align":"left"}},ws=t("code",null,"Vector3",-1),js=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Ps=t("h4",{id:"returns-32",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-32","aria-hidden":"true"},"#"),e(" Returns")],-1),qs=t("code",null,"Vector3",-1),Ds=n('<p>the current updated Vector3</p><hr><h3 id="dividetoref" tabindex="-1"><a class="header-anchor" href="#dividetoref" aria-hidden="true">#</a> divideToRef</h3><p>▸ <strong>divideToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Divides the current Vector3 coordinates by the given ones and stores the result in the given vector &quot;result&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#18</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',6),Fs=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Ns=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Is={style:{"text-align":"left"}},Os=t("code",null,"Vector3",-1),zs=t("h4",{id:"parameters-16",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-16","aria-hidden":"true"},"#"),e(" Parameters")],-1),Us=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Es=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Ys={style:{"text-align":"left"}},As=t("code",null,"DeepImmutableObject",-1),Cs=t("code",null,"Vector3",-1),Ms=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Ss=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 object where to store the result")],-1),Gs=n('<h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the result</p><hr><h3 id="dot" tabindex="-1"><a class="header-anchor" href="#dot" aria-hidden="true">#</a> dot</h3><p>▸ <strong>dot</strong>(<code>otherVector</code>): <code>number</code></p><p>Returns the dot product (float) between the current vectors and &quot;otherVector&quot;</p><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h4>',8),Hs=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ks=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Bs={style:{"text-align":"left"}},Qs=t("code",null,"DeepImmutableObject",-1),Ls=t("code",null,"Vector3",-1),Ws=t("td",{style:{"text-align":"left"}},"defines the right operand",-1),Zs=n('<h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the dot product</p><hr><h3 id="equals" tabindex="-1"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> equals</h3><p>▸ <strong>equals</strong>(<code>otherVector</code>): <code>boolean</code></p><p>Returns true if the current Vector3 and the given vector coordinates are strictly equal Example Playground https://playground.babylonjs.com/#R1F8YU#19</p><h4 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h4>',8),Xs=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Js=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Ks={style:{"text-align":"left"}},$s=t("code",null,"DeepImmutableObject",-1),tn=t("code",null,"Vector3",-1),en=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),ln=n('<h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><p>true if both vectors are equals</p><hr><h3 id="equalstofloats" tabindex="-1"><a class="header-anchor" href="#equalstofloats" aria-hidden="true">#</a> equalsToFloats</h3><p>▸ <strong>equalsToFloats</strong>(<code>x</code>, <code>y</code>, <code>z</code>): <code>boolean</code></p><p>Returns true if the current Vector3 coordinates equals the given floats Example Playground https://playground.babylonjs.com/#R1F8YU#20</p><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr></tbody></table><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><p>true if both vectors are equal</p><hr><h3 id="equalswithepsilon" tabindex="-1"><a class="header-anchor" href="#equalswithepsilon" aria-hidden="true">#</a> equalsWithEpsilon</h3><p>▸ <strong>equalsWithEpsilon</strong>(<code>otherVector</code>, <code>epsilon?</code>): <code>boolean</code></p><p>Returns true if the current Vector3 and the given vector coordinates are distant less than epsilon Example Playground https://playground.babylonjs.com/#R1F8YU#21</p><h4 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a> Parameters</h4>',17),on=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),sn=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),nn={style:{"text-align":"left"}},an=t("code",null,"DeepImmutableObject",-1),dn=t("code",null,"Vector3",-1),rn=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),cn=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"epsilon?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the minimal distance to define values as equals")],-1),hn=t("h4",{id:"returns-37",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-37","aria-hidden":"true"},"#"),e(" Returns")],-1),un=t("p",null,[t("code",null,"boolean")],-1),_n=t("p",null,"true if both vectors are distant less than epsilon",-1),fn=t("hr",null,null,-1),pn=t("h3",{id:"floor",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#floor","aria-hidden":"true"},"#"),e(" floor")],-1),yn=t("strong",null,"floor",-1),mn=t("code",null,"Vector3",-1),gn=t("p",null,"Gets a new Vector3 from current Vector3 floored values Example Playground https://playground.babylonjs.com/#R1F8YU#22",-1),xn=t("h4",{id:"returns-38",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-38","aria-hidden":"true"},"#"),e(" Returns")],-1),bn=t("code",null,"Vector3",-1),Vn=t("p",null,"a new Vector3",-1),Tn=t("hr",null,null,-1),vn=t("h3",{id:"fract",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fract","aria-hidden":"true"},"#"),e(" fract")],-1),Rn=t("strong",null,"fract",-1),wn=t("code",null,"Vector3",-1),jn=t("p",null,"Gets a new Vector3 from current Vector3 fractional values Example Playground https://playground.babylonjs.com/#R1F8YU#23",-1),Pn=t("h4",{id:"returns-39",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-39","aria-hidden":"true"},"#"),e(" Returns")],-1),qn=t("code",null,"Vector3",-1),Dn=t("p",null,"a new Vector3",-1),Fn=t("hr",null,null,-1),Nn=t("h3",{id:"fromarray",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fromarray","aria-hidden":"true"},"#"),e(" fromArray")],-1),In=t("strong",null,"fromArray",-1),On=t("code",null,"array",-1),zn=t("code",null,"index?",-1),Un=t("code",null,"Vector3",-1),En=n('<p>Update the current vector from an array Example Playground https://playground.babylonjs.com/#R1F8YU#24</p><h4 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>FloatArray</code></td><td style="text-align:left;">defines the destination array</td></tr><tr><td style="text-align:left;"><code>index?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the destination array</td></tr></tbody></table><h4 id="returns-40" tabindex="-1"><a class="header-anchor" href="#returns-40" aria-hidden="true">#</a> Returns</h4>',4),Yn=t("code",null,"Vector3",-1),An=n('<p>the current Vector3</p><hr><h3 id="getclassname" tabindex="-1"><a class="header-anchor" href="#getclassname" aria-hidden="true">#</a> getClassName</h3><p>▸ <strong>getClassName</strong>(): <code>string</code></p><p>Gets the class name</p><h4 id="returns-41" tabindex="-1"><a class="header-anchor" href="#returns-41" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>the string &quot;Vector3&quot;</p><hr><h3 id="gethashcode" tabindex="-1"><a class="header-anchor" href="#gethashcode" aria-hidden="true">#</a> getHashCode</h3><p>▸ <strong>getHashCode</strong>(): <code>number</code></p><p>Creates the Vector3 hash code</p><h4 id="returns-42" tabindex="-1"><a class="header-anchor" href="#returns-42" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>a number which tends to be unique between Vector3 instances</p><hr><h3 id="getnormaltoref" tabindex="-1"><a class="header-anchor" href="#getnormaltoref" aria-hidden="true">#</a> getNormalToRef</h3>',17),Cn=t("strong",null,"getNormalToRef",-1),Mn=t("code",null,"result",-1),Sn=t("code",null,"Vector3",-1),Gn=t("p",null,"Creates a vector normal (perpendicular) to the current Vector3 and stores the result in the given vector Out of the infinite possibilities the normal chosen is the one formed by rotating the current vector 90 degrees about an axis which lies perpendicular to the current vector and its projection on the xz plane. In the case of a current vector in the xz plane the normal is calculated to be along the y axis. Example Playground https://playground.babylonjs.com/#R1F8YU#230 Example Playground https://playground.babylonjs.com/#R1F8YU#231",-1),Hn=t("h4",{id:"parameters-22",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-22","aria-hidden":"true"},"#"),e(" Parameters")],-1),kn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Bn=t("td",{style:{"text-align":"left"}},[t("code",null,"result")],-1),Qn={style:{"text-align":"left"}},Ln=t("code",null,"DeepImmutableObject",-1),Wn=t("code",null,"Vector3",-1),Zn=t("td",{style:{"text-align":"left"}},"defines the Vector3 object where to store the resultant normal returns the result",-1),Xn=t("h4",{id:"returns-43",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-43","aria-hidden":"true"},"#"),e(" Returns")],-1),Jn=t("code",null,"Vector3",-1),Kn=n('<hr><h3 id="isnonuniformwithinepsilon" tabindex="-1"><a class="header-anchor" href="#isnonuniformwithinepsilon" aria-hidden="true">#</a> isNonUniformWithinEpsilon</h3><p>▸ <strong>isNonUniformWithinEpsilon</strong>(<code>epsilon</code>): <code>boolean</code></p><p>Due to float precision, scale of a mesh could be uniform but float values are off by a small fraction Check if is non uniform within a certain amount of decimal places to account for this</p><h4 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>epsilon</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the amount the values can differ</td></tr></tbody></table><h4 id="returns-44" tabindex="-1"><a class="header-anchor" href="#returns-44" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><p>if the vector is non uniform to a certain number of decimal places</p><hr><h3 id="length" tabindex="-1"><a class="header-anchor" href="#length" aria-hidden="true">#</a> length</h3><p>▸ <strong>length</strong>(): <code>number</code></p><p>Gets the length of the Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#25</p><h4 id="returns-45" tabindex="-1"><a class="header-anchor" href="#returns-45" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the length of the Vector3</p><hr><h3 id="lengthsquared" tabindex="-1"><a class="header-anchor" href="#lengthsquared" aria-hidden="true">#</a> lengthSquared</h3><p>▸ <strong>lengthSquared</strong>(): <code>number</code></p><p>Gets the squared length of the Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#26</p><h4 id="returns-46" tabindex="-1"><a class="header-anchor" href="#returns-46" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>squared length of the Vector3</p><hr><h3 id="maximizeinplace" tabindex="-1"><a class="header-anchor" href="#maximizeinplace" aria-hidden="true">#</a> maximizeInPlace</h3>',25),$n=t("strong",null,"maximizeInPlace",-1),ta=t("code",null,"other",-1),ea=t("code",null,"Vector3",-1),la=t("p",null,"Updates the current Vector3 with the maximal coordinate values between its and the given vector ones. Example Playground https://playground.babylonjs.com/#R1F8YU#27",-1),oa=t("h4",{id:"parameters-24",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-24","aria-hidden":"true"},"#"),e(" Parameters")],-1),sa=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),na=t("td",{style:{"text-align":"left"}},[t("code",null,"other")],-1),aa={style:{"text-align":"left"}},da=t("code",null,"DeepImmutableObject",-1),ra=t("code",null,"Vector3",-1),ca=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),ia=t("h4",{id:"returns-47",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-47","aria-hidden":"true"},"#"),e(" Returns")],-1),ha=t("code",null,"Vector3",-1),ua=t("p",null,"the current updated Vector3",-1),_a=t("hr",null,null,-1),fa=t("h3",{id:"maximizeinplacefromfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#maximizeinplacefromfloats","aria-hidden":"true"},"#"),e(" maximizeInPlaceFromFloats")],-1),pa=t("strong",null,"maximizeInPlaceFromFloats",-1),ya=t("code",null,"x",-1),ma=t("code",null,"y",-1),ga=t("code",null,"z",-1),xa=t("code",null,"Vector3",-1),ba=n('<p>Updates the current Vector3 with the maximal coordinate values between its and the given coordinates. Example Playground https://playground.babylonjs.com/#R1F8YU#28</p><h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr></tbody></table><h4 id="returns-48" tabindex="-1"><a class="header-anchor" href="#returns-48" aria-hidden="true">#</a> Returns</h4>',4),Va=t("code",null,"Vector3",-1),Ta=t("p",null,"the current updated Vector3",-1),va=t("hr",null,null,-1),Ra=t("h3",{id:"minimizeinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#minimizeinplace","aria-hidden":"true"},"#"),e(" minimizeInPlace")],-1),wa=t("strong",null,"minimizeInPlace",-1),ja=t("code",null,"other",-1),Pa=t("code",null,"Vector3",-1),qa=t("p",null,"Updates the current Vector3 with the minimal coordinate values between its and the given vector ones Example Playground https://playground.babylonjs.com/#R1F8YU#29",-1),Da=t("h4",{id:"parameters-26",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-26","aria-hidden":"true"},"#"),e(" Parameters")],-1),Fa=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Na=t("td",{style:{"text-align":"left"}},[t("code",null,"other")],-1),Ia={style:{"text-align":"left"}},Oa=t("code",null,"DeepImmutableObject",-1),za=t("code",null,"Vector3",-1),Ua=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Ea=t("h4",{id:"returns-49",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-49","aria-hidden":"true"},"#"),e(" Returns")],-1),Ya=t("code",null,"Vector3",-1),Aa=t("p",null,"the current updated Vector3",-1),Ca=t("hr",null,null,-1),Ma=t("h3",{id:"minimizeinplacefromfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#minimizeinplacefromfloats","aria-hidden":"true"},"#"),e(" minimizeInPlaceFromFloats")],-1),Sa=t("strong",null,"minimizeInPlaceFromFloats",-1),Ga=t("code",null,"x",-1),Ha=t("code",null,"y",-1),ka=t("code",null,"z",-1),Ba=t("code",null,"Vector3",-1),Qa=n('<p>Updates the current Vector3 with the minimal coordinate values between its and the given coordinates Example Playground https://playground.babylonjs.com/#R1F8YU#30</p><h4 id="parameters-27" tabindex="-1"><a class="header-anchor" href="#parameters-27" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr></tbody></table><h4 id="returns-50" tabindex="-1"><a class="header-anchor" href="#returns-50" aria-hidden="true">#</a> Returns</h4>',4),La=t("code",null,"Vector3",-1),Wa=t("p",null,"the current updated Vector3",-1),Za=t("hr",null,null,-1),Xa=t("h3",{id:"multiply",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#multiply","aria-hidden":"true"},"#"),e(" multiply")],-1),Ja=t("strong",null,"multiply",-1),Ka=t("code",null,"otherVector",-1),$a=t("code",null,"Vector3",-1),td=t("p",null,"Returns a new Vector3, result of the multiplication of the current Vector3 by the given vector Example Playground https://playground.babylonjs.com/#R1F8YU#31",-1),ed=t("h4",{id:"parameters-28",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-28","aria-hidden":"true"},"#"),e(" Parameters")],-1),ld=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),od=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),sd={style:{"text-align":"left"}},nd=t("code",null,"DeepImmutableObject",-1),ad=t("code",null,"Vector3",-1),dd=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),rd=t("h4",{id:"returns-51",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-51","aria-hidden":"true"},"#"),e(" Returns")],-1),cd=t("code",null,"Vector3",-1),id=t("p",null,"the new Vector3",-1),hd=t("hr",null,null,-1),ud=t("h3",{id:"multiplybyfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#multiplybyfloats","aria-hidden":"true"},"#"),e(" multiplyByFloats")],-1),_d=t("strong",null,"multiplyByFloats",-1),fd=t("code",null,"x",-1),pd=t("code",null,"y",-1),yd=t("code",null,"z",-1),md=t("code",null,"Vector3",-1),gd=n('<p>Returns a new Vector3 set with the result of the multiplication of the current Vector3 coordinates by the given floats Example Playground https://playground.babylonjs.com/#R1F8YU#34</p><h4 id="parameters-29" tabindex="-1"><a class="header-anchor" href="#parameters-29" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr></tbody></table><h4 id="returns-52" tabindex="-1"><a class="header-anchor" href="#returns-52" aria-hidden="true">#</a> Returns</h4>',4),xd=t("code",null,"Vector3",-1),bd=t("p",null,"the new Vector3",-1),Vd=t("hr",null,null,-1),Td=t("h3",{id:"multiplyinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#multiplyinplace","aria-hidden":"true"},"#"),e(" multiplyInPlace")],-1),vd=t("strong",null,"multiplyInPlace",-1),Rd=t("code",null,"otherVector",-1),wd=t("code",null,"Vector3",-1),jd=t("p",null,"Multiplies the current Vector3 coordinates by the given ones Example Playground https://playground.babylonjs.com/#R1F8YU#32",-1),Pd=t("h4",{id:"parameters-30",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-30","aria-hidden":"true"},"#"),e(" Parameters")],-1),qd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Dd=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Fd={style:{"text-align":"left"}},Nd=t("code",null,"DeepImmutableObject",-1),Id=t("code",null,"Vector3",-1),Od=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),zd=t("h4",{id:"returns-53",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-53","aria-hidden":"true"},"#"),e(" Returns")],-1),Ud=t("code",null,"Vector3",-1),Ed=n('<p>the current updated Vector3</p><hr><h3 id="multiplytoref" tabindex="-1"><a class="header-anchor" href="#multiplytoref" aria-hidden="true">#</a> multiplyToRef</h3><p>▸ <strong>multiplyToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Multiplies the current Vector3 by the given one and stores the result in the given vector &quot;result&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#33</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',6),Yd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Ad=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Cd={style:{"text-align":"left"}},Md=t("code",null,"Vector3",-1),Sd=t("h4",{id:"parameters-31",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-31","aria-hidden":"true"},"#"),e(" Parameters")],-1),Gd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Hd=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),kd={style:{"text-align":"left"}},Bd=t("code",null,"DeepImmutableObject",-1),Qd=t("code",null,"Vector3",-1),Ld=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Wd=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 object where to store the result")],-1),Zd=t("h4",{id:"returns-54",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-54","aria-hidden":"true"},"#"),e(" Returns")],-1),Xd=t("p",null,[t("code",null,"T")],-1),Jd=t("p",null,"the result",-1),Kd=t("hr",null,null,-1),$d=t("h3",{id:"negate",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#negate","aria-hidden":"true"},"#"),e(" negate")],-1),tr=t("strong",null,"negate",-1),er=t("code",null,"Vector3",-1),lr=t("p",null,"Gets a new Vector3 set with the current Vector3 negated coordinates Example Playground https://playground.babylonjs.com/#R1F8YU#35",-1),or=t("h4",{id:"returns-55",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-55","aria-hidden":"true"},"#"),e(" Returns")],-1),sr=t("code",null,"Vector3",-1),nr=t("p",null,"a new Vector3",-1),ar=t("hr",null,null,-1),dr=t("h3",{id:"negateinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#negateinplace","aria-hidden":"true"},"#"),e(" negateInPlace")],-1),rr=t("strong",null,"negateInPlace",-1),cr=t("code",null,"Vector3",-1),ir=t("p",null,"Negate this vector in place Example Playground https://playground.babylonjs.com/#R1F8YU#36",-1),hr=t("h4",{id:"returns-56",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-56","aria-hidden":"true"},"#"),e(" Returns")],-1),ur=t("code",null,"Vector3",-1),_r=n('<p>this</p><hr><h3 id="negatetoref" tabindex="-1"><a class="header-anchor" href="#negatetoref" aria-hidden="true">#</a> negateToRef</h3><p>▸ <strong>negateToRef</strong>&lt;<code>T</code>&gt;(<code>result</code>): <code>T</code></p><p>Negate the current Vector3 and stores the result in the given vector &quot;result&quot; coordinates Example Playground https://playground.babylonjs.com/#R1F8YU#37</p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',6),fr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),pr=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),yr={style:{"text-align":"left"}},mr=t("code",null,"Vector3",-1),gr=t("code",null,"Vector3",-1),xr=n('<h4 id="parameters-32" tabindex="-1"><a class="header-anchor" href="#parameters-32" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 object where to store the result</td></tr></tbody></table><h4 id="returns-57" tabindex="-1"><a class="header-anchor" href="#returns-57" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the result</p><hr><h3 id="normalize" tabindex="-1"><a class="header-anchor" href="#normalize" aria-hidden="true">#</a> normalize</h3>',7),br=t("strong",null,"normalize",-1),Vr=t("code",null,"Vector3",-1),Tr=t("p",null,"Normalize the current Vector3. Please note that this is an in place operation. Example Playground https://playground.babylonjs.com/#R1F8YU#122",-1),vr=t("h4",{id:"returns-58",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-58","aria-hidden":"true"},"#"),e(" Returns")],-1),Rr=t("code",null,"Vector3",-1),wr=t("p",null,"the current updated Vector3",-1),jr=t("hr",null,null,-1),Pr=t("h3",{id:"normalizefromlength",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#normalizefromlength","aria-hidden":"true"},"#"),e(" normalizeFromLength")],-1),qr=t("strong",null,"normalizeFromLength",-1),Dr=t("code",null,"len",-1),Fr=t("code",null,"Vector3",-1),Nr=n('<p>Normalize the current Vector3 with the given input length. Please note that this is an in place operation. Example Playground https://playground.babylonjs.com/#R1F8YU#123</p><h4 id="parameters-33" tabindex="-1"><a class="header-anchor" href="#parameters-33" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>len</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the length of the vector</td></tr></tbody></table><h4 id="returns-59" tabindex="-1"><a class="header-anchor" href="#returns-59" aria-hidden="true">#</a> Returns</h4>',4),Ir=t("code",null,"Vector3",-1),Or=t("p",null,"the current updated Vector3",-1),zr=t("hr",null,null,-1),Ur=t("h3",{id:"normalizetonew",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#normalizetonew","aria-hidden":"true"},"#"),e(" normalizeToNew")],-1),Er=t("strong",null,"normalizeToNew",-1),Yr=t("code",null,"Vector3",-1),Ar=t("p",null,"Normalize the current Vector3 to a new vector Example Playground https://playground.babylonjs.com/#R1F8YU#124",-1),Cr=t("h4",{id:"returns-60",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-60","aria-hidden":"true"},"#"),e(" Returns")],-1),Mr=t("code",null,"Vector3",-1),Sr=n('<p>the new Vector3</p><hr><h3 id="normalizetoref" tabindex="-1"><a class="header-anchor" href="#normalizetoref" aria-hidden="true">#</a> normalizeToRef</h3><p>▸ <strong>normalizeToRef</strong>&lt;<code>T</code>&gt;(<code>reference</code>): <code>T</code></p><p>Normalize the current Vector3 to the reference Example Playground https://playground.babylonjs.com/#R1F8YU#125</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4>',6),Gr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Hr=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),kr={style:{"text-align":"left"}},Br=t("code",null,"Vector3",-1),Qr=n('<h4 id="parameters-34" tabindex="-1"><a class="header-anchor" href="#parameters-34" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>reference</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">define the Vector3 to update</td></tr></tbody></table><h4 id="returns-61" tabindex="-1"><a class="header-anchor" href="#returns-61" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the updated Vector3</p><hr><h3 id="projectonplane" tabindex="-1"><a class="header-anchor" href="#projectonplane" aria-hidden="true">#</a> projectOnPlane</h3><p>▸ <strong>projectOnPlane</strong>&lt;<code>T</code>&gt;(<code>plane</code>, <code>origin</code>): <code>T</code></p><p>Projects the current point Vector3 to a plane along a ray starting from a specified origin and passing through the current point Vector3. Example Playground https://playground.babylonjs.com/#R1F8YU#48</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters</h4>',10),Lr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Wr=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Zr={style:{"text-align":"left"}},Xr=t("code",null,"Vector3",-1),Jr=t("h4",{id:"parameters-35",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-35","aria-hidden":"true"},"#"),e(" Parameters")],-1),Kr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),$r=t("td",{style:{"text-align":"left"}},[t("code",null,"plane")],-1),tc={style:{"text-align":"left"}},ec=t("code",null,"Plane",-1),lc=t("td",{style:{"text-align":"left"}},"defines the plane to project to",-1),oc=t("td",{style:{"text-align":"left"}},[t("code",null,"origin")],-1),sc={style:{"text-align":"left"}},nc=t("code",null,"Vector3",-1),ac=t("td",{style:{"text-align":"left"}},"defines the origin of the projection ray",-1),dc=n('<h4 id="returns-62" tabindex="-1"><a class="header-anchor" href="#returns-62" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the projected vector3</p><hr><h3 id="projectonplanetoref" tabindex="-1"><a class="header-anchor" href="#projectonplanetoref" aria-hidden="true">#</a> projectOnPlaneToRef</h3><p>▸ <strong>projectOnPlaneToRef</strong>&lt;<code>T</code>&gt;(<code>plane</code>, <code>origin</code>, <code>result</code>): <code>T</code></p><p>Projects the current point Vector3 to a plane along a ray starting from a specified origin and passing through the current point Vector3. Example Playground https://playground.babylonjs.com/#R1F8YU#49</p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters</h4>',8),rc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),cc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ic={style:{"text-align":"left"}},hc=t("code",null,"Vector3",-1),uc=t("h4",{id:"parameters-36",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-36","aria-hidden":"true"},"#"),e(" Parameters")],-1),_c=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),fc=t("td",{style:{"text-align":"left"}},[t("code",null,"plane")],-1),pc={style:{"text-align":"left"}},yc=t("code",null,"Plane",-1),mc=t("td",{style:{"text-align":"left"}},"defines the plane to project to",-1),gc=t("td",{style:{"text-align":"left"}},[t("code",null,"origin")],-1),xc={style:{"text-align":"left"}},bc=t("code",null,"Vector3",-1),Vc=t("td",{style:{"text-align":"left"}},"defines the origin of the projection ray",-1),Tc=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),vc=t("h4",{id:"returns-63",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-63","aria-hidden":"true"},"#"),e(" Returns")],-1),Rc=t("p",null,[t("code",null,"T")],-1),wc=t("p",null,"result input",-1),jc=t("hr",null,null,-1),Pc=t("h3",{id:"reorderinplace",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reorderinplace","aria-hidden":"true"},"#"),e(" reorderInPlace")],-1),qc=t("strong",null,"reorderInPlace",-1),Dc=t("code",null,"order",-1),Fc=t("code",null,"Vector3",-1),Nc=n('<p>Reorders the x y z properties of the vector in place Example Playground https://playground.babylonjs.com/#R1F8YU#44</p><h4 id="parameters-37" tabindex="-1"><a class="header-anchor" href="#parameters-37" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>order</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">new ordering of the properties (eg. for vector 1,2,3 with &quot;ZYX&quot; will produce 3,2,1)</td></tr></tbody></table><h4 id="returns-64" tabindex="-1"><a class="header-anchor" href="#returns-64" aria-hidden="true">#</a> Returns</h4>',4),Ic=t("code",null,"Vector3",-1),Oc=n('<p>the current updated vector</p><hr><h3 id="rotatebyquaternionaroundpointtoref" tabindex="-1"><a class="header-anchor" href="#rotatebyquaternionaroundpointtoref" aria-hidden="true">#</a> rotateByQuaternionAroundPointToRef</h3><p>▸ <strong>rotateByQuaternionAroundPointToRef</strong>&lt;<code>T</code>&gt;(<code>quaternion</code>, <code>point</code>, <code>result</code>): <code>T</code></p><p>Rotates a vector around a given point Example Playground https://playground.babylonjs.com/#R1F8YU#46</p><h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters</h4>',6),zc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Uc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Ec={style:{"text-align":"left"}},Yc=t("code",null,"Vector3",-1),Ac=t("h4",{id:"parameters-38",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-38","aria-hidden":"true"},"#"),e(" Parameters")],-1),Cc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Mc=t("td",{style:{"text-align":"left"}},[t("code",null,"quaternion")],-1),Sc={style:{"text-align":"left"}},Gc=t("code",null,"Quaternion",-1),Hc=t("td",{style:{"text-align":"left"}},"the rotation quaternion",-1),kc=t("td",{style:{"text-align":"left"}},[t("code",null,"point")],-1),Bc={style:{"text-align":"left"}},Qc=t("code",null,"Vector3",-1),Lc=t("td",{style:{"text-align":"left"}},"the point to rotate around",-1),Wc=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"vector to store the result")],-1),Zc=n('<h4 id="returns-65" tabindex="-1"><a class="header-anchor" href="#returns-65" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the resulting vector</p><hr><h3 id="rotatebyquaterniontoref" tabindex="-1"><a class="header-anchor" href="#rotatebyquaterniontoref" aria-hidden="true">#</a> rotateByQuaternionToRef</h3><p>▸ <strong>rotateByQuaternionToRef</strong>&lt;<code>T</code>&gt;(<code>quaternion</code>, <code>result</code>): <code>T</code></p><p>Rotates the vector around 0,0,0 by a quaternion Example Playground https://playground.babylonjs.com/#R1F8YU#47</p><h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters</h4>',8),Xc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Jc=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Kc={style:{"text-align":"left"}},$c=t("code",null,"Vector3",-1),ti=t("h4",{id:"parameters-39",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-39","aria-hidden":"true"},"#"),e(" Parameters")],-1),ei=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),li=t("td",{style:{"text-align":"left"}},[t("code",null,"quaternion")],-1),oi={style:{"text-align":"left"}},si=t("code",null,"Quaternion",-1),ni=t("td",{style:{"text-align":"left"}},"the rotation quaternion",-1),ai=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"vector to store the result")],-1),di=t("h4",{id:"returns-66",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-66","aria-hidden":"true"},"#"),e(" Returns")],-1),ri=t("p",null,[t("code",null,"T")],-1),ci=t("p",null,"the resulting vector",-1),ii=t("hr",null,null,-1),hi=t("h3",{id:"scale",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#scale","aria-hidden":"true"},"#"),e(" scale")],-1),ui=t("strong",null,"scale",-1),_i=t("code",null,"scale",-1),fi=t("code",null,"Vector3",-1),pi=n('<p>Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float &quot;scale&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#53</p><h4 id="parameters-40" tabindex="-1"><a class="header-anchor" href="#parameters-40" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the multiplier factor</td></tr></tbody></table><h4 id="returns-67" tabindex="-1"><a class="header-anchor" href="#returns-67" aria-hidden="true">#</a> Returns</h4>',4),yi=t("code",null,"Vector3",-1),mi=n('<p>a new Vector3</p><hr><h3 id="scaleandaddtoref" tabindex="-1"><a class="header-anchor" href="#scaleandaddtoref" aria-hidden="true">#</a> scaleAndAddToRef</h3><p>▸ <strong>scaleAndAddToRef</strong>&lt;<code>T</code>&gt;(<code>scale</code>, <code>result</code>): <code>T</code></p><p>Scale the current Vector3 values by a factor and add the result to a given Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#55</p><h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10" aria-hidden="true">#</a> Type parameters</h4>',6),gi=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),xi=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),bi={style:{"text-align":"left"}},Vi=t("code",null,"Vector3",-1),Ti=n('<h4 id="parameters-41" tabindex="-1"><a class="header-anchor" href="#parameters-41" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the scale factor</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 object where to store the result</td></tr></tbody></table><h4 id="returns-68" tabindex="-1"><a class="header-anchor" href="#returns-68" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="scaleinplace" tabindex="-1"><a class="header-anchor" href="#scaleinplace" aria-hidden="true">#</a> scaleInPlace</h3>',7),vi=t("strong",null,"scaleInPlace",-1),Ri=t("code",null,"scale",-1),wi=t("code",null,"Vector3",-1),ji=n('<p>Multiplies the Vector3 coordinates by the float &quot;scale&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#56</p><h4 id="parameters-42" tabindex="-1"><a class="header-anchor" href="#parameters-42" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the multiplier factor</td></tr></tbody></table><h4 id="returns-69" tabindex="-1"><a class="header-anchor" href="#returns-69" aria-hidden="true">#</a> Returns</h4>',4),Pi=t("code",null,"Vector3",-1),qi=n('<p>the current updated Vector3</p><hr><h3 id="scaletoref" tabindex="-1"><a class="header-anchor" href="#scaletoref" aria-hidden="true">#</a> scaleToRef</h3><p>▸ <strong>scaleToRef</strong>&lt;<code>T</code>&gt;(<code>scale</code>, <code>result</code>): <code>T</code></p><p>Multiplies the current Vector3 coordinates by the float &quot;scale&quot; and stores the result in the given vector &quot;result&quot; coordinates Example Playground https://playground.babylonjs.com/#R1F8YU#57</p><h4 id="type-parameters-11" tabindex="-1"><a class="header-anchor" href="#type-parameters-11" aria-hidden="true">#</a> Type parameters</h4>',6),Di=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Fi=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Ni={style:{"text-align":"left"}},Ii=t("code",null,"Vector3",-1),Oi=n('<h4 id="parameters-43" tabindex="-1"><a class="header-anchor" href="#parameters-43" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>scale</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the multiplier factor</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 object where to store the result</td></tr></tbody></table><h4 id="returns-70" tabindex="-1"><a class="header-anchor" href="#returns-70" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the result</p><hr><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set</h3>',7),zi=t("strong",null,"set",-1),Ui=t("code",null,"x",-1),Ei=t("code",null,"y",-1),Yi=t("code",null,"z",-1),Ai=t("code",null,"Vector3",-1),Ci=n('<p>Copies the given floats to the current Vector3 coordinates Example Playground https://playground.babylonjs.com/#R1F8YU#58</p><h4 id="parameters-44" tabindex="-1"><a class="header-anchor" href="#parameters-44" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr></tbody></table><h4 id="returns-71" tabindex="-1"><a class="header-anchor" href="#returns-71" aria-hidden="true">#</a> Returns</h4>',4),Mi=t("code",null,"Vector3",-1),Si=t("p",null,"the current updated Vector3",-1),Gi=t("hr",null,null,-1),Hi=t("h3",{id:"setall",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#setall","aria-hidden":"true"},"#"),e(" setAll")],-1),ki=t("strong",null,"setAll",-1),Bi=t("code",null,"v",-1),Qi=t("code",null,"Vector3",-1),Li=n('<p>Copies the given float to the current Vector3 coordinates Example Playground https://playground.babylonjs.com/#R1F8YU#59</p><h4 id="parameters-45" tabindex="-1"><a class="header-anchor" href="#parameters-45" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>v</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x, y and z coordinates of the operand</td></tr></tbody></table><h4 id="returns-72" tabindex="-1"><a class="header-anchor" href="#returns-72" aria-hidden="true">#</a> Returns</h4>',4),Wi=t("code",null,"Vector3",-1),Zi=t("p",null,"the current updated Vector3",-1),Xi=t("hr",null,null,-1),Ji=t("h3",{id:"subtract",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#subtract","aria-hidden":"true"},"#"),e(" subtract")],-1),Ki=t("strong",null,"subtract",-1),$i=t("code",null,"otherVector",-1),th=t("code",null,"Vector3",-1),eh=t("p",null,"Returns a new Vector3, result of the subtraction of the given vector from the current Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#60",-1),lh=t("h4",{id:"parameters-46",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-46","aria-hidden":"true"},"#"),e(" Parameters")],-1),oh=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),sh=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),nh={style:{"text-align":"left"}},ah=t("code",null,"DeepImmutableObject",-1),dh=t("code",null,"Vector3",-1),rh=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),ch=t("h4",{id:"returns-73",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-73","aria-hidden":"true"},"#"),e(" Returns")],-1),ih=t("code",null,"Vector3",-1),hh=t("p",null,"the resulting Vector3",-1),uh=t("hr",null,null,-1),_h=t("h3",{id:"subtractfromfloats",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#subtractfromfloats","aria-hidden":"true"},"#"),e(" subtractFromFloats")],-1),fh=t("strong",null,"subtractFromFloats",-1),ph=t("code",null,"x",-1),yh=t("code",null,"y",-1),mh=t("code",null,"z",-1),gh=t("code",null,"Vector3",-1),xh=n('<p>Returns a new Vector3 set with the subtraction of the given floats from the current Vector3 coordinates Example Playground https://playground.babylonjs.com/#R1F8YU#62</p><h4 id="parameters-47" tabindex="-1"><a class="header-anchor" href="#parameters-47" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr></tbody></table><h4 id="returns-74" tabindex="-1"><a class="header-anchor" href="#returns-74" aria-hidden="true">#</a> Returns</h4>',4),bh=t("code",null,"Vector3",-1),Vh=n('<p>the resulting Vector3</p><hr><h3 id="subtractfromfloatstoref" tabindex="-1"><a class="header-anchor" href="#subtractfromfloatstoref" aria-hidden="true">#</a> subtractFromFloatsToRef</h3><p>▸ <strong>subtractFromFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>x</code>, <code>y</code>, <code>z</code>, <code>result</code>): <code>T</code></p><p>Subtracts the given floats from the current Vector3 coordinates and set the given vector &quot;result&quot; with this result Example Playground https://playground.babylonjs.com/#R1F8YU#64</p><h4 id="type-parameters-12" tabindex="-1"><a class="header-anchor" href="#type-parameters-12" aria-hidden="true">#</a> Type parameters</h4>',6),Th=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),vh=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Rh={style:{"text-align":"left"}},wh=t("code",null,"Vector3",-1),jh=n('<h4 id="parameters-48" tabindex="-1"><a class="header-anchor" href="#parameters-48" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the operand</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 object where to store the result</td></tr></tbody></table><h4 id="returns-75" tabindex="-1"><a class="header-anchor" href="#returns-75" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the result</p><hr><h3 id="subtractinplace" tabindex="-1"><a class="header-anchor" href="#subtractinplace" aria-hidden="true">#</a> subtractInPlace</h3>',7),Ph=t("strong",null,"subtractInPlace",-1),qh=t("code",null,"otherVector",-1),Dh=t("code",null,"Vector3",-1),Fh=t("p",null,"Subtract the given vector from the current Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#61",-1),Nh=t("h4",{id:"parameters-49",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-49","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ih=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Oh=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),zh={style:{"text-align":"left"}},Uh=t("code",null,"DeepImmutableObject",-1),Eh=t("code",null,"Vector3",-1),Yh=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Ah=t("h4",{id:"returns-76",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-76","aria-hidden":"true"},"#"),e(" Returns")],-1),Ch=t("code",null,"Vector3",-1),Mh=n('<p>the current updated Vector3</p><hr><h3 id="subtracttoref" tabindex="-1"><a class="header-anchor" href="#subtracttoref" aria-hidden="true">#</a> subtractToRef</h3><p>▸ <strong>subtractToRef</strong>&lt;<code>T</code>&gt;(<code>otherVector</code>, <code>result</code>): <code>T</code></p><p>Subtracts the given vector from the current Vector3 and stores the result in the vector &quot;result&quot;. Example Playground https://playground.babylonjs.com/#R1F8YU#63</p><h4 id="type-parameters-13" tabindex="-1"><a class="header-anchor" href="#type-parameters-13" aria-hidden="true">#</a> Type parameters</h4>',6),Sh=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Gh=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Hh={style:{"text-align":"left"}},kh=t("code",null,"Vector3",-1),Bh=t("h4",{id:"parameters-50",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-50","aria-hidden":"true"},"#"),e(" Parameters")],-1),Qh=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Lh=t("td",{style:{"text-align":"left"}},[t("code",null,"otherVector")],-1),Wh={style:{"text-align":"left"}},Zh=t("code",null,"DeepImmutableObject",-1),Xh=t("code",null,"Vector3",-1),Jh=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Kh=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 object where to store the result")],-1),$h=t("h4",{id:"returns-77",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-77","aria-hidden":"true"},"#"),e(" Returns")],-1),tu=t("p",null,[t("code",null,"T")],-1),eu=t("p",null,"the result",-1),lu=t("hr",null,null,-1),ou=t("h3",{id:"toarray",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#toarray","aria-hidden":"true"},"#"),e(" toArray")],-1),su=t("strong",null,"toArray",-1),nu=t("code",null,"array",-1),au=t("code",null,"index?",-1),du=t("code",null,"Vector3",-1),ru=n('<p>Populates the given array or Float32Array from the given index with the successive coordinates of the Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#65</p><h4 id="parameters-51" tabindex="-1"><a class="header-anchor" href="#parameters-51" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>FloatArray</code></td><td style="text-align:left;">defines the destination array</td></tr><tr><td style="text-align:left;"><code>index?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the destination array</td></tr></tbody></table><h4 id="returns-78" tabindex="-1"><a class="header-anchor" href="#returns-78" aria-hidden="true">#</a> Returns</h4>',4),cu=t("code",null,"Vector3",-1),iu=t("p",null,"the current Vector3",-1),hu=t("hr",null,null,-1),uu=t("h3",{id:"toquaternion",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#toquaternion","aria-hidden":"true"},"#"),e(" toQuaternion")],-1),_u=t("strong",null,"toQuaternion",-1),fu=t("code",null,"Quaternion",-1),pu=t("p",null,"Converts the current Vector3 into a quaternion (considering that the Vector3 contains Euler angles representation of a rotation) Example Playground https://playground.babylonjs.com/#R1F8YU#66",-1),yu=t("h4",{id:"returns-79",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-79","aria-hidden":"true"},"#"),e(" Returns")],-1),mu=t("code",null,"Quaternion",-1),gu=n('<p>a new Quaternion object, computed from the Vector3 coordinates</p><hr><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><p>▸ <strong>toString</strong>(): <code>string</code></p><p>Creates a string representation of the Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#67</p><h4 id="returns-80" tabindex="-1"><a class="header-anchor" href="#returns-80" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><p>a string with the Vector3 coordinates.</p><hr><h3 id="backward" tabindex="-1"><a class="header-anchor" href="#backward" aria-hidden="true">#</a> Backward</h3>',10),xu=t("strong",null,"Backward",-1),bu=t("code",null,"rightHandedSystem?",-1),Vu=t("code",null,"Vector3",-1),Tu=n('<p>Returns a new Vector3 set to (0.0, 0.0, -1.0) Example Playground https://playground.babylonjs.com/#R1F8YU#71</p><h4 id="parameters-52" tabindex="-1"><a class="header-anchor" href="#parameters-52" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>rightHandedSystem?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">is the scene right-handed (negative-z)</td></tr></tbody></table><h4 id="returns-81" tabindex="-1"><a class="header-anchor" href="#returns-81" aria-hidden="true">#</a> Returns</h4>',4),vu=t("code",null,"Vector3",-1),Ru=n('<p>a new Backward Vector3</p><hr><h3 id="catmullrom" tabindex="-1"><a class="header-anchor" href="#catmullrom" aria-hidden="true">#</a> CatmullRom</h3><p>▸ <strong>CatmullRom</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>value2</code>, <code>value3</code>, <code>value4</code>, <code>amount</code>): <code>T</code></p><p>Returns a new Vector3 located for &quot;amount&quot; on the CatmullRom interpolation spline defined by the vectors &quot;value1&quot;, &quot;value2&quot;, &quot;value3&quot;, &quot;value4&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#69</p><h4 id="type-parameters-14" tabindex="-1"><a class="header-anchor" href="#type-parameters-14" aria-hidden="true">#</a> Type parameters</h4>',6),wu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ju=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Pu={style:{"text-align":"left"}},qu=t("code",null,"Vector3",-1),Du=t("h4",{id:"parameters-53",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-53","aria-hidden":"true"},"#"),e(" Parameters")],-1),Fu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Nu=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the first control point")],-1),Iu=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),Ou={style:{"text-align":"left"}},zu=t("code",null,"DeepImmutableObject",-1),Uu=t("code",null,"Vector3",-1),Eu=t("td",{style:{"text-align":"left"}},"defines the second control point",-1),Yu=t("td",{style:{"text-align":"left"}},[t("code",null,"value3")],-1),Au={style:{"text-align":"left"}},Cu=t("code",null,"DeepImmutableObject",-1),Mu=t("code",null,"Vector3",-1),Su=t("td",{style:{"text-align":"left"}},"defines the third control point",-1),Gu=t("td",{style:{"text-align":"left"}},[t("code",null,"value4")],-1),Hu={style:{"text-align":"left"}},ku=t("code",null,"DeepImmutableObject",-1),Bu=t("code",null,"Vector3",-1),Qu=t("td",{style:{"text-align":"left"}},"defines the fourth control point",-1),Lu=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"amount")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the amount on the spline to use")],-1),Wu=t("h4",{id:"returns-82",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-82","aria-hidden":"true"},"#"),e(" Returns")],-1),Zu=t("p",null,[t("code",null,"T")],-1),Xu=t("p",null,"the new Vector3",-1),Ju=t("hr",null,null,-1),Ku=t("h3",{id:"center",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#center","aria-hidden":"true"},"#"),e(" Center")],-1),$u=t("strong",null,"Center",-1),t1=t("code",null,"value1",-1),e1=t("code",null,"value2",-1),l1=t("code",null,"Vector3",-1),o1=t("p",null,'Returns a new Vector3 located at the center between "value1" and "value2" Example Playground https://playground.babylonjs.com/#R1F8YU#72',-1),s1=t("h4",{id:"parameters-54",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-54","aria-hidden":"true"},"#"),e(" Parameters")],-1),n1=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),a1=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),d1={style:{"text-align":"left"}},r1=t("code",null,"DeepImmutableObject",-1),c1=t("code",null,"Vector3",-1),i1=t("td",{style:{"text-align":"left"}},"defines the first operand",-1),h1=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),u1={style:{"text-align":"left"}},_1=t("code",null,"DeepImmutableObject",-1),f1=t("code",null,"Vector3",-1),p1=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),y1=t("h4",{id:"returns-83",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-83","aria-hidden":"true"},"#"),e(" Returns")],-1),m1=t("code",null,"Vector3",-1),g1=n('<p>the new Vector3</p><hr><h3 id="centertoref" tabindex="-1"><a class="header-anchor" href="#centertoref" aria-hidden="true">#</a> CenterToRef</h3><p>▸ <strong>CenterToRef</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>value2</code>, <code>ref</code>): <code>T</code></p><p>Gets the center of the vectors &quot;value1&quot; and &quot;value2&quot; and stores the result in the vector &quot;ref&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#73</p><h4 id="type-parameters-15" tabindex="-1"><a class="header-anchor" href="#type-parameters-15" aria-hidden="true">#</a> Type parameters</h4>',6),x1=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),b1=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),V1={style:{"text-align":"left"}},T1=t("code",null,"Vector3",-1),v1=t("h4",{id:"parameters-55",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-55","aria-hidden":"true"},"#"),e(" Parameters")],-1),R1=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),w1=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),j1={style:{"text-align":"left"}},P1=t("code",null,"DeepImmutableObject",-1),q1=t("code",null,"Vector3",-1),D1=t("td",{style:{"text-align":"left"}},"defines first vector",-1),F1=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),N1={style:{"text-align":"left"}},I1=t("code",null,"DeepImmutableObject",-1),O1=t("code",null,"Vector3",-1),z1=t("td",{style:{"text-align":"left"}},"defines second vector",-1),U1=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"ref")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines third vector")],-1),E1=n('<h4 id="returns-84" tabindex="-1"><a class="header-anchor" href="#returns-84" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>ref</p><hr><h3 id="checkextends" tabindex="-1"><a class="header-anchor" href="#checkextends" aria-hidden="true">#</a> CheckExtends</h3><p>▸ <strong>CheckExtends</strong>(<code>v</code>, <code>min</code>, <code>max</code>): <code>void</code></p><p>Checks if a given vector is inside a specific range Example Playground https://playground.babylonjs.com/#R1F8YU#75</p><h4 id="parameters-56" tabindex="-1"><a class="header-anchor" href="#parameters-56" aria-hidden="true">#</a> Parameters</h4>',8),Y1=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),A1=t("td",{style:{"text-align":"left"}},[t("code",null,"v")],-1),C1={style:{"text-align":"left"}},M1=t("code",null,"Vector3",-1),S1=t("td",{style:{"text-align":"left"}},"defines the vector to test",-1),G1=t("td",{style:{"text-align":"left"}},[t("code",null,"min")],-1),H1={style:{"text-align":"left"}},k1=t("code",null,"Vector3",-1),B1=t("td",{style:{"text-align":"left"}},"defines the minimum range",-1),Q1=t("td",{style:{"text-align":"left"}},[t("code",null,"max")],-1),L1={style:{"text-align":"left"}},W1=t("code",null,"Vector3",-1),Z1=t("td",{style:{"text-align":"left"}},"defines the maximum range",-1),X1=n('<h4 id="returns-85" tabindex="-1"><a class="header-anchor" href="#returns-85" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="clamp" tabindex="-1"><a class="header-anchor" href="#clamp" aria-hidden="true">#</a> Clamp</h3><p>▸ <strong>Clamp</strong>&lt;<code>T</code>&gt;(<code>value</code>, <code>min</code>, <code>max</code>): <code>T</code></p><p>Returns a new Vector3 set with the coordinates of &quot;value&quot;, if the vector &quot;value&quot; is in the cube defined by the vectors &quot;min&quot; and &quot;max&quot; If a coordinate value of &quot;value&quot; is lower than one of the &quot;min&quot; coordinate, then this &quot;value&quot; coordinate is set with the &quot;min&quot; one If a coordinate value of &quot;value&quot; is greater than one of the &quot;max&quot; coordinate, then this &quot;value&quot; coordinate is set with the &quot;max&quot; one Example Playground https://playground.babylonjs.com/#R1F8YU#76</p><h4 id="type-parameters-16" tabindex="-1"><a class="header-anchor" href="#type-parameters-16" aria-hidden="true">#</a> Type parameters</h4>',7),J1=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),K1=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),$1={style:{"text-align":"left"}},t_=t("code",null,"Vector3",-1),e_=t("h4",{id:"parameters-57",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-57","aria-hidden":"true"},"#"),e(" Parameters")],-1),l_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),o_=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the current value")],-1),s_=t("td",{style:{"text-align":"left"}},[t("code",null,"min")],-1),n_={style:{"text-align":"left"}},a_=t("code",null,"DeepImmutableObject",-1),d_=t("code",null,"Vector3",-1),r_=t("td",{style:{"text-align":"left"}},"defines the lower range value",-1),c_=t("td",{style:{"text-align":"left"}},[t("code",null,"max")],-1),i_={style:{"text-align":"left"}},h_=t("code",null,"DeepImmutableObject",-1),u_=t("code",null,"Vector3",-1),__=t("td",{style:{"text-align":"left"}},"defines the upper range value",-1),f_=n('<h4 id="returns-86" tabindex="-1"><a class="header-anchor" href="#returns-86" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the new Vector3</p><hr><h3 id="clamptoref" tabindex="-1"><a class="header-anchor" href="#clamptoref" aria-hidden="true">#</a> ClampToRef</h3><p>▸ <strong>ClampToRef</strong>&lt;<code>T</code>&gt;(<code>value</code>, <code>min</code>, <code>max</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the coordinates of &quot;value&quot;, if the vector &quot;value&quot; is in the cube defined by the vectors &quot;min&quot; and &quot;max&quot; If a coordinate value of &quot;value&quot; is lower than one of the &quot;min&quot; coordinate, then this &quot;value&quot; coordinate is set with the &quot;min&quot; one If a coordinate value of &quot;value&quot; is greater than one of the &quot;max&quot; coordinate, then this &quot;value&quot; coordinate is set with the &quot;max&quot; one Example Playground https://playground.babylonjs.com/#R1F8YU#77</p><h4 id="type-parameters-17" tabindex="-1"><a class="header-anchor" href="#type-parameters-17" aria-hidden="true">#</a> Type parameters</h4>',8),p_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),y_=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),m_={style:{"text-align":"left"}},g_=t("code",null,"Vector3",-1),x_=t("h4",{id:"parameters-58",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-58","aria-hidden":"true"},"#"),e(" Parameters")],-1),b_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),V_=t("td",{style:{"text-align":"left"}},[t("code",null,"value")],-1),T_={style:{"text-align":"left"}},v_=t("code",null,"DeepImmutableObject",-1),R_=t("code",null,"Vector3",-1),w_=t("td",{style:{"text-align":"left"}},"defines the current value",-1),j_=t("td",{style:{"text-align":"left"}},[t("code",null,"min")],-1),P_={style:{"text-align":"left"}},q_=t("code",null,"DeepImmutableObject",-1),D_=t("code",null,"Vector3",-1),F_=t("td",{style:{"text-align":"left"}},"defines the lower range value",-1),N_=t("td",{style:{"text-align":"left"}},[t("code",null,"max")],-1),I_={style:{"text-align":"left"}},O_=t("code",null,"DeepImmutableObject",-1),z_=t("code",null,"Vector3",-1),U_=t("td",{style:{"text-align":"left"}},"defines the upper range value",-1),E_=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),Y_=n('<h4 id="returns-87" tabindex="-1"><a class="header-anchor" href="#returns-87" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="cross-1" tabindex="-1"><a class="header-anchor" href="#cross-1" aria-hidden="true">#</a> Cross</h3><p>▸ <strong>Cross</strong>&lt;<code>T</code>&gt;(<code>left</code>, <code>right</code>): <code>T</code></p><p>Returns a new Vector3 as the cross product of the vectors &quot;left&quot; and &quot;right&quot; The cross product is then orthogonal to both &quot;left&quot; and &quot;right&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#15</p><h4 id="type-parameters-18" tabindex="-1"><a class="header-anchor" href="#type-parameters-18" aria-hidden="true">#</a> Type parameters</h4>',8),A_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),C_=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),M_={style:{"text-align":"left"}},S_=t("code",null,"Vector3",-1),G_=t("h4",{id:"parameters-59",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-59","aria-hidden":"true"},"#"),e(" Parameters")],-1),H_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),k_=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"left")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the left operand")],-1),B_=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),Q_={style:{"text-align":"left"}},L_=t("code",null,"DeepImmutableObject",-1),W_=t("code",null,"Vector3",-1),Z_=t("td",{style:{"text-align":"left"}},"defines the right operand",-1),X_=n('<h4 id="returns-88" tabindex="-1"><a class="header-anchor" href="#returns-88" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the cross product</p><hr><h3 id="crosstoref" tabindex="-1"><a class="header-anchor" href="#crosstoref" aria-hidden="true">#</a> CrossToRef</h3><p>▸ <strong>CrossToRef</strong>&lt;<code>T</code>&gt;(<code>left</code>, <code>right</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the cross product of &quot;left&quot; and &quot;right&quot; The cross product is then orthogonal to both &quot;left&quot; and &quot;right&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#78</p><h4 id="type-parameters-19" tabindex="-1"><a class="header-anchor" href="#type-parameters-19" aria-hidden="true">#</a> Type parameters</h4>',8),J_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),K_=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),$_={style:{"text-align":"left"}},tf=t("code",null,"Vector3",-1),ef=t("h4",{id:"parameters-60",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-60","aria-hidden":"true"},"#"),e(" Parameters")],-1),lf=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),of=t("td",{style:{"text-align":"left"}},[t("code",null,"left")],-1),sf={style:{"text-align":"left"}},nf=t("code",null,"DeepImmutableObject",-1),af=t("code",null,"Vector3",-1),df=t("td",{style:{"text-align":"left"}},"defines the left operand",-1),rf=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),cf={style:{"text-align":"left"}},hf=t("code",null,"DeepImmutableObject",-1),uf=t("code",null,"Vector3",-1),_f=t("td",{style:{"text-align":"left"}},"defines the right operand",-1),ff=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),pf=n('<h4 id="returns-89" tabindex="-1"><a class="header-anchor" href="#returns-89" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="distance" tabindex="-1"><a class="header-anchor" href="#distance" aria-hidden="true">#</a> Distance</h3><p>▸ <strong>Distance</strong>(<code>value1</code>, <code>value2</code>): <code>number</code></p><p>Returns the distance between the vectors &quot;value1&quot; and &quot;value2&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#81</p><h4 id="parameters-61" tabindex="-1"><a class="header-anchor" href="#parameters-61" aria-hidden="true">#</a> Parameters</h4>',8),yf=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),mf=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),gf={style:{"text-align":"left"}},xf=t("code",null,"DeepImmutableObject",-1),bf=t("code",null,"Vector3",-1),Vf=t("td",{style:{"text-align":"left"}},"defines the first operand",-1),Tf=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),vf={style:{"text-align":"left"}},Rf=t("code",null,"DeepImmutableObject",-1),wf=t("code",null,"Vector3",-1),jf=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Pf=n('<h4 id="returns-90" tabindex="-1"><a class="header-anchor" href="#returns-90" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the distance</p><hr><h3 id="distancesquared" tabindex="-1"><a class="header-anchor" href="#distancesquared" aria-hidden="true">#</a> DistanceSquared</h3><p>▸ <strong>DistanceSquared</strong>(<code>value1</code>, <code>value2</code>): <code>number</code></p><p>Returns the squared distance between the vectors &quot;value1&quot; and &quot;value2&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#80</p><h4 id="parameters-62" tabindex="-1"><a class="header-anchor" href="#parameters-62" aria-hidden="true">#</a> Parameters</h4>',8),qf=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Df=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),Ff={style:{"text-align":"left"}},Nf=t("code",null,"DeepImmutableObject",-1),If=t("code",null,"Vector3",-1),Of=t("td",{style:{"text-align":"left"}},"defines the first operand",-1),zf=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),Uf={style:{"text-align":"left"}},Ef=t("code",null,"DeepImmutableObject",-1),Yf=t("code",null,"Vector3",-1),Af=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Cf=n('<h4 id="returns-91" tabindex="-1"><a class="header-anchor" href="#returns-91" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the squared distance</p><hr><h3 id="dot-1" tabindex="-1"><a class="header-anchor" href="#dot-1" aria-hidden="true">#</a> Dot</h3><p>▸ <strong>Dot</strong>(<code>left</code>, <code>right</code>): <code>number</code></p><p>Returns the dot product (float) between the vectors &quot;left&quot; and &quot;right&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#82</p><h4 id="parameters-63" tabindex="-1"><a class="header-anchor" href="#parameters-63" aria-hidden="true">#</a> Parameters</h4>',8),Mf=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Sf=t("td",{style:{"text-align":"left"}},[t("code",null,"left")],-1),Gf={style:{"text-align":"left"}},Hf=t("code",null,"DeepImmutableObject",-1),kf=t("code",null,"Vector3",-1),Bf=t("td",{style:{"text-align":"left"}},"defines the left operand",-1),Qf=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),Lf={style:{"text-align":"left"}},Wf=t("code",null,"DeepImmutableObject",-1),Zf=t("code",null,"Vector3",-1),Xf=t("td",{style:{"text-align":"left"}},"defines the right operand",-1),Jf=t("h4",{id:"returns-92",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-92","aria-hidden":"true"},"#"),e(" Returns")],-1),Kf=t("p",null,[t("code",null,"number")],-1),$f=t("p",null,"the dot product",-1),tp=t("hr",null,null,-1),ep=t("h3",{id:"down",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#down","aria-hidden":"true"},"#"),e(" Down")],-1),lp=t("strong",null,"Down",-1),op=t("code",null,"Vector3",-1),sp=t("p",null,"Returns a new Vector3 set to (0.0, -1.0, 0.0) Example Playground https://playground.babylonjs.com/#R1F8YU#71",-1),np=t("h4",{id:"returns-93",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-93","aria-hidden":"true"},"#"),e(" Returns")],-1),ap=t("code",null,"Vector3",-1),dp=t("p",null,"a new down Vector3",-1),rp=t("hr",null,null,-1),cp=t("h3",{id:"forward",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#forward","aria-hidden":"true"},"#"),e(" Forward")],-1),ip=t("strong",null,"Forward",-1),hp=t("code",null,"rightHandedSystem?",-1),up=t("code",null,"Vector3",-1),_p=n('<p>Returns a new Vector3 set to (0.0, 0.0, 1.0) Example Playground https://playground.babylonjs.com/#R1F8YU#71</p><h4 id="parameters-64" tabindex="-1"><a class="header-anchor" href="#parameters-64" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>rightHandedSystem?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">is the scene right-handed (negative z)</td></tr></tbody></table><h4 id="returns-94" tabindex="-1"><a class="header-anchor" href="#returns-94" aria-hidden="true">#</a> Returns</h4>',4),fp=t("code",null,"Vector3",-1),pp=t("p",null,"a new forward Vector3",-1),yp=t("hr",null,null,-1),mp=t("h3",{id:"fromarray-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fromarray-1","aria-hidden":"true"},"#"),e(" FromArray")],-1),gp=t("strong",null,"FromArray",-1),xp=t("code",null,"array",-1),bp=t("code",null,"offset?",-1),Vp=t("code",null,"Vector3",-1),Tp=n('<p>Returns a new Vector3 set from the index &quot;offset&quot; of the given array Example Playground https://playground.babylonjs.com/#R1F8YU#83</p><h4 id="parameters-65" tabindex="-1"><a class="header-anchor" href="#parameters-65" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>ArrayLike</code>&lt;<code>number</code>&gt;&gt;</td><td style="text-align:left;">defines the source array</td></tr><tr><td style="text-align:left;"><code>offset?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the source array</td></tr></tbody></table><h4 id="returns-95" tabindex="-1"><a class="header-anchor" href="#returns-95" aria-hidden="true">#</a> Returns</h4>',4),vp=t("code",null,"Vector3",-1),Rp=n('<p>the new Vector3</p><hr><h3 id="fromarraytoref" tabindex="-1"><a class="header-anchor" href="#fromarraytoref" aria-hidden="true">#</a> FromArrayToRef</h3><p>▸ <strong>FromArrayToRef</strong>&lt;<code>T</code>&gt;(<code>array</code>, <code>offset</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the element values from the index &quot;offset&quot; of the given array Example Playground https://playground.babylonjs.com/#R1F8YU#84</p><h4 id="type-parameters-20" tabindex="-1"><a class="header-anchor" href="#type-parameters-20" aria-hidden="true">#</a> Type parameters</h4>',6),wp=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),jp=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Pp={style:{"text-align":"left"}},qp=t("code",null,"Vector3",-1),Dp=n('<h4 id="parameters-66" tabindex="-1"><a class="header-anchor" href="#parameters-66" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>ArrayLike</code>&lt;<code>number</code>&gt;&gt;</td><td style="text-align:left;">defines the source array</td></tr><tr><td style="text-align:left;"><code>offset</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the source array</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 where to store the result</td></tr></tbody></table><h4 id="returns-96" tabindex="-1"><a class="header-anchor" href="#returns-96" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="fromfloatarray" tabindex="-1"><a class="header-anchor" href="#fromfloatarray" aria-hidden="true">#</a> FromFloatArray</h3>',7),Fp=t("strong",null,"FromFloatArray",-1),Np=t("code",null,"array",-1),Ip=t("code",null,"offset?",-1),Op=t("code",null,"Vector3",-1),zp=n('<p>Returns a new Vector3 set from the index &quot;offset&quot; of the given Float32Array</p><h4 id="parameters-67" tabindex="-1"><a class="header-anchor" href="#parameters-67" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>Float32Array</code>&gt;</td><td style="text-align:left;">defines the source array</td></tr><tr><td style="text-align:left;"><code>offset?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the source array</td></tr></tbody></table><h4 id="returns-97" tabindex="-1"><a class="header-anchor" href="#returns-97" aria-hidden="true">#</a> Returns</h4>',4),Up=t("code",null,"Vector3",-1),Ep=n('<p>the new Vector3</p><p><strong><code>Deprecated</code></strong></p><p>Please use FromArray instead.</p><hr><h3 id="fromfloatarraytoref" tabindex="-1"><a class="header-anchor" href="#fromfloatarraytoref" aria-hidden="true">#</a> FromFloatArrayToRef</h3><p>▸ <strong>FromFloatArrayToRef</strong>&lt;<code>T</code>&gt;(<code>array</code>, <code>offset</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the element values from the index &quot;offset&quot; of the given Float32Array</p><h4 id="type-parameters-21" tabindex="-1"><a class="header-anchor" href="#type-parameters-21" aria-hidden="true">#</a> Type parameters</h4>',8),Yp=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Ap=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Cp={style:{"text-align":"left"}},Mp=t("code",null,"Vector3",-1),Sp=n('<h4 id="parameters-68" tabindex="-1"><a class="header-anchor" href="#parameters-68" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>array</code></td><td style="text-align:left;"><code>DeepImmutableObject</code>&lt;<code>Float32Array</code>&gt;</td><td style="text-align:left;">defines the source array</td></tr><tr><td style="text-align:left;"><code>offset</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the offset in the source array</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 where to store the result</td></tr></tbody></table><h4 id="returns-98" tabindex="-1"><a class="header-anchor" href="#returns-98" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p><strong><code>Deprecated</code></strong></p><p>Please use FromArrayToRef instead.</p><hr><h3 id="fromfloatstoref" tabindex="-1"><a class="header-anchor" href="#fromfloatstoref" aria-hidden="true">#</a> FromFloatsToRef</h3><p>▸ <strong>FromFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>x</code>, <code>y</code>, <code>z</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the given floats. Example Playground https://playground.babylonjs.com/#R1F8YU#85</p><h4 id="type-parameters-22" tabindex="-1"><a class="header-anchor" href="#type-parameters-22" aria-hidden="true">#</a> Type parameters</h4>',11),Gp=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Hp=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),kp={style:{"text-align":"left"}},Bp=t("code",null,"Vector3",-1),Qp=t("code",null,"Vector3",-1),Lp=n('<h4 id="parameters-69" tabindex="-1"><a class="header-anchor" href="#parameters-69" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the x coordinate of the source</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the y coordinate of the source</td></tr><tr><td style="text-align:left;"><code>z</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">defines the z coordinate of the source</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">defines the Vector3 where to store the result</td></tr></tbody></table><h4 id="returns-99" tabindex="-1"><a class="header-anchor" href="#returns-99" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><hr><h3 id="getanglebetweenvectors" tabindex="-1"><a class="header-anchor" href="#getanglebetweenvectors" aria-hidden="true">#</a> GetAngleBetweenVectors</h3><p>▸ <strong>GetAngleBetweenVectors</strong>(<code>vector0</code>, <code>vector1</code>, <code>normal</code>): <code>number</code></p><p>Get angle between two vectors Example Playground https://playground.babylonjs.com/#R1F8YU#86</p><h4 id="parameters-70" tabindex="-1"><a class="header-anchor" href="#parameters-70" aria-hidden="true">#</a> Parameters</h4>',9),Wp=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Zp=t("td",{style:{"text-align":"left"}},[t("code",null,"vector0")],-1),Xp={style:{"text-align":"left"}},Jp=t("code",null,"DeepImmutableObject",-1),Kp=t("code",null,"Vector3",-1),$p=t("td",{style:{"text-align":"left"}},"the starting point",-1),ty=t("td",{style:{"text-align":"left"}},[t("code",null,"vector1")],-1),ey={style:{"text-align":"left"}},ly=t("code",null,"DeepImmutableObject",-1),oy=t("code",null,"Vector3",-1),sy=t("td",{style:{"text-align":"left"}},"the ending point",-1),ny=t("td",{style:{"text-align":"left"}},[t("code",null,"normal")],-1),ay={style:{"text-align":"left"}},dy=t("code",null,"DeepImmutableObject",-1),ry=t("code",null,"Vector3",-1),cy=t("td",{style:{"text-align":"left"}},"direction of the normal",-1),iy=n('<h4 id="returns-100" tabindex="-1"><a class="header-anchor" href="#returns-100" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the angle between vector0 and vector1</p><hr><h3 id="getanglebetweenvectorsonplane" tabindex="-1"><a class="header-anchor" href="#getanglebetweenvectorsonplane" aria-hidden="true">#</a> GetAngleBetweenVectorsOnPlane</h3><p>▸ <strong>GetAngleBetweenVectorsOnPlane</strong>(<code>vector0</code>, <code>vector1</code>, <code>normal</code>): <code>number</code></p><p>Get angle between two vectors projected on a plane Example Playground https://playground.babylonjs.com/#R1F8YU#87 Expectation compute time: 0.01 ms (median) and 0.02 ms (percentile 95%)</p><h4 id="parameters-71" tabindex="-1"><a class="header-anchor" href="#parameters-71" aria-hidden="true">#</a> Parameters</h4>',8),hy=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),uy=t("td",{style:{"text-align":"left"}},[t("code",null,"vector0")],-1),_y={style:{"text-align":"left"}},fy=t("code",null,"Vector3",-1),py=t("td",{style:{"text-align":"left"}},"angle between vector0 and vector1",-1),yy=t("td",{style:{"text-align":"left"}},[t("code",null,"vector1")],-1),my={style:{"text-align":"left"}},gy=t("code",null,"Vector3",-1),xy=t("td",{style:{"text-align":"left"}},"angle between vector0 and vector1",-1),by=t("td",{style:{"text-align":"left"}},[t("code",null,"normal")],-1),Vy={style:{"text-align":"left"}},Ty=t("code",null,"Vector3",-1),vy=t("td",{style:{"text-align":"left"}},"Normal of the projection plane",-1),Ry=n('<h4 id="returns-101" tabindex="-1"><a class="header-anchor" href="#returns-101" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the angle in radians (float) between vector0 and vector1 projected on the plane with the specified normal</p><hr><h3 id="getclipfactor" tabindex="-1"><a class="header-anchor" href="#getclipfactor" aria-hidden="true">#</a> GetClipFactor</h3><p>▸ <strong>GetClipFactor</strong>(<code>vector0</code>, <code>vector1</code>, <code>axis</code>, <code>size</code>): <code>number</code></p><p>Get the clip factor between two vectors Example Playground https://playground.babylonjs.com/#R1F8YU#126</p><h4 id="parameters-72" tabindex="-1"><a class="header-anchor" href="#parameters-72" aria-hidden="true">#</a> Parameters</h4>',8),wy=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),jy=t("td",{style:{"text-align":"left"}},[t("code",null,"vector0")],-1),Py={style:{"text-align":"left"}},qy=t("code",null,"DeepImmutableObject",-1),Dy=t("code",null,"Vector3",-1),Fy=t("td",{style:{"text-align":"left"}},"defines the first operand",-1),Ny=t("td",{style:{"text-align":"left"}},[t("code",null,"vector1")],-1),Iy={style:{"text-align":"left"}},Oy=t("code",null,"DeepImmutableObject",-1),zy=t("code",null,"Vector3",-1),Uy=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),Ey=t("td",{style:{"text-align":"left"}},[t("code",null,"axis")],-1),Yy={style:{"text-align":"left"}},Ay=t("code",null,"DeepImmutableObject",-1),Cy=t("code",null,"Vector3",-1),My=t("td",{style:{"text-align":"left"}},"defines the axis to use",-1),Sy=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"size")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the size along the axis")],-1),Gy=n('<h4 id="returns-102" tabindex="-1"><a class="header-anchor" href="#returns-102" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>the clip factor</p><hr><h3 id="hermite" tabindex="-1"><a class="header-anchor" href="#hermite" aria-hidden="true">#</a> Hermite</h3><p>▸ <strong>Hermite</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>tangent1</code>, <code>value2</code>, <code>tangent2</code>, <code>amount</code>): <code>T</code></p><p>Returns a new Vector3 located for &quot;amount&quot; (float) on the Hermite interpolation spline defined by the vectors &quot;value1&quot;, &quot;tangent1&quot;, &quot;value2&quot;, &quot;tangent2&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#89</p><h4 id="type-parameters-23" tabindex="-1"><a class="header-anchor" href="#type-parameters-23" aria-hidden="true">#</a> Type parameters</h4>',8),Hy=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ky=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),By={style:{"text-align":"left"}},Qy=t("code",null,"Vector3",-1),Ly=t("h4",{id:"parameters-73",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-73","aria-hidden":"true"},"#"),e(" Parameters")],-1),Wy=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Zy=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the first control point")],-1),Xy=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent1")],-1),Jy={style:{"text-align":"left"}},Ky=t("code",null,"DeepImmutableObject",-1),$y=t("code",null,"Vector3",-1),tm=t("td",{style:{"text-align":"left"}},"defines the first tangent vector",-1),em=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),lm={style:{"text-align":"left"}},om=t("code",null,"DeepImmutableObject",-1),sm=t("code",null,"Vector3",-1),nm=t("td",{style:{"text-align":"left"}},"defines the second control point",-1),am=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent2")],-1),dm={style:{"text-align":"left"}},rm=t("code",null,"DeepImmutableObject",-1),cm=t("code",null,"Vector3",-1),im=t("td",{style:{"text-align":"left"}},"defines the second tangent vector",-1),hm=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"amount")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the amount on the interpolation spline (between 0 and 1)")],-1),um=n('<h4 id="returns-103" tabindex="-1"><a class="header-anchor" href="#returns-103" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the new Vector3</p><hr><h3 id="hermite1stderivative" tabindex="-1"><a class="header-anchor" href="#hermite1stderivative" aria-hidden="true">#</a> Hermite1stDerivative</h3><p>▸ <strong>Hermite1stDerivative</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>tangent1</code>, <code>value2</code>, <code>tangent2</code>, <code>time</code>): <code>T</code></p><p>Returns a new Vector3 which is the 1st derivative of the Hermite spline defined by the vectors &quot;value1&quot;, &quot;value2&quot;, &quot;tangent1&quot;, &quot;tangent2&quot;. Example Playground https://playground.babylonjs.com/#R1F8YU#90</p><h4 id="type-parameters-24" tabindex="-1"><a class="header-anchor" href="#type-parameters-24" aria-hidden="true">#</a> Type parameters</h4>',8),_m=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),fm=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),pm={style:{"text-align":"left"}},ym=t("code",null,"Vector3",-1),mm=t("h4",{id:"parameters-74",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-74","aria-hidden":"true"},"#"),e(" Parameters")],-1),gm=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),xm=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"value1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the first control point")],-1),bm=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent1")],-1),Vm={style:{"text-align":"left"}},Tm=t("code",null,"DeepImmutableObject",-1),vm=t("code",null,"Vector3",-1),Rm=t("td",{style:{"text-align":"left"}},"defines the first tangent",-1),wm=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),jm={style:{"text-align":"left"}},Pm=t("code",null,"DeepImmutableObject",-1),qm=t("code",null,"Vector3",-1),Dm=t("td",{style:{"text-align":"left"}},"defines the second control point",-1),Fm=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent2")],-1),Nm={style:{"text-align":"left"}},Im=t("code",null,"DeepImmutableObject",-1),Om=t("code",null,"Vector3",-1),zm=t("td",{style:{"text-align":"left"}},"defines the second tangent",-1),Um=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"time")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define where the derivative must be done")],-1),Em=n('<h4 id="returns-104" tabindex="-1"><a class="header-anchor" href="#returns-104" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>1st derivative</p><hr><h3 id="hermite1stderivativetoref" tabindex="-1"><a class="header-anchor" href="#hermite1stderivativetoref" aria-hidden="true">#</a> Hermite1stDerivativeToRef</h3><p>▸ <strong>Hermite1stDerivativeToRef</strong>&lt;<code>T</code>&gt;(<code>value1</code>, <code>tangent1</code>, <code>value2</code>, <code>tangent2</code>, <code>time</code>, <code>result</code>): <code>T</code></p><p>Update a Vector3 with the 1st derivative of the Hermite spline defined by the vectors &quot;value1&quot;, &quot;value2&quot;, &quot;tangent1&quot;, &quot;tangent2&quot;. Example Playground https://playground.babylonjs.com/#R1F8YU#91</p><h4 id="type-parameters-25" tabindex="-1"><a class="header-anchor" href="#type-parameters-25" aria-hidden="true">#</a> Type parameters</h4>',8),Ym=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Am=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Cm={style:{"text-align":"left"}},Mm=t("code",null,"Vector3",-1),Sm=t("h4",{id:"parameters-75",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-75","aria-hidden":"true"},"#"),e(" Parameters")],-1),Gm=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Hm=t("td",{style:{"text-align":"left"}},[t("code",null,"value1")],-1),km={style:{"text-align":"left"}},Bm=t("code",null,"DeepImmutableObject",-1),Qm=t("code",null,"Vector3",-1),Lm=t("td",{style:{"text-align":"left"}},"defines the first control point",-1),Wm=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent1")],-1),Zm={style:{"text-align":"left"}},Xm=t("code",null,"DeepImmutableObject",-1),Jm=t("code",null,"Vector3",-1),Km=t("td",{style:{"text-align":"left"}},"defines the first tangent",-1),$m=t("td",{style:{"text-align":"left"}},[t("code",null,"value2")],-1),tg={style:{"text-align":"left"}},eg=t("code",null,"DeepImmutableObject",-1),lg=t("code",null,"Vector3",-1),og=t("td",{style:{"text-align":"left"}},"defines the second control point",-1),sg=t("td",{style:{"text-align":"left"}},[t("code",null,"tangent2")],-1),ng={style:{"text-align":"left"}},ag=t("code",null,"DeepImmutableObject",-1),dg=t("code",null,"Vector3",-1),rg=t("td",{style:{"text-align":"left"}},"defines the second tangent",-1),cg=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"time")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define where the derivative must be done")],-1),ig=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"define where to store the derivative")],-1),hg=t("h4",{id:"returns-105",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-105","aria-hidden":"true"},"#"),e(" Returns")],-1),ug=t("p",null,[t("code",null,"T")],-1),_g=t("p",null,"result input",-1),fg=t("hr",null,null,-1),pg=t("h3",{id:"left",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#left","aria-hidden":"true"},"#"),e(" Left")],-1),yg=t("strong",null,"Left",-1),mg=t("code",null,"Vector3",-1),gg=t("p",null,"Returns a new Vector3 set to (-1.0, 0.0, 0.0) Example Playground https://playground.babylonjs.com/#R1F8YU#71",-1),xg=t("h4",{id:"returns-106",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-106","aria-hidden":"true"},"#"),e(" Returns")],-1),bg=t("code",null,"Vector3",-1),Vg=n('<p>a new left Vector3</p><hr><h3 id="lerp" tabindex="-1"><a class="header-anchor" href="#lerp" aria-hidden="true">#</a> Lerp</h3><p>▸ <strong>Lerp</strong>&lt;<code>T</code>&gt;(<code>start</code>, <code>end</code>, <code>amount</code>): <code>T</code></p><p>Returns a new Vector3 located for &quot;amount&quot; (float) on the linear interpolation between the vectors &quot;start&quot; and &quot;end&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#95</p><h4 id="type-parameters-26" tabindex="-1"><a class="header-anchor" href="#type-parameters-26" aria-hidden="true">#</a> Type parameters</h4>',6),Tg=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),vg=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Rg={style:{"text-align":"left"}},wg=t("code",null,"Vector3",-1),jg=t("h4",{id:"parameters-76",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-76","aria-hidden":"true"},"#"),e(" Parameters")],-1),Pg=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),qg=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"start")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the start value")],-1),Dg=t("td",{style:{"text-align":"left"}},[t("code",null,"end")],-1),Fg={style:{"text-align":"left"}},Ng=t("code",null,"DeepImmutableObject",-1),Ig=t("code",null,"Vector3",-1),Og=t("td",{style:{"text-align":"left"}},"defines the end value",-1),zg=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"amount")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"max defines amount between both (between 0 and 1)")],-1),Ug=n('<h4 id="returns-107" tabindex="-1"><a class="header-anchor" href="#returns-107" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the new Vector3</p><hr><h3 id="lerptoref" tabindex="-1"><a class="header-anchor" href="#lerptoref" aria-hidden="true">#</a> LerpToRef</h3><p>▸ <strong>LerpToRef</strong>&lt;<code>T</code>&gt;(<code>start</code>, <code>end</code>, <code>amount</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the result of the linear interpolation from the vector &quot;start&quot; for &quot;amount&quot; to the vector &quot;end&quot; Example Playground https://playground.babylonjs.com/#R1F8YU#93</p><h4 id="type-parameters-27" tabindex="-1"><a class="header-anchor" href="#type-parameters-27" aria-hidden="true">#</a> Type parameters</h4>',8),Eg=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Yg=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Ag={style:{"text-align":"left"}},Cg=t("code",null,"Vector3",-1),Mg=t("h4",{id:"parameters-77",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-77","aria-hidden":"true"},"#"),e(" Parameters")],-1),Sg=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Gg=t("td",{style:{"text-align":"left"}},[t("code",null,"start")],-1),Hg={style:{"text-align":"left"}},kg=t("code",null,"DeepImmutableObject",-1),Bg=t("code",null,"Vector3",-1),Qg=t("td",{style:{"text-align":"left"}},"defines the start value",-1),Lg=t("td",{style:{"text-align":"left"}},[t("code",null,"end")],-1),Wg={style:{"text-align":"left"}},Zg=t("code",null,"DeepImmutableObject",-1),Xg=t("code",null,"Vector3",-1),Jg=t("td",{style:{"text-align":"left"}},"defines the end value",-1),Kg=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"amount")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"max defines amount between both (between 0 and 1)")],-1),$g=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),tx=n('<h4 id="returns-108" tabindex="-1"><a class="header-anchor" href="#returns-108" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="maximize" tabindex="-1"><a class="header-anchor" href="#maximize" aria-hidden="true">#</a> Maximize</h3><p>▸ <strong>Maximize</strong>&lt;<code>T</code>&gt;(<code>left</code>, <code>right</code>): <code>T</code></p><p>Gets the maximal coordinate values between two Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#96</p><h4 id="type-parameters-28" tabindex="-1"><a class="header-anchor" href="#type-parameters-28" aria-hidden="true">#</a> Type parameters</h4>',8),ex=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),lx=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),ox={style:{"text-align":"left"}},sx=t("code",null,"Vector3",-1),nx=t("h4",{id:"parameters-78",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-78","aria-hidden":"true"},"#"),e(" Parameters")],-1),ax=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),dx=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"left")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the first operand")],-1),rx=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),cx={style:{"text-align":"left"}},ix=t("code",null,"DeepImmutableObject",-1),hx=t("code",null,"Vector3",-1),ux=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),_x=n('<h4 id="returns-109" tabindex="-1"><a class="header-anchor" href="#returns-109" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the new Vector3</p><hr><h3 id="minimize" tabindex="-1"><a class="header-anchor" href="#minimize" aria-hidden="true">#</a> Minimize</h3><p>▸ <strong>Minimize</strong>&lt;<code>T</code>&gt;(<code>left</code>, <code>right</code>): <code>T</code></p><p>Gets the minimal coordinate values between two Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#97</p><h4 id="type-parameters-29" tabindex="-1"><a class="header-anchor" href="#type-parameters-29" aria-hidden="true">#</a> Type parameters</h4>',8),fx=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),px=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),yx={style:{"text-align":"left"}},mx=t("code",null,"Vector3",-1),gx=t("h4",{id:"parameters-79",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-79","aria-hidden":"true"},"#"),e(" Parameters")],-1),xx=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),bx=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"left")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the first operand")],-1),Vx=t("td",{style:{"text-align":"left"}},[t("code",null,"right")],-1),Tx={style:{"text-align":"left"}},vx=t("code",null,"DeepImmutableObject",-1),Rx=t("code",null,"Vector3",-1),wx=t("td",{style:{"text-align":"left"}},"defines the second operand",-1),jx=t("h4",{id:"returns-110",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-110","aria-hidden":"true"},"#"),e(" Returns")],-1),Px=t("p",null,[t("code",null,"T")],-1),qx=t("p",null,"the new Vector3",-1),Dx=t("hr",null,null,-1),Fx=t("h3",{id:"normalize-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#normalize-1","aria-hidden":"true"},"#"),e(" Normalize")],-1),Nx=t("strong",null,"Normalize",-1),Ix=t("code",null,"vector",-1),Ox=t("code",null,"Vector3",-1),zx=t("p",null,"Returns a new Vector3 as the normalization of the given vector Example Playground https://playground.babylonjs.com/#R1F8YU#98",-1),Ux=t("h4",{id:"parameters-80",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-80","aria-hidden":"true"},"#"),e(" Parameters")],-1),Ex=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Yx=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),Ax={style:{"text-align":"left"}},Cx=t("code",null,"DeepImmutableObject",-1),Mx=t("code",null,"Vector3",-1),Sx=t("td",{style:{"text-align":"left"}},"defines the Vector3 to normalize",-1),Gx=t("h4",{id:"returns-111",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-111","aria-hidden":"true"},"#"),e(" Returns")],-1),Hx=t("code",null,"Vector3",-1),kx=n('<p>the new Vector3</p><hr><h3 id="normalizetoref-1" tabindex="-1"><a class="header-anchor" href="#normalizetoref-1" aria-hidden="true">#</a> NormalizeToRef</h3><p>▸ <strong>NormalizeToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the normalization of the given first vector Example Playground https://playground.babylonjs.com/#R1F8YU#98</p><h4 id="type-parameters-30" tabindex="-1"><a class="header-anchor" href="#type-parameters-30" aria-hidden="true">#</a> Type parameters</h4>',6),Bx=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Qx=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Lx={style:{"text-align":"left"}},Wx=t("code",null,"Vector3",-1),Zx=t("h4",{id:"parameters-81",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-81","aria-hidden":"true"},"#"),e(" Parameters")],-1),Xx=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Jx=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),Kx={style:{"text-align":"left"}},$x=t("code",null,"DeepImmutableObject",-1),t3=t("code",null,"Vector3",-1),e3=t("td",{style:{"text-align":"left"}},"defines the Vector3 to normalize",-1),l3=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),o3=t("h4",{id:"returns-112",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-112","aria-hidden":"true"},"#"),e(" Returns")],-1),s3=t("p",null,[t("code",null,"T")],-1),n3=t("p",null,"result input",-1),a3=t("hr",null,null,-1),d3=t("h3",{id:"one",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#one","aria-hidden":"true"},"#"),e(" One")],-1),r3=t("strong",null,"One",-1),c3=t("code",null,"Vector3",-1),i3=t("p",null,"Returns a new Vector3 set to (1.0, 1.0, 1.0)",-1),h3=t("h4",{id:"returns-113",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-113","aria-hidden":"true"},"#"),e(" Returns")],-1),u3=t("code",null,"Vector3",-1),_3=t("p",null,"a new Vector3",-1),f3=t("hr",null,null,-1),p3=t("h3",{id:"pitchyawrolltomovebetweenpoints",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#pitchyawrolltomovebetweenpoints","aria-hidden":"true"},"#"),e(" PitchYawRollToMoveBetweenPoints")],-1),y3=t("strong",null,"PitchYawRollToMoveBetweenPoints",-1),m3=t("code",null,"start",-1),g3=t("code",null,"target",-1),x3=t("code",null,"Vector3",-1),b3=t("p",null,"Gets the rotation that aligns the roll axis (Y) to the line joining the start point to the target point Example PG https://playground.babylonjs.com/#R1F8YU#188",-1),V3=t("h4",{id:"parameters-82",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-82","aria-hidden":"true"},"#"),e(" Parameters")],-1),T3=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),v3=t("td",{style:{"text-align":"left"}},[t("code",null,"start")],-1),R3={style:{"text-align":"left"}},w3=t("code",null,"Vector3",-1),j3=t("td",{style:{"text-align":"left"}},"the starting point",-1),P3=t("td",{style:{"text-align":"left"}},[t("code",null,"target")],-1),q3={style:{"text-align":"left"}},D3=t("code",null,"Vector3",-1),F3=t("td",{style:{"text-align":"left"}},"the target point",-1),N3=t("h4",{id:"returns-114",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-114","aria-hidden":"true"},"#"),e(" Returns")],-1),I3=t("code",null,"Vector3",-1),O3=n('<p>the rotation in the form (pitch, yaw, 0)</p><hr><h3 id="pitchyawrolltomovebetweenpointstoref" tabindex="-1"><a class="header-anchor" href="#pitchyawrolltomovebetweenpointstoref" aria-hidden="true">#</a> PitchYawRollToMoveBetweenPointsToRef</h3><p>▸ <strong>PitchYawRollToMoveBetweenPointsToRef</strong>&lt;<code>T</code>&gt;(<code>start</code>, <code>target</code>, <code>ref</code>): <code>T</code></p><p>Gets the rotation that aligns the roll axis (Y) to the line joining the start point to the target point and stores it in the ref Vector3 Example PG https://playground.babylonjs.com/#R1F8YU#189</p><h4 id="type-parameters-31" tabindex="-1"><a class="header-anchor" href="#type-parameters-31" aria-hidden="true">#</a> Type parameters</h4>',6),z3=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),U3=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),E3={style:{"text-align":"left"}},Y3=t("code",null,"Vector3",-1),A3=t("h4",{id:"parameters-83",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-83","aria-hidden":"true"},"#"),e(" Parameters")],-1),C3=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),M3=t("td",{style:{"text-align":"left"}},[t("code",null,"start")],-1),S3={style:{"text-align":"left"}},G3=t("code",null,"Vector3",-1),H3=t("td",{style:{"text-align":"left"}},"the starting point",-1),k3=t("td",{style:{"text-align":"left"}},[t("code",null,"target")],-1),B3={style:{"text-align":"left"}},Q3=t("code",null,"Vector3",-1),L3=t("td",{style:{"text-align":"left"}},"the target point",-1),W3=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"ref")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the vector3 to store the result")],-1),Z3=n('<h4 id="returns-115" tabindex="-1"><a class="header-anchor" href="#returns-115" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>ref in the form (pitch, yaw, 0)</p><hr><h3 id="project" tabindex="-1"><a class="header-anchor" href="#project" aria-hidden="true">#</a> Project</h3><p>▸ <strong>Project</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>world</code>, <code>transform</code>, <code>viewport</code>): <code>T</code></p><p>Project a Vector3 onto screen space Example Playground https://playground.babylonjs.com/#R1F8YU#101</p><h4 id="type-parameters-32" tabindex="-1"><a class="header-anchor" href="#type-parameters-32" aria-hidden="true">#</a> Type parameters</h4>',8),X3=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),J3=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),K3={style:{"text-align":"left"}},$3=t("code",null,"Vector3",-1),tb=t("h4",{id:"parameters-84",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-84","aria-hidden":"true"},"#"),e(" Parameters")],-1),eb=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),lb=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"vector")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 to project")],-1),ob=t("td",{style:{"text-align":"left"}},[t("code",null,"world")],-1),sb={style:{"text-align":"left"}},nb=t("code",null,"DeepImmutableObject",-1),ab=t("code",null,"Matrix",-1),db=t("td",{style:{"text-align":"left"}},"defines the world matrix to use",-1),rb=t("td",{style:{"text-align":"left"}},[t("code",null,"transform")],-1),cb={style:{"text-align":"left"}},ib=t("code",null,"DeepImmutableObject",-1),hb=t("code",null,"Matrix",-1),ub=t("td",{style:{"text-align":"left"}},"defines the transform (view x projection) matrix to use",-1),_b=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewport")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutableObject"),e("<"),t("code",null,"Viewport"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the screen viewport to use")],-1),fb=n('<h4 id="returns-116" tabindex="-1"><a class="header-anchor" href="#returns-116" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the new Vector3</p><hr><h3 id="projectontriangletoref" tabindex="-1"><a class="header-anchor" href="#projectontriangletoref" aria-hidden="true">#</a> ProjectOnTriangleToRef</h3><p>▸ <strong>ProjectOnTriangleToRef</strong>(<code>vector</code>, <code>p0</code>, <code>p1</code>, <code>p2</code>, <code>ref</code>): <code>number</code></p><p>Projects &quot;vector&quot; on the triangle determined by its extremities &quot;p0&quot;, &quot;p1&quot; and &quot;p2&quot;, stores the result in &quot;ref&quot; and returns the distance to the projected point. Example Playground https://playground.babylonjs.com/#R1F8YU#104 From http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.104.4264&amp;rep=rep1&amp;type=pdf</p><h4 id="parameters-85" tabindex="-1"><a class="header-anchor" href="#parameters-85" aria-hidden="true">#</a> Parameters</h4>',8),pb=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),yb=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),mb={style:{"text-align":"left"}},gb=t("code",null,"DeepImmutableObject",-1),xb=t("code",null,"Vector3",-1),bb=t("td",{style:{"text-align":"left"}},"the vector to get distance from",-1),Vb=t("td",{style:{"text-align":"left"}},[t("code",null,"p0")],-1),Tb={style:{"text-align":"left"}},vb=t("code",null,"DeepImmutableObject",-1),Rb=t("code",null,"Vector3",-1),wb=t("td",{style:{"text-align":"left"}},"extremity of the triangle",-1),jb=t("td",{style:{"text-align":"left"}},[t("code",null,"p1")],-1),Pb={style:{"text-align":"left"}},qb=t("code",null,"DeepImmutableObject",-1),Db=t("code",null,"Vector3",-1),Fb=t("td",{style:{"text-align":"left"}},"extremity of the triangle",-1),Nb=t("td",{style:{"text-align":"left"}},[t("code",null,"p2")],-1),Ib={style:{"text-align":"left"}},Ob=t("code",null,"DeepImmutableObject",-1),zb=t("code",null,"Vector3",-1),Ub=t("td",{style:{"text-align":"left"}},"extremity of the triangle",-1),Eb=t("td",{style:{"text-align":"left"}},[t("code",null,"ref")],-1),Yb={style:{"text-align":"left"}},Ab=t("code",null,"Vector3",-1),Cb=t("td",{style:{"text-align":"left"}},"variable to store the result to",-1),Mb=n('<h4 id="returns-117" tabindex="-1"><a class="header-anchor" href="#returns-117" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>The distance between &quot;ref&quot; and &quot;vector&quot;</p><hr><h3 id="projecttoref" tabindex="-1"><a class="header-anchor" href="#projecttoref" aria-hidden="true">#</a> ProjectToRef</h3><p>▸ <strong>ProjectToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>world</code>, <code>transform</code>, <code>viewport</code>, <code>result</code>): <code>T</code></p><p>Project a Vector3 onto screen space to reference Example Playground https://playground.babylonjs.com/#R1F8YU#102</p><h4 id="type-parameters-33" tabindex="-1"><a class="header-anchor" href="#type-parameters-33" aria-hidden="true">#</a> Type parameters</h4>',8),Sb=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Gb=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),Hb={style:{"text-align":"left"}},kb=t("code",null,"Vector3",-1),Bb=t("h4",{id:"parameters-86",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-86","aria-hidden":"true"},"#"),e(" Parameters")],-1),Qb=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Lb=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),Wb={style:{"text-align":"left"}},Zb=t("code",null,"DeepImmutableObject",-1),Xb=t("code",null,"Vector3",-1),Jb=t("td",{style:{"text-align":"left"}},"defines the Vector3 to project",-1),Kb=t("td",{style:{"text-align":"left"}},[t("code",null,"world")],-1),$b={style:{"text-align":"left"}},t4=t("code",null,"DeepImmutableObject",-1),e4=t("code",null,"Matrix",-1),l4=t("td",{style:{"text-align":"left"}},"defines the world matrix to use",-1),o4=t("td",{style:{"text-align":"left"}},[t("code",null,"transform")],-1),s4={style:{"text-align":"left"}},n4=t("code",null,"DeepImmutableObject",-1),a4=t("code",null,"Matrix",-1),d4=t("td",{style:{"text-align":"left"}},"defines the transform (view x projection) matrix to use",-1),r4=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewport")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutableObject"),e("<"),t("code",null,"Viewport"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the screen viewport to use")],-1),c4=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the vector in which the screen space will be stored")],-1),i4=t("h4",{id:"returns-118",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-118","aria-hidden":"true"},"#"),e(" Returns")],-1),h4=t("p",null,[t("code",null,"T")],-1),u4=t("p",null,"result input",-1),_4=t("hr",null,null,-1),f4=t("h3",{id:"random",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#random","aria-hidden":"true"},"#"),e(" Random")],-1),p4=t("strong",null,"Random",-1),y4=t("code",null,"min?",-1),m4=t("code",null,"max?",-1),g4=t("code",null,"Vector3",-1),x4=n('<p>Returns a new Vector3 with random values between min and max</p><h4 id="parameters-87" tabindex="-1"><a class="header-anchor" href="#parameters-87" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>min?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the minimum random value</td></tr><tr><td style="text-align:left;"><code>max?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">the maximum random value</td></tr></tbody></table><h4 id="returns-119" tabindex="-1"><a class="header-anchor" href="#returns-119" aria-hidden="true">#</a> Returns</h4>',4),b4=t("code",null,"Vector3",-1),V4=t("p",null,"a Vector3 with random values between min and max",-1),T4=t("hr",null,null,-1),v4=t("h3",{id:"reflect",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reflect","aria-hidden":"true"},"#"),e(" Reflect")],-1),R4=t("strong",null,"Reflect",-1),w4=t("code",null,"T",-1),j4=t("code",null,"inDirection",-1),P4=t("code",null,"normal",-1),q4=t("code",null,"Vector3",-1),D4=t("p",null,"Reflects a vector off the plane defined by a normalized normal",-1),F4=t("h4",{id:"type-parameters-34",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-parameters-34","aria-hidden":"true"},"#"),e(" Type parameters")],-1),N4=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),I4=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),O4={style:{"text-align":"left"}},z4=t("code",null,"Vector3",-1),U4=t("h4",{id:"parameters-88",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-88","aria-hidden":"true"},"#"),e(" Parameters")],-1),E4=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Y4=t("td",{style:{"text-align":"left"}},[t("code",null,"inDirection")],-1),A4={style:{"text-align":"left"}},C4=t("code",null,"DeepImmutableObject",-1),M4=t("code",null,"Vector3",-1),S4=t("td",{style:{"text-align":"left"}},"defines the vector direction",-1),G4=t("td",{style:{"text-align":"left"}},[t("code",null,"normal")],-1),H4={style:{"text-align":"left"}},k4=t("code",null,"DeepImmutableObject",-1),B4=t("code",null,"Vector3",-1),Q4=t("td",{style:{"text-align":"left"}},"defines the normal - Must be normalized",-1),L4=t("h4",{id:"returns-120",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-120","aria-hidden":"true"},"#"),e(" Returns")],-1),W4=t("code",null,"Vector3",-1),Z4=n('<p>the resulting vector</p><hr><h3 id="reflecttoref" tabindex="-1"><a class="header-anchor" href="#reflecttoref" aria-hidden="true">#</a> ReflectToRef</h3><p>▸ <strong>ReflectToRef</strong>&lt;<code>T</code>&gt;(<code>inDirection</code>, <code>normal</code>, <code>ref</code>): <code>T</code></p><p>Reflects a vector off the plane defined by a normalized normal to reference</p><h4 id="type-parameters-35" tabindex="-1"><a class="header-anchor" href="#type-parameters-35" aria-hidden="true">#</a> Type parameters</h4>',6),X4=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),J4=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),K4={style:{"text-align":"left"}},$4=t("code",null,"Vector3",-1),t2=t("h4",{id:"parameters-89",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-89","aria-hidden":"true"},"#"),e(" Parameters")],-1),e2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),l2=t("td",{style:{"text-align":"left"}},[t("code",null,"inDirection")],-1),o2={style:{"text-align":"left"}},s2=t("code",null,"DeepImmutableObject",-1),n2=t("code",null,"Vector3",-1),a2=t("td",{style:{"text-align":"left"}},"defines the vector direction",-1),d2=t("td",{style:{"text-align":"left"}},[t("code",null,"normal")],-1),r2={style:{"text-align":"left"}},c2=t("code",null,"DeepImmutableObject",-1),i2=t("code",null,"Vector3",-1),h2=t("td",{style:{"text-align":"left"}},"defines the normal - Must be normalized",-1),u2=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"ref")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"-")],-1),_2=t("h4",{id:"returns-121",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-121","aria-hidden":"true"},"#"),e(" Returns")],-1),f2=t("p",null,[t("code",null,"T")],-1),p2=t("p",null,"the resulting vector",-1),y2=t("hr",null,null,-1),m2=t("h3",{id:"right",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#right","aria-hidden":"true"},"#"),e(" Right")],-1),g2=t("strong",null,"Right",-1),x2=t("code",null,"Vector3",-1),b2=t("p",null,"Returns a new Vector3 set to (1.0, 0.0, 0.0) Example Playground https://playground.babylonjs.com/#R1F8YU#71",-1),V2=t("h4",{id:"returns-122",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-122","aria-hidden":"true"},"#"),e(" Returns")],-1),T2=t("code",null,"Vector3",-1),v2=n('<p>a new right Vector3</p><hr><h3 id="rotationfromaxis" tabindex="-1"><a class="header-anchor" href="#rotationfromaxis" aria-hidden="true">#</a> RotationFromAxis</h3><p>▸ <strong>RotationFromAxis</strong>&lt;<code>T</code>&gt;(<code>axis1</code>, <code>axis2</code>, <code>axis3</code>): <code>T</code></p><p>Given three orthogonal normalized left-handed oriented Vector3 axis in space (target system), RotationFromAxis() returns the rotation Euler angles (ex : rotation.x, rotation.y, rotation.z) to apply to something in order to rotate it from its local system to the given target system Note: axis1, axis2 and axis3 are normalized during this operation Example Playground https://playground.babylonjs.com/#R1F8YU#106</p><h4 id="type-parameters-36" tabindex="-1"><a class="header-anchor" href="#type-parameters-36" aria-hidden="true">#</a> Type parameters</h4>',6),R2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),w2=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),j2={style:{"text-align":"left"}},P2=t("code",null,"Vector3",-1),q2=t("h4",{id:"parameters-90",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-90","aria-hidden":"true"},"#"),e(" Parameters")],-1),D2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),F2=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"axis1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the first axis")],-1),N2=t("td",{style:{"text-align":"left"}},[t("code",null,"axis2")],-1),I2={style:{"text-align":"left"}},O2=t("code",null,"DeepImmutableObject",-1),z2=t("code",null,"Vector3",-1),U2=t("td",{style:{"text-align":"left"}},"defines the second axis",-1),E2=t("td",{style:{"text-align":"left"}},[t("code",null,"axis3")],-1),Y2={style:{"text-align":"left"}},A2=t("code",null,"DeepImmutableObject",-1),C2=t("code",null,"Vector3",-1),M2=t("td",{style:{"text-align":"left"}},"defines the third axis",-1),S2=n('<h4 id="returns-123" tabindex="-1"><a class="header-anchor" href="#returns-123" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>a new Vector3</p><p><strong><code>See</code></strong></p><p>https://doc.babylonjs.com/features/featuresDeepDive/mesh/transforms/center_origin/target_align</p><hr><h3 id="rotationfromaxistoref" tabindex="-1"><a class="header-anchor" href="#rotationfromaxistoref" aria-hidden="true">#</a> RotationFromAxisToRef</h3><p>▸ <strong>RotationFromAxisToRef</strong>&lt;<code>T</code>&gt;(<code>axis1</code>, <code>axis2</code>, <code>axis3</code>, <code>ref</code>): <code>T</code></p><p>The same than RotationFromAxis but updates the given ref Vector3 parameter instead of returning a new Vector3 Example Playground https://playground.babylonjs.com/#R1F8YU#107</p><h4 id="type-parameters-37" tabindex="-1"><a class="header-anchor" href="#type-parameters-37" aria-hidden="true">#</a> Type parameters</h4>',10),G2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),H2=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),k2={style:{"text-align":"left"}},B2=t("code",null,"Vector3",-1),Q2=t("h4",{id:"parameters-91",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-91","aria-hidden":"true"},"#"),e(" Parameters")],-1),L2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),W2=t("td",{style:{"text-align":"left"}},[t("code",null,"axis1")],-1),Z2={style:{"text-align":"left"}},X2=t("code",null,"DeepImmutableObject",-1),J2=t("code",null,"Vector3",-1),K2=t("td",{style:{"text-align":"left"}},"defines the first axis",-1),$2=t("td",{style:{"text-align":"left"}},[t("code",null,"axis2")],-1),tV={style:{"text-align":"left"}},eV=t("code",null,"DeepImmutableObject",-1),lV=t("code",null,"Vector3",-1),oV=t("td",{style:{"text-align":"left"}},"defines the second axis",-1),sV=t("td",{style:{"text-align":"left"}},[t("code",null,"axis3")],-1),nV={style:{"text-align":"left"}},aV=t("code",null,"DeepImmutableObject",-1),dV=t("code",null,"Vector3",-1),rV=t("td",{style:{"text-align":"left"}},"defines the third axis",-1),cV=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"ref")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),iV=n('<h4 id="returns-124" tabindex="-1"><a class="header-anchor" href="#returns-124" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="slerptoref" tabindex="-1"><a class="header-anchor" href="#slerptoref" aria-hidden="true">#</a> SlerpToRef</h3><p>▸ <strong>SlerpToRef</strong>&lt;<code>T</code>&gt;(<code>vector0</code>, <code>vector1</code>, <code>slerp</code>, <code>result</code>): <code>T</code></p><p>Slerp between two vectors. See also <code>SmoothToRef</code> Slerp is a spherical linear interpolation giving a slow in and out effect Example Playground 1 https://playground.babylonjs.com/#R1F8YU#108 Example Playground 2 https://playground.babylonjs.com/#R1F8YU#109</p><h4 id="type-parameters-38" tabindex="-1"><a class="header-anchor" href="#type-parameters-38" aria-hidden="true">#</a> Type parameters</h4>',8),hV=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),uV=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),_V={style:{"text-align":"left"}},fV=t("code",null,"Vector3",-1),pV=t("code",null,"Vector3",-1),yV=t("h4",{id:"parameters-92",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-92","aria-hidden":"true"},"#"),e(" Parameters")],-1),mV=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),gV=t("td",{style:{"text-align":"left"}},[t("code",null,"vector0")],-1),xV={style:{"text-align":"left"}},bV=t("code",null,"Vector3",-1),VV=t("td",{style:{"text-align":"left"}},"Start vector",-1),TV=t("td",{style:{"text-align":"left"}},[t("code",null,"vector1")],-1),vV={style:{"text-align":"left"}},RV=t("code",null,"Vector3",-1),wV=t("td",{style:{"text-align":"left"}},"End vector",-1),jV=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"slerp")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"amount (will be clamped between 0 and 1)")],-1),PV=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"The slerped vector")],-1),qV=n('<h4 id="returns-125" tabindex="-1"><a class="header-anchor" href="#returns-125" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><hr><h3 id="smoothtoref" tabindex="-1"><a class="header-anchor" href="#smoothtoref" aria-hidden="true">#</a> SmoothToRef</h3><p>▸ <strong>SmoothToRef</strong>&lt;<code>T</code>&gt;(<code>source</code>, <code>goal</code>, <code>deltaTime</code>, <code>lerpTime</code>, <code>result</code>): <code>T</code></p><p>Smooth interpolation between two vectors using Slerp Example Playground https://playground.babylonjs.com/#R1F8YU#110</p><h4 id="type-parameters-39" tabindex="-1"><a class="header-anchor" href="#type-parameters-39" aria-hidden="true">#</a> Type parameters</h4>',7),DV=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),FV=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),NV={style:{"text-align":"left"}},IV=t("code",null,"Vector3",-1),OV=t("code",null,"Vector3",-1),zV=t("h4",{id:"parameters-93",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-93","aria-hidden":"true"},"#"),e(" Parameters")],-1),UV=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),EV=t("td",{style:{"text-align":"left"}},[t("code",null,"source")],-1),YV={style:{"text-align":"left"}},AV=t("code",null,"Vector3",-1),CV=t("td",{style:{"text-align":"left"}},"source vector",-1),MV=t("td",{style:{"text-align":"left"}},[t("code",null,"goal")],-1),SV={style:{"text-align":"left"}},GV=t("code",null,"Vector3",-1),HV=t("td",{style:{"text-align":"left"}},"goal vector",-1),kV=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"deltaTime")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"current interpolation frame")],-1),BV=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"lerpTime")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"total interpolation time")],-1),QV=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"the smoothed vector")],-1),LV=t("h4",{id:"returns-126",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-126","aria-hidden":"true"},"#"),e(" Returns")],-1),WV=t("p",null,[t("code",null,"T")],-1),ZV=t("hr",null,null,-1),XV=t("h3",{id:"transformcoordinates",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#transformcoordinates","aria-hidden":"true"},"#"),e(" TransformCoordinates")],-1),JV=t("strong",null,"TransformCoordinates",-1),KV=t("code",null,"T",-1),$V=t("code",null,"vector",-1),t8=t("code",null,"transformation",-1),e8=t("code",null,"Vector3",-1),l8=t("p",null,"Returns a new Vector3 set with the result of the transformation by the given matrix of the given vector. This method computes transformed coordinates only, not transformed direction vectors (ie. it takes translation in account) Example Playground https://playground.babylonjs.com/#R1F8YU#111",-1),o8=t("h4",{id:"type-parameters-40",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-parameters-40","aria-hidden":"true"},"#"),e(" Type parameters")],-1),s8=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),n8=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),a8={style:{"text-align":"left"}},d8=t("code",null,"Vector3",-1),r8=t("h4",{id:"parameters-94",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-94","aria-hidden":"true"},"#"),e(" Parameters")],-1),c8=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),i8=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),h8={style:{"text-align":"left"}},u8=t("code",null,"DeepImmutableObject",-1),_8=t("code",null,"Vector3",-1),f8=t("td",{style:{"text-align":"left"}},"defines the Vector3 to transform",-1),p8=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),y8={style:{"text-align":"left"}},m8=t("code",null,"DeepImmutableObject",-1),g8=t("code",null,"Matrix",-1),x8=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),b8=t("h4",{id:"returns-127",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-127","aria-hidden":"true"},"#"),e(" Returns")],-1),V8=t("code",null,"Vector3",-1),T8=n('<p>the transformed Vector3</p><hr><h3 id="transformcoordinatesfromfloatstoref" tabindex="-1"><a class="header-anchor" href="#transformcoordinatesfromfloatstoref" aria-hidden="true">#</a> TransformCoordinatesFromFloatsToRef</h3><p>▸ <strong>TransformCoordinatesFromFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>x</code>, <code>y</code>, <code>z</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; coordinates with the result of the transformation by the given matrix of the given floats (x, y, z) This method computes transformed coordinates only, not transformed direction vectors Example Playground https://playground.babylonjs.com/#R1F8YU#115</p><h4 id="type-parameters-41" tabindex="-1"><a class="header-anchor" href="#type-parameters-41" aria-hidden="true">#</a> Type parameters</h4>',6),v8=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),R8=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),w8={style:{"text-align":"left"}},j8=t("code",null,"Vector3",-1),P8=t("h4",{id:"parameters-95",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-95","aria-hidden":"true"},"#"),e(" Parameters")],-1),q8=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),D8=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"x")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the x coordinate of the source vector")],-1),F8=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"y")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the y coordinate of the source vector")],-1),N8=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"z")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the z coordinate of the source vector")],-1),I8=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),O8={style:{"text-align":"left"}},z8=t("code",null,"DeepImmutableObject",-1),U8=t("code",null,"Matrix",-1),E8=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),Y8=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),A8=n('<h4 id="returns-128" tabindex="-1"><a class="header-anchor" href="#returns-128" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="transformcoordinatestoref" tabindex="-1"><a class="header-anchor" href="#transformcoordinatestoref" aria-hidden="true">#</a> TransformCoordinatesToRef</h3><p>▸ <strong>TransformCoordinatesToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; coordinates with the result of the transformation by the given matrix of the given vector This method computes transformed coordinates only, not transformed direction vectors (ie. it takes translation in account) Example Playground https://playground.babylonjs.com/#R1F8YU#113</p><h4 id="type-parameters-42" tabindex="-1"><a class="header-anchor" href="#type-parameters-42" aria-hidden="true">#</a> Type parameters</h4>',8),C8=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),M8=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),S8={style:{"text-align":"left"}},G8=t("code",null,"Vector3",-1),H8=t("h4",{id:"parameters-96",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-96","aria-hidden":"true"},"#"),e(" Parameters")],-1),k8=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),B8=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),Q8={style:{"text-align":"left"}},L8=t("code",null,"DeepImmutableObject",-1),W8=t("code",null,"Vector3",-1),Z8=t("td",{style:{"text-align":"left"}},"defines the Vector3 to transform",-1),X8=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),J8={style:{"text-align":"left"}},K8=t("code",null,"DeepImmutableObject",-1),$8=t("code",null,"Matrix",-1),t0=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),e0=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),l0=t("h4",{id:"returns-129",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-129","aria-hidden":"true"},"#"),e(" Returns")],-1),o0=t("p",null,[t("code",null,"T")],-1),s0=t("p",null,"result input",-1),n0=t("hr",null,null,-1),a0=t("h3",{id:"transformnormal",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#transformnormal","aria-hidden":"true"},"#"),e(" TransformNormal")],-1),d0=t("strong",null,"TransformNormal",-1),r0=t("code",null,"vector",-1),c0=t("code",null,"transformation",-1),i0=t("code",null,"Vector3",-1),h0=t("p",null,"Returns a new Vector3 set with the result of the normal transformation by the given matrix of the given vector This methods computes transformed normalized direction vectors only (ie. it does not apply translation) Example Playground https://playground.babylonjs.com/#R1F8YU#112",-1),u0=t("h4",{id:"parameters-97",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-97","aria-hidden":"true"},"#"),e(" Parameters")],-1),_0=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),f0=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),p0={style:{"text-align":"left"}},y0=t("code",null,"DeepImmutableObject",-1),m0=t("code",null,"Vector3",-1),g0=t("td",{style:{"text-align":"left"}},"defines the Vector3 to transform",-1),x0=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),b0={style:{"text-align":"left"}},V0=t("code",null,"DeepImmutableObject",-1),T0=t("code",null,"Matrix",-1),v0=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),R0=t("h4",{id:"returns-130",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-130","aria-hidden":"true"},"#"),e(" Returns")],-1),w0=t("code",null,"Vector3",-1),j0=n('<p>the new Vector3</p><hr><h3 id="transformnormalfromfloatstoref" tabindex="-1"><a class="header-anchor" href="#transformnormalfromfloatstoref" aria-hidden="true">#</a> TransformNormalFromFloatsToRef</h3><p>▸ <strong>TransformNormalFromFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>x</code>, <code>y</code>, <code>z</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the result of the normal transformation by the given matrix of the given floats (x, y, z) This methods computes transformed normalized direction vectors only (ie. it does not apply translation) Example Playground https://playground.babylonjs.com/#R1F8YU#116</p><h4 id="type-parameters-43" tabindex="-1"><a class="header-anchor" href="#type-parameters-43" aria-hidden="true">#</a> Type parameters</h4>',6),P0=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),q0=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),D0={style:{"text-align":"left"}},F0=t("code",null,"Vector3",-1),N0=t("h4",{id:"parameters-98",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-98","aria-hidden":"true"},"#"),e(" Parameters")],-1),I0=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),O0=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"x")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the x coordinate of the source vector")],-1),z0=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"y")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the y coordinate of the source vector")],-1),U0=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"z")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"define the z coordinate of the source vector")],-1),E0=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),Y0={style:{"text-align":"left"}},A0=t("code",null,"DeepImmutableObject",-1),C0=t("code",null,"Matrix",-1),M0=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),S0=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),G0=n('<h4 id="returns-131" tabindex="-1"><a class="header-anchor" href="#returns-131" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="transformnormaltoref" tabindex="-1"><a class="header-anchor" href="#transformnormaltoref" aria-hidden="true">#</a> TransformNormalToRef</h3><p>▸ <strong>TransformNormalToRef</strong>&lt;<code>T</code>&gt;(<code>vector</code>, <code>transformation</code>, <code>result</code>): <code>T</code></p><p>Sets the given vector &quot;result&quot; with the result of the normal transformation by the given matrix of the given vector This methods computes transformed normalized direction vectors only (ie. it does not apply translation) Example Playground https://playground.babylonjs.com/#R1F8YU#114</p><h4 id="type-parameters-44" tabindex="-1"><a class="header-anchor" href="#type-parameters-44" aria-hidden="true">#</a> Type parameters</h4>',8),H0=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),k0=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),B0={style:{"text-align":"left"}},Q0=t("code",null,"Vector3",-1),L0=t("h4",{id:"parameters-99",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-99","aria-hidden":"true"},"#"),e(" Parameters")],-1),W0=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Z0=t("td",{style:{"text-align":"left"}},[t("code",null,"vector")],-1),X0={style:{"text-align":"left"}},J0=t("code",null,"DeepImmutableObject",-1),K0=t("code",null,"Vector3",-1),$0=t("td",{style:{"text-align":"left"}},"defines the Vector3 to transform",-1),t6=t("td",{style:{"text-align":"left"}},[t("code",null,"transformation")],-1),e6={style:{"text-align":"left"}},l6=t("code",null,"DeepImmutableObject",-1),o6=t("code",null,"Matrix",-1),s6=t("td",{style:{"text-align":"left"}},"defines the transformation matrix",-1),n6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),a6=n('<h4 id="returns-132" tabindex="-1"><a class="header-anchor" href="#returns-132" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="unproject" tabindex="-1"><a class="header-anchor" href="#unproject" aria-hidden="true">#</a> Unproject</h3><p>▸ <strong>Unproject</strong>&lt;<code>T</code>&gt;(<code>source</code>, <code>viewportWidth</code>, <code>viewportHeight</code>, <code>world</code>, <code>view</code>, <code>projection</code>): <code>T</code></p><p>Unproject from screen space to object space Example Playground https://playground.babylonjs.com/#R1F8YU#117</p><h4 id="type-parameters-45" tabindex="-1"><a class="header-anchor" href="#type-parameters-45" aria-hidden="true">#</a> Type parameters</h4>',8),d6=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),r6=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),c6={style:{"text-align":"left"}},i6=t("code",null,"Vector3",-1),h6=t("h4",{id:"parameters-100",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-100","aria-hidden":"true"},"#"),e(" Parameters")],-1),u6=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),_6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"source")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the screen space Vector3 to use")],-1),f6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewportWidth")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the current width of the viewport")],-1),p6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewportHeight")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the current height of the viewport")],-1),y6=t("td",{style:{"text-align":"left"}},[t("code",null,"world")],-1),m6={style:{"text-align":"left"}},g6=t("code",null,"DeepImmutableObject",-1),x6=t("code",null,"Matrix",-1),b6=t("td",{style:{"text-align":"left"}},"defines the world matrix to use (can be set to Identity to go to world space)",-1),V6=t("td",{style:{"text-align":"left"}},[t("code",null,"view")],-1),T6={style:{"text-align":"left"}},v6=t("code",null,"DeepImmutableObject",-1),R6=t("code",null,"Matrix",-1),w6=t("td",{style:{"text-align":"left"}},"defines the view matrix to use",-1),j6=t("td",{style:{"text-align":"left"}},[t("code",null,"projection")],-1),P6={style:{"text-align":"left"}},q6=t("code",null,"DeepImmutableObject",-1),D6=t("code",null,"Matrix",-1),F6=t("td",{style:{"text-align":"left"}},"defines the projection matrix to use",-1),N6=n('<h4 id="returns-133" tabindex="-1"><a class="header-anchor" href="#returns-133" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the new Vector3</p><hr><h3 id="unprojectfloatstoref" tabindex="-1"><a class="header-anchor" href="#unprojectfloatstoref" aria-hidden="true">#</a> UnprojectFloatsToRef</h3><p>▸ <strong>UnprojectFloatsToRef</strong>&lt;<code>T</code>&gt;(<code>sourceX</code>, <code>sourceY</code>, <code>sourceZ</code>, <code>viewportWidth</code>, <code>viewportHeight</code>, <code>world</code>, <code>view</code>, <code>projection</code>, <code>result</code>): <code>T</code></p><p>Unproject from screen space to object space Example Playground https://playground.babylonjs.com/#R1F8YU#120</p><h4 id="type-parameters-46" tabindex="-1"><a class="header-anchor" href="#type-parameters-46" aria-hidden="true">#</a> Type parameters</h4>',8),I6=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),O6=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),z6={style:{"text-align":"left"}},U6=t("code",null,"Vector3",-1),E6=t("h4",{id:"parameters-101",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-101","aria-hidden":"true"},"#"),e(" Parameters")],-1),Y6=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),A6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"sourceX")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the screen space x coordinate to use")],-1),C6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"sourceY")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the screen space y coordinate to use")],-1),M6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"sourceZ")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the screen space z coordinate to use")],-1),S6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewportWidth")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the current width of the viewport")],-1),G6=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewportHeight")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the current height of the viewport")],-1),H6=t("td",{style:{"text-align":"left"}},[t("code",null,"world")],-1),k6={style:{"text-align":"left"}},B6=t("code",null,"DeepImmutableObject",-1),Q6=t("code",null,"Matrix",-1),L6=t("td",{style:{"text-align":"left"}},"defines the world matrix to use (can be set to Identity to go to world space)",-1),W6=t("td",{style:{"text-align":"left"}},[t("code",null,"view")],-1),Z6={style:{"text-align":"left"}},X6=t("code",null,"DeepImmutableObject",-1),J6=t("code",null,"Matrix",-1),K6=t("td",{style:{"text-align":"left"}},"defines the view matrix to use",-1),$6=t("td",{style:{"text-align":"left"}},[t("code",null,"projection")],-1),t5={style:{"text-align":"left"}},e5=t("code",null,"DeepImmutableObject",-1),l5=t("code",null,"Matrix",-1),o5=t("td",{style:{"text-align":"left"}},"defines the projection matrix to use",-1),s5=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),n5=n('<h4 id="returns-134" tabindex="-1"><a class="header-anchor" href="#returns-134" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>result input</p><hr><h3 id="unprojectfromtransform" tabindex="-1"><a class="header-anchor" href="#unprojectfromtransform" aria-hidden="true">#</a> UnprojectFromTransform</h3><p>▸ <strong>UnprojectFromTransform</strong>&lt;<code>T</code>&gt;(<code>source</code>, <code>viewportWidth</code>, <code>viewportHeight</code>, <code>world</code>, <code>transform</code>): <code>T</code></p><p>Unproject from screen space to object space Example Playground https://playground.babylonjs.com/#R1F8YU#121</p><h4 id="type-parameters-47" tabindex="-1"><a class="header-anchor" href="#type-parameters-47" aria-hidden="true">#</a> Type parameters</h4>',8),a5=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),d5=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),r5={style:{"text-align":"left"}},c5=t("code",null,"Vector3",-1),i5=t("h4",{id:"parameters-102",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-102","aria-hidden":"true"},"#"),e(" Parameters")],-1),h5=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),u5=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"source")]),t("td",{style:{"text-align":"left"}},[t("code",null,"DeepImmutable"),e("<"),t("code",null,"T"),e(">")]),t("td",{style:{"text-align":"left"}},"defines the screen space Vector3 to use")],-1),_5=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewportWidth")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the current width of the viewport")],-1),f5=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewportHeight")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the current height of the viewport")],-1),p5=t("td",{style:{"text-align":"left"}},[t("code",null,"world")],-1),y5={style:{"text-align":"left"}},m5=t("code",null,"DeepImmutableObject",-1),g5=t("code",null,"Matrix",-1),x5=t("td",{style:{"text-align":"left"}},"defines the world matrix to use (can be set to Identity to go to world space)",-1),b5=t("td",{style:{"text-align":"left"}},[t("code",null,"transform")],-1),V5={style:{"text-align":"left"}},T5=t("code",null,"DeepImmutableObject",-1),v5=t("code",null,"Matrix",-1),R5=t("td",{style:{"text-align":"left"}},"defines the transform (view x projection) matrix to use",-1),w5=n('<h4 id="returns-135" tabindex="-1"><a class="header-anchor" href="#returns-135" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p><p>the new Vector3</p><hr><h3 id="unprojecttoref" tabindex="-1"><a class="header-anchor" href="#unprojecttoref" aria-hidden="true">#</a> UnprojectToRef</h3><p>▸ <strong>UnprojectToRef</strong>&lt;<code>T</code>&gt;(<code>source</code>, <code>viewportWidth</code>, <code>viewportHeight</code>, <code>world</code>, <code>view</code>, <code>projection</code>, <code>result</code>): <code>T</code></p><p>Unproject from screen space to object space Example Playground https://playground.babylonjs.com/#R1F8YU#119</p><h4 id="type-parameters-48" tabindex="-1"><a class="header-anchor" href="#type-parameters-48" aria-hidden="true">#</a> Type parameters</h4>',8),j5=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),P5=t("td",{style:{"text-align":"left"}},[t("code",null,"T")],-1),q5={style:{"text-align":"left"}},D5=t("code",null,"Vector3",-1),F5=t("h4",{id:"parameters-103",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters-103","aria-hidden":"true"},"#"),e(" Parameters")],-1),N5=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),I5=t("td",{style:{"text-align":"left"}},[t("code",null,"source")],-1),O5={style:{"text-align":"left"}},z5=t("code",null,"DeepImmutableObject",-1),U5=t("code",null,"Vector3",-1),E5=t("td",{style:{"text-align":"left"}},"defines the screen space Vector3 to use",-1),Y5=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewportWidth")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the current width of the viewport")],-1),A5=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewportHeight")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"defines the current height of the viewport")],-1),C5=t("td",{style:{"text-align":"left"}},[t("code",null,"world")],-1),M5={style:{"text-align":"left"}},S5=t("code",null,"DeepImmutableObject",-1),G5=t("code",null,"Matrix",-1),H5=t("td",{style:{"text-align":"left"}},"defines the world matrix to use (can be set to Identity to go to world space)",-1),k5=t("td",{style:{"text-align":"left"}},[t("code",null,"view")],-1),B5={style:{"text-align":"left"}},Q5=t("code",null,"DeepImmutableObject",-1),L5=t("code",null,"Matrix",-1),W5=t("td",{style:{"text-align":"left"}},"defines the view matrix to use",-1),Z5=t("td",{style:{"text-align":"left"}},[t("code",null,"projection")],-1),X5={style:{"text-align":"left"}},J5=t("code",null,"DeepImmutableObject",-1),K5=t("code",null,"Matrix",-1),$5=t("td",{style:{"text-align":"left"}},"defines the projection matrix to use",-1),tT=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"result")]),t("td",{style:{"text-align":"left"}},[t("code",null,"T")]),t("td",{style:{"text-align":"left"}},"defines the Vector3 where to store the result")],-1),eT=t("h4",{id:"returns-136",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-136","aria-hidden":"true"},"#"),e(" Returns")],-1),lT=t("p",null,[t("code",null,"T")],-1),oT=t("p",null,"result input",-1),sT=t("hr",null,null,-1),nT=t("h3",{id:"up",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#up","aria-hidden":"true"},"#"),e(" Up")],-1),aT=t("strong",null,"Up",-1),dT=t("code",null,"Vector3",-1),rT=t("p",null,"Returns a new Vector3 set to (0.0, 1.0, 0.0) Example Playground https://playground.babylonjs.com/#R1F8YU#71",-1),cT=t("h4",{id:"returns-137",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-137","aria-hidden":"true"},"#"),e(" Returns")],-1),iT=t("code",null,"Vector3",-1),hT=t("p",null,"a new up Vector3",-1),uT=t("hr",null,null,-1),_T=t("h3",{id:"zero",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#zero","aria-hidden":"true"},"#"),e(" Zero")],-1),fT=t("strong",null,"Zero",-1),pT=t("code",null,"Vector3",-1),yT=t("p",null,"Returns a new Vector3 set to (0.0, 0.0, 0.0)",-1),mT=t("h4",{id:"returns-138",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-138","aria-hidden":"true"},"#"),e(" Returns")],-1),gT=t("code",null,"Vector3",-1),xT=t("p",null,"a new empty Vector3",-1);function bT(VT,TT){const l=d("RouterLink");return r(),c("div",null,[h,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector3.html#constructor"},{default:s(()=>[e("constructor")]),_:1})])]),u,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector3.html#hasazerocomponent"},{default:s(()=>[e("hasAZeroComponent")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#isnonuniform"},{default:s(()=>[e("isNonUniform")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#x"},{default:s(()=>[e("x")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#y"},{default:s(()=>[e("y")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#z"},{default:s(()=>[e("z")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#downreadonly"},{default:s(()=>[e("DownReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#lefthandedbackwardreadonly"},{default:s(()=>[e("LeftHandedBackwardReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#lefthandedforwardreadonly"},{default:s(()=>[e("LeftHandedForwardReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#leftreadonly"},{default:s(()=>[e("LeftReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#onereadonly"},{default:s(()=>[e("OneReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#righthandedbackwardreadonly"},{default:s(()=>[e("RightHandedBackwardReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#righthandedforwardreadonly"},{default:s(()=>[e("RightHandedForwardReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#rightreadonly"},{default:s(()=>[e("RightReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#upreadonly"},{default:s(()=>[e("UpReadOnly")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#zeroreadonly"},{default:s(()=>[e("ZeroReadOnly")]),_:1})])]),_,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/Vector3.html#add"},{default:s(()=>[e("add")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#addinplace"},{default:s(()=>[e("addInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#addinplacefromfloats"},{default:s(()=>[e("addInPlaceFromFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#addtoref"},{default:s(()=>[e("addToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#applyrotationquaternion"},{default:s(()=>[e("applyRotationQuaternion")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#applyrotationquaternioninplace"},{default:s(()=>[e("applyRotationQuaternionInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#applyrotationquaterniontoref"},{default:s(()=>[e("applyRotationQuaternionToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#asarray"},{default:s(()=>[e("asArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#clone"},{default:s(()=>[e("clone")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#copyfrom"},{default:s(()=>[e("copyFrom")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#copyfromfloats"},{default:s(()=>[e("copyFromFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#cross"},{default:s(()=>[e("cross")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#divide"},{default:s(()=>[e("divide")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#divideinplace"},{default:s(()=>[e("divideInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#dividetoref"},{default:s(()=>[e("divideToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#dot"},{default:s(()=>[e("dot")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#equals"},{default:s(()=>[e("equals")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#equalstofloats"},{default:s(()=>[e("equalsToFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#equalswithepsilon"},{default:s(()=>[e("equalsWithEpsilon")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#floor"},{default:s(()=>[e("floor")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#fract"},{default:s(()=>[e("fract")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#fromarray"},{default:s(()=>[e("fromArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#getclassname"},{default:s(()=>[e("getClassName")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#gethashcode"},{default:s(()=>[e("getHashCode")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#getnormaltoref"},{default:s(()=>[e("getNormalToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#isnonuniformwithinepsilon"},{default:s(()=>[e("isNonUniformWithinEpsilon")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#length"},{default:s(()=>[e("length")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#lengthsquared"},{default:s(()=>[e("lengthSquared")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#maximizeinplace"},{default:s(()=>[e("maximizeInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#maximizeinplacefromfloats"},{default:s(()=>[e("maximizeInPlaceFromFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#minimizeinplace"},{default:s(()=>[e("minimizeInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#minimizeinplacefromfloats"},{default:s(()=>[e("minimizeInPlaceFromFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#multiply"},{default:s(()=>[e("multiply")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#multiplybyfloats"},{default:s(()=>[e("multiplyByFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#multiplyinplace"},{default:s(()=>[e("multiplyInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#multiplytoref"},{default:s(()=>[e("multiplyToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#negate"},{default:s(()=>[e("negate")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#negateinplace"},{default:s(()=>[e("negateInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#negatetoref"},{default:s(()=>[e("negateToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#normalize"},{default:s(()=>[e("normalize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#normalizefromlength"},{default:s(()=>[e("normalizeFromLength")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#normalizetonew"},{default:s(()=>[e("normalizeToNew")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#normalizetoref"},{default:s(()=>[e("normalizeToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#projectonplane"},{default:s(()=>[e("projectOnPlane")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#projectonplanetoref"},{default:s(()=>[e("projectOnPlaneToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#reorderinplace"},{default:s(()=>[e("reorderInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#rotatebyquaternionaroundpointtoref"},{default:s(()=>[e("rotateByQuaternionAroundPointToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#rotatebyquaterniontoref"},{default:s(()=>[e("rotateByQuaternionToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#scale"},{default:s(()=>[e("scale")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#scaleandaddtoref"},{default:s(()=>[e("scaleAndAddToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#scaleinplace"},{default:s(()=>[e("scaleInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#scaletoref"},{default:s(()=>[e("scaleToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#set"},{default:s(()=>[e("set")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#setall"},{default:s(()=>[e("setAll")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#subtract"},{default:s(()=>[e("subtract")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#subtractfromfloats"},{default:s(()=>[e("subtractFromFloats")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#subtractfromfloatstoref"},{default:s(()=>[e("subtractFromFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#subtractinplace"},{default:s(()=>[e("subtractInPlace")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#subtracttoref"},{default:s(()=>[e("subtractToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#toarray"},{default:s(()=>[e("toArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#toquaternion"},{default:s(()=>[e("toQuaternion")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#tostring"},{default:s(()=>[e("toString")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#backward"},{default:s(()=>[e("Backward")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#catmullrom"},{default:s(()=>[e("CatmullRom")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#center"},{default:s(()=>[e("Center")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#centertoref"},{default:s(()=>[e("CenterToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#checkextends"},{default:s(()=>[e("CheckExtends")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#clamp"},{default:s(()=>[e("Clamp")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#clamptoref"},{default:s(()=>[e("ClampToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#cross-1"},{default:s(()=>[e("Cross")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#crosstoref"},{default:s(()=>[e("CrossToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#distance"},{default:s(()=>[e("Distance")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#distancesquared"},{default:s(()=>[e("DistanceSquared")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#dot-1"},{default:s(()=>[e("Dot")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#down"},{default:s(()=>[e("Down")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#forward"},{default:s(()=>[e("Forward")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#fromarray-1"},{default:s(()=>[e("FromArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#fromarraytoref"},{default:s(()=>[e("FromArrayToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#fromfloatarray"},{default:s(()=>[e("FromFloatArray")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#fromfloatarraytoref"},{default:s(()=>[e("FromFloatArrayToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#fromfloatstoref"},{default:s(()=>[e("FromFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#getanglebetweenvectors"},{default:s(()=>[e("GetAngleBetweenVectors")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#getanglebetweenvectorsonplane"},{default:s(()=>[e("GetAngleBetweenVectorsOnPlane")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#getclipfactor"},{default:s(()=>[e("GetClipFactor")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#hermite"},{default:s(()=>[e("Hermite")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#hermite1stderivative"},{default:s(()=>[e("Hermite1stDerivative")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#hermite1stderivativetoref"},{default:s(()=>[e("Hermite1stDerivativeToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#left"},{default:s(()=>[e("Left")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#lerp"},{default:s(()=>[e("Lerp")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#lerptoref"},{default:s(()=>[e("LerpToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#maximize"},{default:s(()=>[e("Maximize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#minimize"},{default:s(()=>[e("Minimize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#normalize-1"},{default:s(()=>[e("Normalize")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#normalizetoref-1"},{default:s(()=>[e("NormalizeToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#one"},{default:s(()=>[e("One")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#pitchyawrolltomovebetweenpoints"},{default:s(()=>[e("PitchYawRollToMoveBetweenPoints")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#pitchyawrolltomovebetweenpointstoref"},{default:s(()=>[e("PitchYawRollToMoveBetweenPointsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#project"},{default:s(()=>[e("Project")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#projectontriangletoref"},{default:s(()=>[e("ProjectOnTriangleToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#projecttoref"},{default:s(()=>[e("ProjectToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#random"},{default:s(()=>[e("Random")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#reflect"},{default:s(()=>[e("Reflect")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#reflecttoref"},{default:s(()=>[e("ReflectToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#right"},{default:s(()=>[e("Right")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#rotationfromaxis"},{default:s(()=>[e("RotationFromAxis")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#rotationfromaxistoref"},{default:s(()=>[e("RotationFromAxisToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#slerptoref"},{default:s(()=>[e("SlerpToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#smoothtoref"},{default:s(()=>[e("SmoothToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#transformcoordinates"},{default:s(()=>[e("TransformCoordinates")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#transformcoordinatesfromfloatstoref"},{default:s(()=>[e("TransformCoordinatesFromFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#transformcoordinatestoref"},{default:s(()=>[e("TransformCoordinatesToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#transformnormal"},{default:s(()=>[e("TransformNormal")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#transformnormalfromfloatstoref"},{default:s(()=>[e("TransformNormalFromFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#transformnormaltoref"},{default:s(()=>[e("TransformNormalToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#unproject"},{default:s(()=>[e("Unproject")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#unprojectfloatstoref"},{default:s(()=>[e("UnprojectFloatsToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#unprojectfromtransform"},{default:s(()=>[e("UnprojectFromTransform")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#unprojecttoref"},{default:s(()=>[e("UnprojectToRef")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#up"},{default:s(()=>[e("Up")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html#zero"},{default:s(()=>[e("Zero")]),_:1})])]),f,p,t("p",null,[e("• "),y,e("("),m,e(", "),g,e(", "),x,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[b]),_:1})]),V,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[T]),_:1})]),v,t("p",null,[e("• "),R,e(),w,e("(): "),j,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[P]),_:1}),e(">")]),q,D,t("p",null,[F,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[N]),_:1}),e(">")]),I,O,t("p",null,[e("• "),z,e(),U,e("(): "),E,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Y]),_:1}),e(">")]),A,C,t("p",null,[M,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[S]),_:1}),e(">")]),G,H,t("p",null,[e("• "),k,e(),B,e("(): "),Q,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[L]),_:1}),e(">")]),W,Z,t("p",null,[X,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[J]),_:1}),e(">")]),K,$,t("p",null,[e("• "),tt,e(),et,e("(): "),lt,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ot]),_:1}),e(">")]),st,nt,t("p",null,[at,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[dt]),_:1}),e(">")]),rt,ct,t("p",null,[e("• "),it,e(),ht,e("(): "),ut,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[_t]),_:1}),e(">")]),ft,pt,t("p",null,[yt,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[mt]),_:1}),e(">")]),gt,xt,t("p",null,[e("• "),bt,e(),Vt,e("(): "),Tt,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[vt]),_:1}),e(">")]),Rt,wt,t("p",null,[jt,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Pt]),_:1}),e(">")]),qt,Dt,t("p",null,[e("• "),Ft,e(),Nt,e("(): "),It,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ot]),_:1}),e(">")]),zt,Ut,t("p",null,[Et,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Yt]),_:1}),e(">")]),At,Ct,t("p",null,[e("• "),Mt,e(),St,e("(): "),Gt,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ht]),_:1}),e(">")]),kt,Bt,t("p",null,[Qt,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Lt]),_:1}),e(">")]),Wt,Zt,t("p",null,[e("• "),Xt,e(),Jt,e("(): "),Kt,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[$t]),_:1}),e(">")]),te,ee,t("p",null,[le,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[oe]),_:1}),e(">")]),se,ne,t("p",null,[e("• "),ae,e(),de,e("(): "),re,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ce]),_:1}),e(">")]),ie,he,t("p",null,[ue,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[_e]),_:1}),e(">")]),fe,pe,t("p",null,[e("▸ "),ye,e("("),me,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ge]),_:1})]),xe,be,t("table",null,[Ve,t("tbody",null,[t("tr",null,[Te,t("td",ve,[Re,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[we]),_:1}),e(">")]),je])])]),Pe,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[qe]),_:1})]),De,Fe,Ne,t("p",null,[e("▸ "),Ie,e("("),Oe,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ze]),_:1})]),Ue,Ee,t("table",null,[Ye,t("tbody",null,[t("tr",null,[Ae,t("td",Ce,[Me,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Se]),_:1}),e(">")]),Ge])])]),He,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ke]),_:1})]),Be,Qe,Le,t("p",null,[e("▸ "),We,e("("),Ze,e(", "),Xe,e(", "),Je,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ke]),_:1})]),$e,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[tl]),_:1})]),el,t("table",null,[ll,t("tbody",null,[t("tr",null,[ol,t("td",sl,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[nl]),_:1})])])])]),al,t("table",null,[dl,t("tbody",null,[t("tr",null,[rl,t("td",cl,[il,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[hl]),_:1}),e(">")]),ul]),_l])]),fl,pl,yl,ml,gl,t("p",null,[e("▸ "),xl,e("("),bl,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Vl]),_:1})]),Tl,vl,t("table",null,[Rl,t("tbody",null,[t("tr",null,[wl,t("td",jl,[o(l,{to:"/docs/classes/Quaternion.html"},{default:s(()=>[Pl]),_:1})]),ql])])]),Dl,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Fl]),_:1})]),Nl,Il,Ol,t("p",null,[e("▸ "),zl,e("("),Ul,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[El]),_:1})]),Yl,Al,t("table",null,[Cl,t("tbody",null,[t("tr",null,[Ml,t("td",Sl,[o(l,{to:"/docs/classes/Quaternion.html"},{default:s(()=>[Gl]),_:1})]),Hl])])]),kl,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Bl]),_:1})]),Ql,t("table",null,[Ll,t("tbody",null,[t("tr",null,[Wl,t("td",Zl,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Xl]),_:1})])])])]),Jl,t("table",null,[Kl,t("tbody",null,[t("tr",null,[$l,t("td",to,[o(l,{to:"/docs/classes/Quaternion.html"},{default:s(()=>[eo]),_:1})]),lo]),oo])]),so,t("p",null,[e("▸ "),no,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ao]),_:1})]),ro,co,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[io]),_:1})]),ho,uo,_o,t("p",null,[e("▸ "),fo,e("("),po,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[yo]),_:1})]),mo,go,t("table",null,[xo,t("tbody",null,[t("tr",null,[bo,t("td",Vo,[To,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[vo]),_:1}),e(">")]),Ro])])]),wo,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[jo]),_:1})]),Po,qo,Do,t("p",null,[e("▸ "),Fo,e("("),No,e(", "),Io,e(", "),Oo,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[zo]),_:1})]),Uo,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Eo]),_:1})]),Yo,Ao,Co,t("p",null,[e("▸ "),Mo,e("("),So,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Go]),_:1})]),Ho,ko,t("table",null,[Bo,t("tbody",null,[t("tr",null,[Qo,t("td",Lo,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Wo]),_:1})]),Zo])])]),Xo,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Jo]),_:1})]),Ko,$o,ts,t("p",null,[e("▸ "),es,e("("),ls,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[os]),_:1})]),ss,ns,t("table",null,[as,t("tbody",null,[t("tr",null,[ds,t("td",rs,[cs,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[is]),_:1}),e(">")]),hs])])]),us,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[_s]),_:1})]),fs,ps,ys,t("p",null,[e("▸ "),ms,e("("),gs,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[xs]),_:1})]),bs,Vs,t("table",null,[Ts,t("tbody",null,[t("tr",null,[vs,t("td",Rs,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ws]),_:1})]),js])])]),Ps,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[qs]),_:1})]),Ds,t("table",null,[Fs,t("tbody",null,[t("tr",null,[Ns,t("td",Is,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Os]),_:1})])])])]),zs,t("table",null,[Us,t("tbody",null,[t("tr",null,[Es,t("td",Ys,[As,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Cs]),_:1}),e(">")]),Ms]),Ss])]),Gs,t("table",null,[Hs,t("tbody",null,[t("tr",null,[ks,t("td",Bs,[Qs,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ls]),_:1}),e(">")]),Ws])])]),Zs,t("table",null,[Xs,t("tbody",null,[t("tr",null,[Js,t("td",Ks,[$s,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[tn]),_:1}),e(">")]),en])])]),ln,t("table",null,[on,t("tbody",null,[t("tr",null,[sn,t("td",nn,[an,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[dn]),_:1}),e(">")]),rn]),cn])]),hn,un,_n,fn,pn,t("p",null,[e("▸ "),yn,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[mn]),_:1})]),gn,xn,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[bn]),_:1})]),Vn,Tn,vn,t("p",null,[e("▸ "),Rn,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[wn]),_:1})]),jn,Pn,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[qn]),_:1})]),Dn,Fn,Nn,t("p",null,[e("▸ "),In,e("("),On,e(", "),zn,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Un]),_:1})]),En,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Yn]),_:1})]),An,t("p",null,[e("▸ "),Cn,e("("),Mn,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Sn]),_:1})]),Gn,Hn,t("table",null,[kn,t("tbody",null,[t("tr",null,[Bn,t("td",Qn,[Ln,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Wn]),_:1}),e(">")]),Zn])])]),Xn,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Jn]),_:1})]),Kn,t("p",null,[e("▸ "),$n,e("("),ta,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ea]),_:1})]),la,oa,t("table",null,[sa,t("tbody",null,[t("tr",null,[na,t("td",aa,[da,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ra]),_:1}),e(">")]),ca])])]),ia,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ha]),_:1})]),ua,_a,fa,t("p",null,[e("▸ "),pa,e("("),ya,e(", "),ma,e(", "),ga,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[xa]),_:1})]),ba,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Va]),_:1})]),Ta,va,Ra,t("p",null,[e("▸ "),wa,e("("),ja,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Pa]),_:1})]),qa,Da,t("table",null,[Fa,t("tbody",null,[t("tr",null,[Na,t("td",Ia,[Oa,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[za]),_:1}),e(">")]),Ua])])]),Ea,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ya]),_:1})]),Aa,Ca,Ma,t("p",null,[e("▸ "),Sa,e("("),Ga,e(", "),Ha,e(", "),ka,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ba]),_:1})]),Qa,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[La]),_:1})]),Wa,Za,Xa,t("p",null,[e("▸ "),Ja,e("("),Ka,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[$a]),_:1})]),td,ed,t("table",null,[ld,t("tbody",null,[t("tr",null,[od,t("td",sd,[nd,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ad]),_:1}),e(">")]),dd])])]),rd,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[cd]),_:1})]),id,hd,ud,t("p",null,[e("▸ "),_d,e("("),fd,e(", "),pd,e(", "),yd,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[md]),_:1})]),gd,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[xd]),_:1})]),bd,Vd,Td,t("p",null,[e("▸ "),vd,e("("),Rd,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[wd]),_:1})]),jd,Pd,t("table",null,[qd,t("tbody",null,[t("tr",null,[Dd,t("td",Fd,[Nd,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Id]),_:1}),e(">")]),Od])])]),zd,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ud]),_:1})]),Ed,t("table",null,[Yd,t("tbody",null,[t("tr",null,[Ad,t("td",Cd,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Md]),_:1})])])])]),Sd,t("table",null,[Gd,t("tbody",null,[t("tr",null,[Hd,t("td",kd,[Bd,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Qd]),_:1}),e(">")]),Ld]),Wd])]),Zd,Xd,Jd,Kd,$d,t("p",null,[e("▸ "),tr,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[er]),_:1})]),lr,or,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[sr]),_:1})]),nr,ar,dr,t("p",null,[e("▸ "),rr,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[cr]),_:1})]),ir,hr,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ur]),_:1})]),_r,t("table",null,[fr,t("tbody",null,[t("tr",null,[pr,t("td",yr,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[mr]),_:1}),e(" = "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[gr]),_:1})])])])]),xr,t("p",null,[e("▸ "),br,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Vr]),_:1})]),Tr,vr,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Rr]),_:1})]),wr,jr,Pr,t("p",null,[e("▸ "),qr,e("("),Dr,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Fr]),_:1})]),Nr,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ir]),_:1})]),Or,zr,Ur,t("p",null,[e("▸ "),Er,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Yr]),_:1})]),Ar,Cr,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Mr]),_:1})]),Sr,t("table",null,[Gr,t("tbody",null,[t("tr",null,[Hr,t("td",kr,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Br]),_:1})])])])]),Qr,t("table",null,[Lr,t("tbody",null,[t("tr",null,[Wr,t("td",Zr,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Xr]),_:1})])])])]),Jr,t("table",null,[Kr,t("tbody",null,[t("tr",null,[$r,t("td",tc,[o(l,{to:"/docs/classes/Plane.html"},{default:s(()=>[ec]),_:1})]),lc]),t("tr",null,[oc,t("td",sc,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[nc]),_:1})]),ac])])]),dc,t("table",null,[rc,t("tbody",null,[t("tr",null,[cc,t("td",ic,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[hc]),_:1})])])])]),uc,t("table",null,[_c,t("tbody",null,[t("tr",null,[fc,t("td",pc,[o(l,{to:"/docs/classes/Plane.html"},{default:s(()=>[yc]),_:1})]),mc]),t("tr",null,[gc,t("td",xc,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[bc]),_:1})]),Vc]),Tc])]),vc,Rc,wc,jc,Pc,t("p",null,[e("▸ "),qc,e("("),Dc,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Fc]),_:1})]),Nc,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ic]),_:1})]),Oc,t("table",null,[zc,t("tbody",null,[t("tr",null,[Uc,t("td",Ec,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Yc]),_:1})])])])]),Ac,t("table",null,[Cc,t("tbody",null,[t("tr",null,[Mc,t("td",Sc,[o(l,{to:"/docs/classes/Quaternion.html"},{default:s(()=>[Gc]),_:1})]),Hc]),t("tr",null,[kc,t("td",Bc,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Qc]),_:1})]),Lc]),Wc])]),Zc,t("table",null,[Xc,t("tbody",null,[t("tr",null,[Jc,t("td",Kc,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[$c]),_:1})])])])]),ti,t("table",null,[ei,t("tbody",null,[t("tr",null,[li,t("td",oi,[o(l,{to:"/docs/classes/Quaternion.html"},{default:s(()=>[si]),_:1})]),ni]),ai])]),di,ri,ci,ii,hi,t("p",null,[e("▸ "),ui,e("("),_i,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[fi]),_:1})]),pi,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[yi]),_:1})]),mi,t("table",null,[gi,t("tbody",null,[t("tr",null,[xi,t("td",bi,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Vi]),_:1})])])])]),Ti,t("p",null,[e("▸ "),vi,e("("),Ri,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[wi]),_:1})]),ji,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Pi]),_:1})]),qi,t("table",null,[Di,t("tbody",null,[t("tr",null,[Fi,t("td",Ni,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ii]),_:1})])])])]),Oi,t("p",null,[e("▸ "),zi,e("("),Ui,e(", "),Ei,e(", "),Yi,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ai]),_:1})]),Ci,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Mi]),_:1})]),Si,Gi,Hi,t("p",null,[e("▸ "),ki,e("("),Bi,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Qi]),_:1})]),Li,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Wi]),_:1})]),Zi,Xi,Ji,t("p",null,[e("▸ "),Ki,e("("),$i,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[th]),_:1})]),eh,lh,t("table",null,[oh,t("tbody",null,[t("tr",null,[sh,t("td",nh,[ah,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[dh]),_:1}),e(">")]),rh])])]),ch,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ih]),_:1})]),hh,uh,_h,t("p",null,[e("▸ "),fh,e("("),ph,e(", "),yh,e(", "),mh,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[gh]),_:1})]),xh,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[bh]),_:1})]),Vh,t("table",null,[Th,t("tbody",null,[t("tr",null,[vh,t("td",Rh,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[wh]),_:1})])])])]),jh,t("p",null,[e("▸ "),Ph,e("("),qh,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Dh]),_:1})]),Fh,Nh,t("table",null,[Ih,t("tbody",null,[t("tr",null,[Oh,t("td",zh,[Uh,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Eh]),_:1}),e(">")]),Yh])])]),Ah,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ch]),_:1})]),Mh,t("table",null,[Sh,t("tbody",null,[t("tr",null,[Gh,t("td",Hh,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[kh]),_:1})])])])]),Bh,t("table",null,[Qh,t("tbody",null,[t("tr",null,[Lh,t("td",Wh,[Zh,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Xh]),_:1}),e(">")]),Jh]),Kh])]),$h,tu,eu,lu,ou,t("p",null,[e("▸ "),su,e("("),nu,e(", "),au,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[du]),_:1})]),ru,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[cu]),_:1})]),iu,hu,uu,t("p",null,[e("▸ "),_u,e("(): "),o(l,{to:"/docs/classes/Quaternion.html"},{default:s(()=>[fu]),_:1})]),pu,yu,t("p",null,[o(l,{to:"/docs/classes/Quaternion.html"},{default:s(()=>[mu]),_:1})]),gu,t("p",null,[e("▸ "),xu,e("("),bu,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Vu]),_:1})]),Tu,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[vu]),_:1})]),Ru,t("table",null,[wu,t("tbody",null,[t("tr",null,[ju,t("td",Pu,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[qu]),_:1})])])])]),Du,t("table",null,[Fu,t("tbody",null,[Nu,t("tr",null,[Iu,t("td",Ou,[zu,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Uu]),_:1}),e(">")]),Eu]),t("tr",null,[Yu,t("td",Au,[Cu,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Mu]),_:1}),e(">")]),Su]),t("tr",null,[Gu,t("td",Hu,[ku,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Bu]),_:1}),e(">")]),Qu]),Lu])]),Wu,Zu,Xu,Ju,Ku,t("p",null,[e("▸ "),$u,e("("),t1,e(", "),e1,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[l1]),_:1})]),o1,s1,t("table",null,[n1,t("tbody",null,[t("tr",null,[a1,t("td",d1,[r1,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[c1]),_:1}),e(">")]),i1]),t("tr",null,[h1,t("td",u1,[_1,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[f1]),_:1}),e(">")]),p1])])]),y1,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[m1]),_:1})]),g1,t("table",null,[x1,t("tbody",null,[t("tr",null,[b1,t("td",V1,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[T1]),_:1})])])])]),v1,t("table",null,[R1,t("tbody",null,[t("tr",null,[w1,t("td",j1,[P1,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[q1]),_:1}),e(">")]),D1]),t("tr",null,[F1,t("td",N1,[I1,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[O1]),_:1}),e(">")]),z1]),U1])]),E1,t("table",null,[Y1,t("tbody",null,[t("tr",null,[A1,t("td",C1,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[M1]),_:1})]),S1]),t("tr",null,[G1,t("td",H1,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[k1]),_:1})]),B1]),t("tr",null,[Q1,t("td",L1,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[W1]),_:1})]),Z1])])]),X1,t("table",null,[J1,t("tbody",null,[t("tr",null,[K1,t("td",$1,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[t_]),_:1})])])])]),e_,t("table",null,[l_,t("tbody",null,[o_,t("tr",null,[s_,t("td",n_,[a_,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[d_]),_:1}),e(">")]),r_]),t("tr",null,[c_,t("td",i_,[h_,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[u_]),_:1}),e(">")]),__])])]),f_,t("table",null,[p_,t("tbody",null,[t("tr",null,[y_,t("td",m_,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[g_]),_:1})])])])]),x_,t("table",null,[b_,t("tbody",null,[t("tr",null,[V_,t("td",T_,[v_,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[R_]),_:1}),e(">")]),w_]),t("tr",null,[j_,t("td",P_,[q_,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[D_]),_:1}),e(">")]),F_]),t("tr",null,[N_,t("td",I_,[O_,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[z_]),_:1}),e(">")]),U_]),E_])]),Y_,t("table",null,[A_,t("tbody",null,[t("tr",null,[C_,t("td",M_,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[S_]),_:1})])])])]),G_,t("table",null,[H_,t("tbody",null,[k_,t("tr",null,[B_,t("td",Q_,[L_,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[W_]),_:1}),e(">")]),Z_])])]),X_,t("table",null,[J_,t("tbody",null,[t("tr",null,[K_,t("td",$_,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[tf]),_:1})])])])]),ef,t("table",null,[lf,t("tbody",null,[t("tr",null,[of,t("td",sf,[nf,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[af]),_:1}),e(">")]),df]),t("tr",null,[rf,t("td",cf,[hf,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[uf]),_:1}),e(">")]),_f]),ff])]),pf,t("table",null,[yf,t("tbody",null,[t("tr",null,[mf,t("td",gf,[xf,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[bf]),_:1}),e(">")]),Vf]),t("tr",null,[Tf,t("td",vf,[Rf,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[wf]),_:1}),e(">")]),jf])])]),Pf,t("table",null,[qf,t("tbody",null,[t("tr",null,[Df,t("td",Ff,[Nf,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[If]),_:1}),e(">")]),Of]),t("tr",null,[zf,t("td",Uf,[Ef,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Yf]),_:1}),e(">")]),Af])])]),Cf,t("table",null,[Mf,t("tbody",null,[t("tr",null,[Sf,t("td",Gf,[Hf,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[kf]),_:1}),e(">")]),Bf]),t("tr",null,[Qf,t("td",Lf,[Wf,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Zf]),_:1}),e(">")]),Xf])])]),Jf,Kf,$f,tp,ep,t("p",null,[e("▸ "),lp,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[op]),_:1})]),sp,np,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ap]),_:1})]),dp,rp,cp,t("p",null,[e("▸ "),ip,e("("),hp,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[up]),_:1})]),_p,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[fp]),_:1})]),pp,yp,mp,t("p",null,[e("▸ "),gp,e("("),xp,e(", "),bp,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Vp]),_:1})]),Tp,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[vp]),_:1})]),Rp,t("table",null,[wp,t("tbody",null,[t("tr",null,[jp,t("td",Pp,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[qp]),_:1})])])])]),Dp,t("p",null,[e("▸ "),Fp,e("("),Np,e(", "),Ip,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Op]),_:1})]),zp,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Up]),_:1})]),Ep,t("table",null,[Yp,t("tbody",null,[t("tr",null,[Ap,t("td",Cp,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Mp]),_:1})])])])]),Sp,t("table",null,[Gp,t("tbody",null,[t("tr",null,[Hp,t("td",kp,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Bp]),_:1}),e(" = "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Qp]),_:1})])])])]),Lp,t("table",null,[Wp,t("tbody",null,[t("tr",null,[Zp,t("td",Xp,[Jp,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Kp]),_:1}),e(">")]),$p]),t("tr",null,[ty,t("td",ey,[ly,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[oy]),_:1}),e(">")]),sy]),t("tr",null,[ny,t("td",ay,[dy,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ry]),_:1}),e(">")]),cy])])]),iy,t("table",null,[hy,t("tbody",null,[t("tr",null,[uy,t("td",_y,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[fy]),_:1})]),py]),t("tr",null,[yy,t("td",my,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[gy]),_:1})]),xy]),t("tr",null,[by,t("td",Vy,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ty]),_:1})]),vy])])]),Ry,t("table",null,[wy,t("tbody",null,[t("tr",null,[jy,t("td",Py,[qy,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Dy]),_:1}),e(">")]),Fy]),t("tr",null,[Ny,t("td",Iy,[Oy,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[zy]),_:1}),e(">")]),Uy]),t("tr",null,[Ey,t("td",Yy,[Ay,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Cy]),_:1}),e(">")]),My]),Sy])]),Gy,t("table",null,[Hy,t("tbody",null,[t("tr",null,[ky,t("td",By,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Qy]),_:1})])])])]),Ly,t("table",null,[Wy,t("tbody",null,[Zy,t("tr",null,[Xy,t("td",Jy,[Ky,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[$y]),_:1}),e(">")]),tm]),t("tr",null,[em,t("td",lm,[om,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[sm]),_:1}),e(">")]),nm]),t("tr",null,[am,t("td",dm,[rm,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[cm]),_:1}),e(">")]),im]),hm])]),um,t("table",null,[_m,t("tbody",null,[t("tr",null,[fm,t("td",pm,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[ym]),_:1})])])])]),mm,t("table",null,[gm,t("tbody",null,[xm,t("tr",null,[bm,t("td",Vm,[Tm,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[vm]),_:1}),e(">")]),Rm]),t("tr",null,[wm,t("td",jm,[Pm,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[qm]),_:1}),e(">")]),Dm]),t("tr",null,[Fm,t("td",Nm,[Im,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Om]),_:1}),e(">")]),zm]),Um])]),Em,t("table",null,[Ym,t("tbody",null,[t("tr",null,[Am,t("td",Cm,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Mm]),_:1})])])])]),Sm,t("table",null,[Gm,t("tbody",null,[t("tr",null,[Hm,t("td",km,[Bm,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Qm]),_:1}),e(">")]),Lm]),t("tr",null,[Wm,t("td",Zm,[Xm,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Jm]),_:1}),e(">")]),Km]),t("tr",null,[$m,t("td",tg,[eg,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[lg]),_:1}),e(">")]),og]),t("tr",null,[sg,t("td",ng,[ag,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[dg]),_:1}),e(">")]),rg]),cg,ig])]),hg,ug,_g,fg,pg,t("p",null,[e("▸ "),yg,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[mg]),_:1})]),gg,xg,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[bg]),_:1})]),Vg,t("table",null,[Tg,t("tbody",null,[t("tr",null,[vg,t("td",Rg,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[wg]),_:1})])])])]),jg,t("table",null,[Pg,t("tbody",null,[qg,t("tr",null,[Dg,t("td",Fg,[Ng,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ig]),_:1}),e(">")]),Og]),zg])]),Ug,t("table",null,[Eg,t("tbody",null,[t("tr",null,[Yg,t("td",Ag,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Cg]),_:1})])])])]),Mg,t("table",null,[Sg,t("tbody",null,[t("tr",null,[Gg,t("td",Hg,[kg,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Bg]),_:1}),e(">")]),Qg]),t("tr",null,[Lg,t("td",Wg,[Zg,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Xg]),_:1}),e(">")]),Jg]),Kg,$g])]),tx,t("table",null,[ex,t("tbody",null,[t("tr",null,[lx,t("td",ox,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[sx]),_:1})])])])]),nx,t("table",null,[ax,t("tbody",null,[dx,t("tr",null,[rx,t("td",cx,[ix,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[hx]),_:1}),e(">")]),ux])])]),_x,t("table",null,[fx,t("tbody",null,[t("tr",null,[px,t("td",yx,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[mx]),_:1})])])])]),gx,t("table",null,[xx,t("tbody",null,[bx,t("tr",null,[Vx,t("td",Tx,[vx,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Rx]),_:1}),e(">")]),wx])])]),jx,Px,qx,Dx,Fx,t("p",null,[e("▸ "),Nx,e("("),Ix,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ox]),_:1})]),zx,Ux,t("table",null,[Ex,t("tbody",null,[t("tr",null,[Yx,t("td",Ax,[Cx,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Mx]),_:1}),e(">")]),Sx])])]),Gx,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Hx]),_:1})]),kx,t("table",null,[Bx,t("tbody",null,[t("tr",null,[Qx,t("td",Lx,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Wx]),_:1})])])])]),Zx,t("table",null,[Xx,t("tbody",null,[t("tr",null,[Jx,t("td",Kx,[$x,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[t3]),_:1}),e(">")]),e3]),l3])]),o3,s3,n3,a3,d3,t("p",null,[e("▸ "),r3,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[c3]),_:1})]),i3,h3,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[u3]),_:1})]),_3,f3,p3,t("p",null,[e("▸ "),y3,e("("),m3,e(", "),g3,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[x3]),_:1})]),b3,V3,t("table",null,[T3,t("tbody",null,[t("tr",null,[v3,t("td",R3,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[w3]),_:1})]),j3]),t("tr",null,[P3,t("td",q3,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[D3]),_:1})]),F3])])]),N3,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[I3]),_:1})]),O3,t("table",null,[z3,t("tbody",null,[t("tr",null,[U3,t("td",E3,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Y3]),_:1})])])])]),A3,t("table",null,[C3,t("tbody",null,[t("tr",null,[M3,t("td",S3,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[G3]),_:1})]),H3]),t("tr",null,[k3,t("td",B3,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Q3]),_:1})]),L3]),W3])]),Z3,t("table",null,[X3,t("tbody",null,[t("tr",null,[J3,t("td",K3,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[$3]),_:1})])])])]),tb,t("table",null,[eb,t("tbody",null,[lb,t("tr",null,[ob,t("td",sb,[nb,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[ab]),_:1}),e(">")]),db]),t("tr",null,[rb,t("td",cb,[ib,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[hb]),_:1}),e(">")]),ub]),_b])]),fb,t("table",null,[pb,t("tbody",null,[t("tr",null,[yb,t("td",mb,[gb,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[xb]),_:1}),e(">")]),bb]),t("tr",null,[Vb,t("td",Tb,[vb,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Rb]),_:1}),e(">")]),wb]),t("tr",null,[jb,t("td",Pb,[qb,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Db]),_:1}),e(">")]),Fb]),t("tr",null,[Nb,t("td",Ib,[Ob,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[zb]),_:1}),e(">")]),Ub]),t("tr",null,[Eb,t("td",Yb,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Ab]),_:1})]),Cb])])]),Mb,t("table",null,[Sb,t("tbody",null,[t("tr",null,[Gb,t("td",Hb,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[kb]),_:1})])])])]),Bb,t("table",null,[Qb,t("tbody",null,[t("tr",null,[Lb,t("td",Wb,[Zb,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Xb]),_:1}),e(">")]),Jb]),t("tr",null,[Kb,t("td",$b,[t4,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[e4]),_:1}),e(">")]),l4]),t("tr",null,[o4,t("td",s4,[n4,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[a4]),_:1}),e(">")]),d4]),r4,c4])]),i4,h4,u4,_4,f4,t("p",null,[e("▸ "),p4,e("("),y4,e(", "),m4,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[g4]),_:1})]),x4,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[b4]),_:1})]),V4,T4,v4,t("p",null,[e("▸ "),R4,e("<"),w4,e(">("),j4,e(", "),P4,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[q4]),_:1})]),D4,F4,t("table",null,[N4,t("tbody",null,[t("tr",null,[I4,t("td",O4,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[z4]),_:1})])])])]),U4,t("table",null,[E4,t("tbody",null,[t("tr",null,[Y4,t("td",A4,[C4,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[M4]),_:1}),e(">")]),S4]),t("tr",null,[G4,t("td",H4,[k4,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[B4]),_:1}),e(">")]),Q4])])]),L4,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[W4]),_:1})]),Z4,t("table",null,[X4,t("tbody",null,[t("tr",null,[J4,t("td",K4,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[$4]),_:1})])])])]),t2,t("table",null,[e2,t("tbody",null,[t("tr",null,[l2,t("td",o2,[s2,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[n2]),_:1}),e(">")]),a2]),t("tr",null,[d2,t("td",r2,[c2,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[i2]),_:1}),e(">")]),h2]),u2])]),_2,f2,p2,y2,m2,t("p",null,[e("▸ "),g2,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[x2]),_:1})]),b2,V2,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[T2]),_:1})]),v2,t("table",null,[R2,t("tbody",null,[t("tr",null,[w2,t("td",j2,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[P2]),_:1})])])])]),q2,t("table",null,[D2,t("tbody",null,[F2,t("tr",null,[N2,t("td",I2,[O2,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[z2]),_:1}),e(">")]),U2]),t("tr",null,[E2,t("td",Y2,[A2,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[C2]),_:1}),e(">")]),M2])])]),S2,t("table",null,[G2,t("tbody",null,[t("tr",null,[H2,t("td",k2,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[B2]),_:1})])])])]),Q2,t("table",null,[L2,t("tbody",null,[t("tr",null,[W2,t("td",Z2,[X2,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[J2]),_:1}),e(">")]),K2]),t("tr",null,[$2,t("td",tV,[eV,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[lV]),_:1}),e(">")]),oV]),t("tr",null,[sV,t("td",nV,[aV,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[dV]),_:1}),e(">")]),rV]),cV])]),iV,t("table",null,[hV,t("tbody",null,[t("tr",null,[uV,t("td",_V,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[fV]),_:1}),e(" = "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[pV]),_:1})])])])]),yV,t("table",null,[mV,t("tbody",null,[t("tr",null,[gV,t("td",xV,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[bV]),_:1})]),VV]),t("tr",null,[TV,t("td",vV,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[RV]),_:1})]),wV]),jV,PV])]),qV,t("table",null,[DV,t("tbody",null,[t("tr",null,[FV,t("td",NV,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[IV]),_:1}),e(" = "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[OV]),_:1})])])])]),zV,t("table",null,[UV,t("tbody",null,[t("tr",null,[EV,t("td",YV,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[AV]),_:1})]),CV]),t("tr",null,[MV,t("td",SV,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[GV]),_:1})]),HV]),kV,BV,QV])]),LV,WV,ZV,XV,t("p",null,[e("▸ "),JV,e("<"),KV,e(">("),$V,e(", "),t8,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[e8]),_:1})]),l8,o8,t("table",null,[s8,t("tbody",null,[t("tr",null,[n8,t("td",a8,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[d8]),_:1})])])])]),r8,t("table",null,[c8,t("tbody",null,[t("tr",null,[i8,t("td",h8,[u8,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[_8]),_:1}),e(">")]),f8]),t("tr",null,[p8,t("td",y8,[m8,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[g8]),_:1}),e(">")]),x8])])]),b8,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[V8]),_:1})]),T8,t("table",null,[v8,t("tbody",null,[t("tr",null,[R8,t("td",w8,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[j8]),_:1})])])])]),P8,t("table",null,[q8,t("tbody",null,[D8,F8,N8,t("tr",null,[I8,t("td",O8,[z8,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[U8]),_:1}),e(">")]),E8]),Y8])]),A8,t("table",null,[C8,t("tbody",null,[t("tr",null,[M8,t("td",S8,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[G8]),_:1})])])])]),H8,t("table",null,[k8,t("tbody",null,[t("tr",null,[B8,t("td",Q8,[L8,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[W8]),_:1}),e(">")]),Z8]),t("tr",null,[X8,t("td",J8,[K8,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[$8]),_:1}),e(">")]),t0]),e0])]),l0,o0,s0,n0,a0,t("p",null,[e("▸ "),d0,e("("),r0,e(", "),c0,e("): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[i0]),_:1})]),h0,u0,t("table",null,[_0,t("tbody",null,[t("tr",null,[f0,t("td",p0,[y0,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[m0]),_:1}),e(">")]),g0]),t("tr",null,[x0,t("td",b0,[V0,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[T0]),_:1}),e(">")]),v0])])]),R0,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[w0]),_:1})]),j0,t("table",null,[P0,t("tbody",null,[t("tr",null,[q0,t("td",D0,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[F0]),_:1})])])])]),N0,t("table",null,[I0,t("tbody",null,[O0,z0,U0,t("tr",null,[E0,t("td",Y0,[A0,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[C0]),_:1}),e(">")]),M0]),S0])]),G0,t("table",null,[H0,t("tbody",null,[t("tr",null,[k0,t("td",B0,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[Q0]),_:1})])])])]),L0,t("table",null,[W0,t("tbody",null,[t("tr",null,[Z0,t("td",X0,[J0,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[K0]),_:1}),e(">")]),$0]),t("tr",null,[t6,t("td",e6,[l6,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[o6]),_:1}),e(">")]),s6]),n6])]),a6,t("table",null,[d6,t("tbody",null,[t("tr",null,[r6,t("td",c6,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[i6]),_:1})])])])]),h6,t("table",null,[u6,t("tbody",null,[_6,f6,p6,t("tr",null,[y6,t("td",m6,[g6,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[x6]),_:1}),e(">")]),b6]),t("tr",null,[V6,t("td",T6,[v6,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[R6]),_:1}),e(">")]),w6]),t("tr",null,[j6,t("td",P6,[q6,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[D6]),_:1}),e(">")]),F6])])]),N6,t("table",null,[I6,t("tbody",null,[t("tr",null,[O6,t("td",z6,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[U6]),_:1})])])])]),E6,t("table",null,[Y6,t("tbody",null,[A6,C6,M6,S6,G6,t("tr",null,[H6,t("td",k6,[B6,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[Q6]),_:1}),e(">")]),L6]),t("tr",null,[W6,t("td",Z6,[X6,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[J6]),_:1}),e(">")]),K6]),t("tr",null,[$6,t("td",t5,[e5,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[l5]),_:1}),e(">")]),o5]),s5])]),n5,t("table",null,[a5,t("tbody",null,[t("tr",null,[d5,t("td",r5,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[c5]),_:1})])])])]),i5,t("table",null,[h5,t("tbody",null,[u5,_5,f5,t("tr",null,[p5,t("td",y5,[m5,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[g5]),_:1}),e(">")]),x5]),t("tr",null,[b5,t("td",V5,[T5,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[v5]),_:1}),e(">")]),R5])])]),w5,t("table",null,[j5,t("tbody",null,[t("tr",null,[P5,t("td",q5,[e("extends "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[D5]),_:1})])])])]),F5,t("table",null,[N5,t("tbody",null,[t("tr",null,[I5,t("td",O5,[z5,e("<"),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[U5]),_:1}),e(">")]),E5]),Y5,A5,t("tr",null,[C5,t("td",M5,[S5,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[G5]),_:1}),e(">")]),H5]),t("tr",null,[k5,t("td",B5,[Q5,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[L5]),_:1}),e(">")]),W5]),t("tr",null,[Z5,t("td",X5,[J5,e("<"),o(l,{to:"/docs/classes/Matrix.html"},{default:s(()=>[K5]),_:1}),e(">")]),$5]),tT])]),eT,lT,oT,sT,nT,t("p",null,[e("▸ "),aT,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[dT]),_:1})]),rT,cT,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[iT]),_:1})]),hT,uT,_T,t("p",null,[e("▸ "),fT,e("(): "),o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[pT]),_:1})]),yT,mT,t("p",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:s(()=>[gT]),_:1})]),xT])}const RT=a(i,[["render",bT],["__file","Vector3.html.vue"]]);export{RT as default};
