xr-scene {
  display: block;
  position: relative;
  width: 100%;
  height: 100%;
}

xr-scene > .xr-canvas-container {
  display: block;
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  transform: translate(0, 0);
}

xr-scene > .xr-canvas-container > canvas {
  display: block;
  width: 100%;
  height: 100%;
  outline: none;
}

xr-loading {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1;
  opacity: 1;
  transition-property: opacity;
  transition-duration: 0.6s;
}

xr-loading.fading-out {
  opacity: 0;
}

xr-loading.hide {
  display: none;
}


xr-arrow {
  ---scale: 1 1 1;
}

xr-background-material {
  ---alpha: 1;
  ---alpha-mode: 2;
}

xr-camera {
  ---alpha: -90;
  ---beta: 90;
  ---radius: 10;
  ---locked-target: 0 0 0;
  ---min-z: 0.1;
  ---max-z: 100;
}

xr-cube-texture {

}

xr-decal {
  ---scale: 1 1 1;
  ---ray-scope: "scene";
}

xr-directional-light {
  ---diffuse: #FFFFFF;
  ---intensity: 1;
  ---shadow-caster-filtering-quality: 1;
  ---shadow-caster-normal-bias: 0.01;
  ---alpha: 40;
  ---beta: 30;
}

xr-dragger {
  ---scale: 1 1 1;
}

xr-ellipse {
  ---scale: 1 1 1;
  ---radius-x: 1;
  ---radius-y: 1;
}

xr-env {
  ---scale: 1 1 1;
}

xr-glow {
  ---intensity: 1;
}

xr-grid-material {
  ---alpha: 1;
  ---alpha-mode: 2;
  ---main-color: #FFFFFF;
  ---line-color: #000000;
  ---grid-ratio: 1;
  ---major-unit-frequency: 10;
  ---minor-unit-visible: 0.5;
  ---opacity: 0.99;
}

xr-ground {
  ---scale: 1 1 1;
  ---type: "plane";
  ---size: 100;
}

xr-gui {

}

xr-hemispheric-light {
  ---diffuse: #FFFFFF;
  ---intensity: 1;
  ---shadow-caster-filtering-quality: 1;
  ---shadow-caster-normal-bias: 0.01;
  ---alpha: 0;
  ---beta: 0;
}

xr-line {
  ---scale: 1 1 1;
}

xr-loading {

}

xr-material {
  ---alpha: 1;
  ---alpha-mode: 2;
  ---transparency-mode: 2;
  ---albedo-color: #FFFFFF;
  ---metallic: 0.2;
  ---roughness: 0.8;
  ---ambient-texture-strength: 1;
  ---reflection-color: #FFFFFF;
  ---micro-surface: 1;
  ---use-alpha-from-albedo-texture: true;
  ---use-specular-over-alpha: true;
  ---use-roughness-from-metallic-texture-alpha: true;
  ---use-radiance-over-alpha: true;
}

xr-mesh {
  ---scale: 1 1 1;
  ---edges-width: 1;
  ---edges-color: #FF0000FF;
}

xr-model {
  ---scale: 1 1 1;
}

xr-node {
  ---scale: 1 1 1;
}

xr-particle {
  ---emit-rate: 10;
  ---update-speed: 0.01;
  ---min-emit-power: 1;
  ---max-emit-power: 1;
  ---min-life-time: 1;
  ---max-life-time: 1;
  ---min-size: 1;
  ---max-size: 1;
  ---color1: #FFFFFFFF;
  ---color2: #FFFFFFFF;
  ---color-dead: #000000FF;
  ---texture-mask: #FFFFFFFF;
  ---capacity: 2000;
}

xr-performance-monitor {

}

xr-pipeline-ssao2 {
  ---samples: 16;
  ---radius: 2;
  ---total-strength: 1;
  ---max-z: 100;
}

xr-point-light {
  ---diffuse: #FFFFFF;
  ---intensity: 1;
  ---shadow-caster-filtering-quality: 1;
  ---shadow-caster-normal-bias: 0.01;
}

xr-ray {
  ---position: 0 0 0;
  ---rotation: 0 0 0;
  ---length: 1;
}

xr-scene {
  ---background: #FFFFFFFF;
  ---env-intensity: 1;
  ---contrast: 1.2;
  ---exposure: 1.2;
}

xr-screen-projector {

}

xr-texture {
  ---level: 1;
  ---u-scale: 1;
  ---v-scale: 1;
}

xr-volumetric-light {

}

xr-world-axis {
  ---size: 100;
}

@property ---inspect {
  syntax: "*";
  inherits: false;
}

@property ---disabled {
  syntax: "*";
  inherits: false;
}

@property ---thickness {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---position {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---rotation {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---scale {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---backface-culling {
  syntax: "*";
  inherits: false;
}

@property ---alpha {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---side-orientation {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---wireframe {
  syntax: "*";
  inherits: false;
}

@property ---alpha-mode {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---disable-depth-write {
  syntax: "*";
  inherits: false;
}

@property ---z-offset {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---entity-delegated {
  syntax: "*";
  inherits: false;
}

@property ---use-rgb-color {
  syntax: "*";
  inherits: false;
}

@property ---primary-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---enable-noise {
  syntax: "*";
  inherits: false;
}

@property ---reflection-texture {
  syntax: "*";
  inherits: false;
}

@property ---beta {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---radius {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---locked-target {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---min-z {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---max-z {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---attach-control {
  syntax: "*";
  inherits: false;
}

@property ---has-alpha {
  syntax: "*";
  inherits: false;
}

@property ---level {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---coordinates-index {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---coordinates-mode {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---wrap-u {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---wrap-v {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---url {
  syntax: "*";
  inherits: false;
}

@property ---rotation-y {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---extension {
  syntax: "*";
  inherits: false;
}

@property ---quaternion {
  syntax: "*";
  inherits: false;
}

@property ---layer {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---img {
  syntax: "*";
  inherits: false;
}

@property ---img-level {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---use-ray {
  syntax: "*";
  inherits: false;
}

@property ---ray-scope {
  syntax: "*";
  inherits: false;
}

@property ---diffuse {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---intensity {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---shadow-caster {
  syntax: "*";
  inherits: false;
}

@property ---shadow-caster-filtering-quality {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---shadow-caster-bias {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---shadow-caster-normal-bias {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---enable-position {
  syntax: "*";
  inherits: false;
}

@property ---enable-rotation {
  syntax: "*";
  inherits: false;
}

@property ---enable-scale {
  syntax: "*";
  inherits: false;
}

@property ---target {
  syntax: "*";
  inherits: false;
}

@property ---radius-x {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---radius-y {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---main-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---line-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---grid-ratio {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---major-unit-frequency {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---minor-unit-visible {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---opacity {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---type {
  syntax: "*";
  inherits: false;
}

@property ---size {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---ground-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---points {
  syntax: "*";
  inherits: false;
}

@property ---colors {
  syntax: "*";
  inherits: false;
}

@property ---disable-pointer-event {
  syntax: "*";
  inherits: false;
}

@property ---transparency-mode {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---albedo-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---albedo-texture {
  syntax: "*";
  inherits: false;
}

@property ---metallic {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---roughness {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---emissive-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---emissive-intensity {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---unlit {
  syntax: "*";
  inherits: false;
}

@property ---ambient-texture {
  syntax: "*";
  inherits: false;
}

@property ---ambient-texture-strength {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---opacity-texture {
  syntax: "*";
  inherits: false;
}

@property ---reflectivity-texture {
  syntax: "*";
  inherits: false;
}

@property ---metallic-texture {
  syntax: "*";
  inherits: false;
}

@property ---reflectance-texture {
  syntax: "*";
  inherits: false;
}

@property ---micro-surface-texture {
  syntax: "*";
  inherits: false;
}

@property ---bump-texture {
  syntax: "*";
  inherits: false;
}

@property ---lightmap-texture {
  syntax: "*";
  inherits: false;
}

@property ---refraction-texture {
  syntax: "*";
  inherits: false;
}

@property ---ambient-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---reflectivity-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---reflection-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---micro-surface {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---index-of-refraction {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---alpha-cut-off {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---parallax-scale-bias {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---invert-refraction-y {
  syntax: "*";
  inherits: false;
}

@property ---link-refraction-with-transparency {
  syntax: "*";
  inherits: false;
}

@property ---use-lightmap-as-shadowmap {
  syntax: "*";
  inherits: false;
}

@property ---use-alpha-from-albedo-texture {
  syntax: "*";
  inherits: false;
}

@property ---force-alpha-test {
  syntax: "*";
  inherits: false;
}

@property ---use-specular-over-alpha {
  syntax: "*";
  inherits: false;
}

@property ---use-micro-surface-from-reflectivity-map-alpha {
  syntax: "*";
  inherits: false;
}

@property ---use-roughness-from-metallic-texture-alpha {
  syntax: "*";
  inherits: false;
}

@property ---use-roughness-from-metallic-texture-green {
  syntax: "*";
  inherits: false;
}

@property ---use-metallness-from-metallic-texture-blue {
  syntax: "*";
  inherits: false;
}

@property ---use-ambient-occlusion-from-metallic-texture-red {
  syntax: "*";
  inherits: false;
}

@property ---use-ambient-in-gray-scale {
  syntax: "*";
  inherits: false;
}

@property ---use-auto-micro-surface-from-reflectivity-map {
  syntax: "*";
  inherits: false;
}

@property ---use-radiance-over-alpha {
  syntax: "*";
  inherits: false;
}

@property ---use-object-space-normal-map {
  syntax: "*";
  inherits: false;
}

@property ---use-parallax {
  syntax: "*";
  inherits: false;
}

@property ---use-parallax-occlusion {
  syntax: "*";
  inherits: false;
}

@property ---enable-specular-anti-aliasing {
  syntax: "*";
  inherits: false;
}

@property ---apply-decal-map-after-detail-map {
  syntax: "*";
  inherits: false;
}

@property ---metallic-f0-factor {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---geometry {
  syntax: "*";
  inherits: false;
}

@property ---material {
  syntax: "*";
  inherits: false;
}

@property ---enable-edges {
  syntax: "*";
  inherits: false;
}

@property ---edges-width {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---edges-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---enable-outline {
  syntax: "*";
  inherits: false;
}

@property ---flat-shading {
  syntax: "*";
  inherits: false;
}

@property ---src {
  syntax: "*";
  inherits: false;
}

@property ---auto-play {
  syntax: "*";
  inherits: false;
}

@property ---loop {
  syntax: "*";
  inherits: false;
}

@property ---origin-transform {
  syntax: "*";
  inherits: false;
}

@property ---preload {
  syntax: "*";
  inherits: false;
}

@property ---disable-virtual-node {
  syntax: "*";
  inherits: false;
}

@property ---emitter {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---emit-rate {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---update-speed {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---min-emit-power {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---max-emit-power {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---min-life-time {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---max-life-time {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---min-size {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---max-size {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---gravity {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---world-offset {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---direction1 {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---direction2 {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---color1 {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---color2 {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---color-dead {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---texture-mask {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---capacity {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---samples {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---total-strength {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---length {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---background {
  syntax: "<color>";
  inherits: false;
  initial-value: #000000;
}

@property ---env-url {
  syntax: "*";
  inherits: false;
}

@property ---env-rotation-y {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---env-intensity {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---contrast {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---exposure {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---hardware-scaling-level {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---render-delay {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---u-offset {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---v-offset {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---u-scale {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---v-scale {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---invert-y {
  syntax: "*";
  inherits: false;
}

@property ---camera {
  syntax: "*";
  inherits: false;
}

@property ---source {
  syntax: "*";
  inherits: false;
}

@property ---excluded {
  syntax: "*";
  inherits: false;
}

@property ---decay {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---weight {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

@property ---density {
  syntax: "<number>+";
  inherits: false;
  initial-value: 0;
}

