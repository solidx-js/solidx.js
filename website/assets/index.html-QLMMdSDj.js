import{_ as n,r as s,o as c,c as i,a as t,b as o,w as d,d as e,e as a}from"./app-cd6VGQi8.js";const r={},h=a('<h1 id="solidx-js" tabindex="-1"><a class="header-anchor" href="#solidx-js" aria-hidden="true">#</a> solidx.js</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3>',3),u=t("h3",{id:"type-aliases",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),e(" Type Aliases")],-1),_=t("h3",{id:"variables",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),e(" Variables")],-1),y=t("h3",{id:"functions",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),e(" Functions")],-1),f=a('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="iconstraintimpl" tabindex="-1"><a class="header-anchor" href="#iconstraintimpl" aria-hidden="true">#</a> IConstraintImpl</h3><p>Ƭ <strong>IConstraintImpl</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><code>any</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>source</code></td><td style="text-align:left;"><code>string</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>target</code></td><td style="text-align:left;"><code>string</code> | <code>null</code></td></tr></tbody></table><hr><h3 id="idatatype" tabindex="-1"><a class="header-anchor" href="#idatatype" aria-hidden="true">#</a> IDataType</h3><p>Ƭ <strong>IDataType</strong>: <code>&quot;Number&quot;</code> | <code>&quot;String&quot;</code> | <code>&quot;Boolean&quot;</code> | <code>&quot;Array&quot;</code> | <code>&quot;Vector2&quot;</code> | <code>&quot;Vector3&quot;</code> | <code>&quot;Vector4&quot;</code> | <code>&quot;Quaternion&quot;</code> | <code>&quot;Object&quot;</code> | <code>&quot;Color3&quot;</code> | <code>&quot;Color4&quot;</code> | <code>&quot;Matrix&quot;</code> | <code>&quot;TransitionList&quot;</code></p><hr><h3 id="idatatypemap" tabindex="-1"><a class="header-anchor" href="#idatatypemap" aria-hidden="true">#</a> IDataTypeMap</h3><p>Ƭ <strong>IDataTypeMap</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4>',12),p=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),g=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"Array")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string"),e("[]")])],-1),m=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean")]),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")])],-1),x=t("td",{style:{"text-align":"left"}},[t("code",null,"Color3")],-1),b={style:{"text-align":"left"}},T=t("code",null,"Color3",-1),I=t("td",{style:{"text-align":"left"}},[t("code",null,"Color4")],-1),R={style:{"text-align":"left"}},C=t("code",null,"Color4",-1),X=t("td",{style:{"text-align":"left"}},[t("code",null,"Matrix")],-1),M={style:{"text-align":"left"}},N=t("code",null,"Matrix",-1),V=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"Number")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")])],-1),D=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"Object")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Record"),e("<"),t("code",null,"string"),e(", "),t("code",null,"string"),e(">")])],-1),L=t("td",{style:{"text-align":"left"}},[t("code",null,"Quaternion")],-1),q={style:{"text-align":"left"}},k=t("code",null,"Quaternion",-1),E=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"String")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")])],-1),j=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"TransitionList")]),t("td",{style:{"text-align":"left"}},[e("{ "),t("code",null,"delay"),e(": "),t("code",null,"number"),e(" ; "),t("code",null,"duration"),e(": "),t("code",null,"number"),e(" ; "),t("code",null,"property"),e(": "),t("code",null,"string"),e(" ; "),t("code",null,"timingFunction"),e(": "),t("code",null,"string"),e(" }[]")])],-1),S=t("td",{style:{"text-align":"left"}},[t("code",null,"Vector2")],-1),v={style:{"text-align":"left"}},P=t("code",null,"Vector2",-1),O=t("td",{style:{"text-align":"left"}},[t("code",null,"Vector3")],-1),A={style:{"text-align":"left"}},B=t("code",null,"Vector3",-1),G=t("td",{style:{"text-align":"left"}},[t("code",null,"Vector4")],-1),Q={style:{"text-align":"left"}},U=t("code",null,"Vector4",-1),F=a('<hr><h3 id="igeometryimpl" tabindex="-1"><a class="header-anchor" href="#igeometryimpl" aria-hidden="true">#</a> IGeometryImpl</h3><p>Ƭ <strong>IGeometryImpl</strong>: <code>Object</code></p><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><code>Geometry</code> | <code>null</code></td></tr></tbody></table><hr><h3 id="imaterialcontrollerhosttype" tabindex="-1"><a class="header-anchor" href="#imaterialcontrollerhosttype" aria-hidden="true">#</a> IMaterialControllerHostType</h3>',7),w=t("strong",null,"IMaterialControllerHostType",-1),H=t("code",null,"XRElement",-1),K=t("code",null,"IMaterialImpl",-1),W=t("code",null,'"entity"',-1),z=t("code",null,"IMaterialImpl",-1),J=a('<hr><h3 id="imaterialimpl" tabindex="-1"><a class="header-anchor" href="#imaterialimpl" aria-hidden="true">#</a> IMaterialImpl</h3><p>Ƭ <strong>IMaterialImpl</strong>: <code>Object</code></p><h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>alpha</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>alphaMode</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>backFaceCulling</code></td><td style="text-align:left;"><code>boolean</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>disableDepthWrite</code></td><td style="text-align:left;"><code>boolean</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><code>Material</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>sideOrientation</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>wireframe</code></td><td style="text-align:left;"><code>boolean</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>zOffset</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr></tbody></table><hr><h3 id="imodifierimpl" tabindex="-1"><a class="header-anchor" href="#imodifierimpl" aria-hidden="true">#</a> IModifierImpl</h3><p>Ƭ <strong>IModifierImpl</strong>: <code>Object</code></p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><code>any</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>source</code></td><td style="text-align:left;"><code>string</code> | <code>null</code></td></tr></tbody></table><hr><h3 id="ipostprocessimpl" tabindex="-1"><a class="header-anchor" href="#ipostprocessimpl" aria-hidden="true">#</a> IPostProcessImpl</h3><p>Ƭ <strong>IPostProcessImpl</strong>: <code>Object</code></p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>camera</code></td><td style="text-align:left;"><code>string</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><code>PostProcess</code> | <code>null</code></td></tr></tbody></table><hr><h3 id="itextureimpl" tabindex="-1"><a class="header-anchor" href="#itextureimpl" aria-hidden="true">#</a> ITextureImpl</h3><p>Ƭ <strong>ITextureImpl</strong>: <code>Object</code></p><h4 id="type-declaration-6" tabindex="-1"><a class="header-anchor" href="#type-declaration-6" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>coordinatesIndex</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>coordinatesMode</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><code>BaseTexture</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>hasAlpha</code></td><td style="text-align:left;"><code>boolean</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>level</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>wrapU</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr><tr><td style="text-align:left;"><code>wrapV</code></td><td style="text-align:left;"><code>number</code> | <code>null</code></td></tr></tbody></table><hr><h3 id="itransformnodelikeimpl" tabindex="-1"><a class="header-anchor" href="#itransformnodelikeimpl" aria-hidden="true">#</a> ITransformNodeLikeImpl</h3><p>Ƭ <strong>ITransformNodeLikeImpl</strong>: <code>Object</code></p><h4 id="type-declaration-7" tabindex="-1"><a class="header-anchor" href="#type-declaration-7" aria-hidden="true">#</a> Type declaration</h4>',24),Y=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Z=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"entity")]),t("td",{style:{"text-align":"left"}},[t("code",null,"TransformNode"),e(" | "),t("code",null,"null")])],-1),$=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"layer")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number"),e(" | "),t("code",null,"null")])],-1),tt=t("td",{style:{"text-align":"left"}},[t("code",null,"position")],-1),et={style:{"text-align":"left"}},lt=t("code",null,"Vector3",-1),ot=t("code",null,"null",-1),dt=t("td",{style:{"text-align":"left"}},[t("code",null,"quaternion")],-1),at={style:{"text-align":"left"}},nt=t("code",null,"Quaternion",-1),st=t("code",null,"null",-1),ct=t("td",{style:{"text-align":"left"}},[t("code",null,"rotation")],-1),it={style:{"text-align":"left"}},rt=t("code",null,"Vector3",-1),ht=t("code",null,"null",-1),ut=t("td",{style:{"text-align":"left"}},[t("code",null,"scale")],-1),_t={style:{"text-align":"left"}},yt=t("code",null,"Vector3",-1),ft=t("code",null,"null",-1),pt=a('<h2 id="variables-1" tabindex="-1"><a class="header-anchor" href="#variables-1" aria-hidden="true">#</a> Variables</h2><h3 id="builtineventlist" tabindex="-1"><a class="header-anchor" href="#builtineventlist" aria-hidden="true">#</a> BuiltinEventList</h3><p>• <code>Const</code> <strong>BuiltinEventList</strong>: <code>Set</code>&lt;<code>string</code>&gt;</p><hr><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> Context</h3><p>• <code>Const</code> <strong>Context</strong>: <code>Object</code></p><h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>AssetContainer</code></td><td style="text-align:left;">{}</td></tr><tr><td style="text-align:left;"><code>Engine</code></td><td style="text-align:left;">{}</td></tr><tr><td style="text-align:left;"><code>Scene</code></td><td style="text-align:left;">{}</td></tr><tr><td style="text-align:left;"><code>TransformNode</code></td><td style="text-align:left;">{}</td></tr></tbody></table><hr><h3 id="decorator" tabindex="-1"><a class="header-anchor" href="#decorator" aria-hidden="true">#</a> Decorator</h3><p>• <code>Const</code> <strong>Decorator</strong>: <code>Object</code></p><h4 id="type-declaration-9" tabindex="-1"><a class="header-anchor" href="#type-declaration-9" aria-hidden="true">#</a> Type declaration</h4>',12),gt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),mt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"AssetContainer")]),t("td",{style:{"text-align":"left"}},[e("() => "),t("code",null,"ConsumeDecorator"),e("<"),t("code",null,"AssetContainer"),e(">")])],-1),xt=t("td",{style:{"text-align":"left"}},[t("code",null,"property")],-1),bt={style:{"text-align":"left"}},Tt=t("code",null,"dType",-1),It=t("code",null,"T",-1),Rt=t("code",null,"attribute",-1),Ct=t("code",null,"string",-1),Xt=t("code",null,"initValue",-1),Mt=t("code",null,"null",-1),Nt=t("code",null,"IDataTypeMap",-1),Vt=t("code",null,"T",-1),Dt=t("code",null,"PropertyDecorator",-1),Lt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"scene")]),t("td",{style:{"text-align":"left"}},[e("() => "),t("code",null,"ConsumeDecorator"),e("<"),t("code",null,"Scene"),e(">")])],-1),qt=a('<hr><h3 id="elementutil" tabindex="-1"><a class="header-anchor" href="#elementutil" aria-hidden="true">#</a> ElementUtil</h3><p>• <code>Const</code> <strong>ElementUtil</strong>: <code>Object</code></p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>closestTransformNodeLike</code></td><td style="text-align:left;">(<code>ele</code>: <code>HTMLElement</code>) =&gt; <code>null</code> | <code>TransformNode</code></td></tr><tr><td style="text-align:left;"><code>displayText</code></td><td style="text-align:left;">(<code>ele</code>: <code>HTMLElement</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>toAttributeObject</code></td><td style="text-align:left;">&lt;T&gt;(<code>ele</code>: <code>T</code>) =&gt; <code>T</code></td></tr></tbody></table><hr><h3 id="lerpfns" tabindex="-1"><a class="header-anchor" href="#lerpfns" aria-hidden="true">#</a> LerpFns</h3><p>• <code>Const</code> <strong>LerpFns</strong>: { [K in IDataType]: Function }</p><hr><h3 id="mathutil" tabindex="-1"><a class="header-anchor" href="#mathutil" aria-hidden="true">#</a> MathUtil</h3><p>• <code>Const</code> <strong>MathUtil</strong>: <code>Object</code></p><h4 id="type-declaration-11" tabindex="-1"><a class="header-anchor" href="#type-declaration-11" aria-hidden="true">#</a> Type declaration</h4>',12),kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Et=t("td",{style:{"text-align":"left"}},[t("code",null,"calcRotAxisAngle")],-1),jt={style:{"text-align":"left"}},St=t("code",null,"rotQuat",-1),vt=t("code",null,"Quaternion",-1),Pt=t("code",null,"angle",-1),Ot=t("code",null,"number",-1),At=t("code",null,"axis",-1),Bt=t("code",null,"Vector3",-1),Gt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"minmax")]),t("td",{style:{"text-align":"left"}},[e("<T>("),t("code",null,"list"),e(": "),t("code",null,"T"),e("[], "),t("code",null,"mapper"),e(": ("),t("code",null,"v"),e(": "),t("code",null,"T"),e(") => "),t("code",null,"number"),e(") => "),t("code",null,"number"),e("[]")])],-1),Qt=t("hr",null,null,-1),Ut=t("h3",{id:"schema",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#schema","aria-hidden":"true"},"#"),e(" Schema")],-1),Ft=t("p",null,[e("• "),t("code",null,"Const"),e(),t("strong",null,"Schema"),e(": "),t("code",null,"Object")],-1),wt=t("h4",{id:"type-declaration-12",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-12","aria-hidden":"true"},"#"),e(" Type declaration")],-1),Ht=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),Kt=t("td",{style:{"text-align":"left"}},[t("code",null,"fromAttr")],-1),Wt={style:{"text-align":"left"}},zt=t("code",null,"type",-1),Jt=t("code",null,"T",-1),Yt=t("code",null,"data",-1),Zt=t("code",null,"null",-1),$t=t("code",null,"string",-1),te=t("code",null,"null",-1),ee=t("code",null,"IDataTypeMap",-1),le=t("code",null,"T",-1),oe=t("td",{style:{"text-align":"left"}},[t("code",null,"fromCssLiteral")],-1),de={style:{"text-align":"left"}},ae=t("code",null,"type",-1),ne=t("code",null,"T",-1),se=t("code",null,"literal",-1),ce=t("code",null,"string",-1),ie=t("code",null,"null",-1),re=t("code",null,"IDataTypeMap",-1),he=t("code",null,"T",-1),ue=t("td",{style:{"text-align":"left"}},[t("code",null,"isEqual")],-1),_e={style:{"text-align":"left"}},ye=t("code",null,"type",-1),fe=t("code",null,"T",-1),pe=t("code",null,"a",-1),ge=t("code",null,"undefined",-1),me=t("code",null,"null",-1),xe=t("code",null,"IDataTypeMap",-1),be=t("code",null,"T",-1),Te=t("code",null,"b",-1),Ie=t("code",null,"undefined",-1),Re=t("code",null,"null",-1),Ce=t("code",null,"IDataTypeMap",-1),Xe=t("code",null,"T",-1),Me=t("code",null,"boolean",-1),Ne=t("td",{style:{"text-align":"left"}},[t("code",null,"toAttr")],-1),Ve={style:{"text-align":"left"}},De=t("code",null,"type",-1),Le=t("code",null,"T",-1),qe=t("code",null,"data",-1),ke=t("code",null,"null",-1),Ee=t("code",null,"IDataTypeMap",-1),je=t("code",null,"T",-1),Se=t("code",null,"null",-1),ve=t("code",null,"string",-1),Pe=t("td",{style:{"text-align":"left"}},[t("code",null,"toCssLiteral")],-1),Oe={style:{"text-align":"left"}},Ae=t("code",null,"type",-1),Be=t("code",null,"T",-1),Ge=t("code",null,"data",-1),Qe=t("code",null,"IDataTypeMap",-1),Ue=t("code",null,"T",-1),Fe=t("code",null,"string",-1),we=a('<hr><h3 id="typeguard" tabindex="-1"><a class="header-anchor" href="#typeguard" aria-hidden="true">#</a> TypeGuard</h3><p>• <code>Const</code> <strong>TypeGuard</strong>: <code>Object</code></p><h4 id="type-declaration-13" tabindex="-1"><a class="header-anchor" href="#type-declaration-13" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>isGeometryImpl</code></td><td style="text-align:left;">(<code>obj</code>: <code>any</code>) =&gt; obj is IGeometryImpl</td></tr><tr><td style="text-align:left;"><code>isTextureImpl</code></td><td style="text-align:left;">(<code>obj</code>: <code>any</code>) =&gt; obj is ITextureImpl</td></tr><tr><td style="text-align:left;"><code>isTransformNodeLikeImpl</code></td><td style="text-align:left;">(<code>obj</code>: <code>any</code>) =&gt; obj is ITransformNodeLikeImpl</td></tr></tbody></table><h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="makeuniquekey" tabindex="-1"><a class="header-anchor" href="#makeuniquekey" aria-hidden="true">#</a> makeUniqueKey</h3><p>▸ <strong>makeUniqueKey</strong>&lt;<code>K</code>&gt;(<code>key</code>, <code>list</code>): <code>void</code></p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>K</code></td><td style="text-align:left;">extends <code>string</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>K</code></td></tr><tr><td style="text-align:left;"><code>list</code></td><td style="text-align:left;"><code>any</code>[]</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="parsedurationstring" tabindex="-1"><a class="header-anchor" href="#parsedurationstring" aria-hidden="true">#</a> parseDurationString</h3><p>▸ <strong>parseDurationString</strong>(<code>s</code>): <code>number</code></p><p>Parses a duration string and returns the duration in milliseconds.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>s</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The duration string to parse.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><p>The duration in milliseconds.</p><hr><h3 id="randomid" tabindex="-1"><a class="header-anchor" href="#randomid" aria-hidden="true">#</a> randomID</h3><p>▸ <strong>randomID</strong>(): <code>string</code></p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><hr><h3 id="typedclone" tabindex="-1"><a class="header-anchor" href="#typedclone" aria-hidden="true">#</a> typedClone</h3><p>▸ <strong>typedClone</strong>&lt;<code>T</code>&gt;(<code>data</code>): <code>T</code></p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>T</code></p>',37);function He(Ke,We){const l=s("RouterLink");return c(),i("div",null,[h,t("ul",null,[t("li",null,[o(l,{to:"/docs/classes/AttributeObserverController.html"},{default:d(()=>[e("AttributeObserverController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Color3.html"},{default:d(()=>[e("Color3")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Color4.html"},{default:d(()=>[e("Color4")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/ElementRegistry.html"},{default:d(()=>[e("ElementRegistry")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/EntityInspectController.html"},{default:d(()=>[e("EntityInspectController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/EntityQueryController.html"},{default:d(()=>[e("EntityQueryController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/EventDispatchController.html"},{default:d(()=>[e("EventDispatchController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/LightController.html"},{default:d(()=>[e("LightController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/MaterialController.html"},{default:d(()=>[e("MaterialController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Matrix.html"},{default:d(()=>[e("Matrix")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/NodeStateController.html"},{default:d(()=>[e("NodeStateController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Plane.html"},{default:d(()=>[e("Plane")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/PointerController.html"},{default:d(()=>[e("PointerController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/PrimitiveBase.html"},{default:d(()=>[e("PrimitiveBase")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Quaternion.html"},{default:d(()=>[e("Quaternion")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/TagListRefController.html"},{default:d(()=>[e("TagListRefController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/TagRefController.html"},{default:d(()=>[e("TagRefController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/TextureController.html"},{default:d(()=>[e("TextureController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/TickController.html"},{default:d(()=>[e("TickController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/TransformLikeController.html"},{default:d(()=>[e("TransformLikeController")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/ValueWrapper.html"},{default:d(()=>[e("ValueWrapper")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector2.html"},{default:d(()=>[e("Vector2")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector3.html"},{default:d(()=>[e("Vector3")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/Vector4.html"},{default:d(()=>[e("Vector4")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRArrow.html"},{default:d(()=>[e("XRArrow")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRBackgroundMaterial.html"},{default:d(()=>[e("XRBackgroundMaterial")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRBaseMaterial.html"},{default:d(()=>[e("XRBaseMaterial")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRCamera.html"},{default:d(()=>[e("XRCamera")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRCubeTexture.html"},{default:d(()=>[e("XRCubeTexture")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRDecal.html"},{default:d(()=>[e("XRDecal")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRDirectionalLight.html"},{default:d(()=>[e("XRDirectionalLight")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRDragger.html"},{default:d(()=>[e("XRDragger")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRElement.html"},{default:d(()=>[e("XRElement")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XREllipse.html"},{default:d(()=>[e("XREllipse")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XREnv.html"},{default:d(()=>[e("XREnv")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRGeometry.html"},{default:d(()=>[e("XRGeometry")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRGridMaterial.html"},{default:d(()=>[e("XRGridMaterial")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRGround.html"},{default:d(()=>[e("XRGround")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRHemisphericLight.html"},{default:d(()=>[e("XRHemisphericLight")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRLine.html"},{default:d(()=>[e("XRLine")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRMaterial.html"},{default:d(()=>[e("XRMaterial")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRMesh.html"},{default:d(()=>[e("XRMesh")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRModel.html"},{default:d(()=>[e("XRModel")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRNode.html"},{default:d(()=>[e("XRNode")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRPipelineSSAO2.html"},{default:d(()=>[e("XRPipelineSSAO2")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRPointLight.html"},{default:d(()=>[e("XRPointLight")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRRay.html"},{default:d(()=>[e("XRRay")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRScene.html"},{default:d(()=>[e("XRScene")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRSceneScopeElement.html"},{default:d(()=>[e("XRSceneScopeElement")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRScreenProjector.html"},{default:d(()=>[e("XRScreenProjector")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRTexture.html"},{default:d(()=>[e("XRTexture")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRVolumetricLight.html"},{default:d(()=>[e("XRVolumetricLight")]),_:1})]),t("li",null,[o(l,{to:"/docs/classes/XRWorldAxis.html"},{default:d(()=>[e("XRWorldAxis")]),_:1})])]),u,t("ul",null,[t("li",null,[o(l,{to:"/docs/#iconstraintimpl"},{default:d(()=>[e("IConstraintImpl")]),_:1})]),t("li",null,[o(l,{to:"/docs/#idatatype"},{default:d(()=>[e("IDataType")]),_:1})]),t("li",null,[o(l,{to:"/docs/#idatatypemap"},{default:d(()=>[e("IDataTypeMap")]),_:1})]),t("li",null,[o(l,{to:"/docs/#igeometryimpl"},{default:d(()=>[e("IGeometryImpl")]),_:1})]),t("li",null,[o(l,{to:"/docs/#imaterialcontrollerhosttype"},{default:d(()=>[e("IMaterialControllerHostType")]),_:1})]),t("li",null,[o(l,{to:"/docs/#imaterialimpl"},{default:d(()=>[e("IMaterialImpl")]),_:1})]),t("li",null,[o(l,{to:"/docs/#imodifierimpl"},{default:d(()=>[e("IModifierImpl")]),_:1})]),t("li",null,[o(l,{to:"/docs/#ipostprocessimpl"},{default:d(()=>[e("IPostProcessImpl")]),_:1})]),t("li",null,[o(l,{to:"/docs/#itextureimpl"},{default:d(()=>[e("ITextureImpl")]),_:1})]),t("li",null,[o(l,{to:"/docs/#itransformnodelikeimpl"},{default:d(()=>[e("ITransformNodeLikeImpl")]),_:1})])]),_,t("ul",null,[t("li",null,[o(l,{to:"/docs/#builtineventlist"},{default:d(()=>[e("BuiltinEventList")]),_:1})]),t("li",null,[o(l,{to:"/docs/#context"},{default:d(()=>[e("Context")]),_:1})]),t("li",null,[o(l,{to:"/docs/#decorator"},{default:d(()=>[e("Decorator")]),_:1})]),t("li",null,[o(l,{to:"/docs/#elementutil"},{default:d(()=>[e("ElementUtil")]),_:1})]),t("li",null,[o(l,{to:"/docs/#lerpfns"},{default:d(()=>[e("LerpFns")]),_:1})]),t("li",null,[o(l,{to:"/docs/#mathutil"},{default:d(()=>[e("MathUtil")]),_:1})]),t("li",null,[o(l,{to:"/docs/#schema"},{default:d(()=>[e("Schema")]),_:1})]),t("li",null,[o(l,{to:"/docs/#typeguard"},{default:d(()=>[e("TypeGuard")]),_:1})])]),y,t("ul",null,[t("li",null,[o(l,{to:"/docs/#makeuniquekey"},{default:d(()=>[e("makeUniqueKey")]),_:1})]),t("li",null,[o(l,{to:"/docs/#parsedurationstring"},{default:d(()=>[e("parseDurationString")]),_:1})]),t("li",null,[o(l,{to:"/docs/#randomid"},{default:d(()=>[e("randomID")]),_:1})]),t("li",null,[o(l,{to:"/docs/#typedclone"},{default:d(()=>[e("typedClone")]),_:1})])]),f,t("table",null,[p,t("tbody",null,[g,m,t("tr",null,[x,t("td",b,[o(l,{to:"/docs/classes/Color3.html"},{default:d(()=>[T]),_:1})])]),t("tr",null,[I,t("td",R,[o(l,{to:"/docs/classes/Color4.html"},{default:d(()=>[C]),_:1})])]),t("tr",null,[X,t("td",M,[o(l,{to:"/docs/classes/Matrix.html"},{default:d(()=>[N]),_:1})])]),V,D,t("tr",null,[L,t("td",q,[o(l,{to:"/docs/classes/Quaternion.html"},{default:d(()=>[k]),_:1})])]),E,j,t("tr",null,[S,t("td",v,[o(l,{to:"/docs/classes/Vector2.html"},{default:d(()=>[P]),_:1})])]),t("tr",null,[O,t("td",A,[o(l,{to:"/docs/classes/Vector3.html"},{default:d(()=>[B]),_:1})])]),t("tr",null,[G,t("td",Q,[o(l,{to:"/docs/classes/Vector4.html"},{default:d(()=>[U]),_:1})])])])]),F,t("p",null,[e("Ƭ "),w,e(": "),o(l,{to:"/docs/classes/XRElement.html"},{default:d(()=>[H]),_:1}),e("<"),o(l,{to:"/docs/#imaterialimpl"},{default:d(()=>[K]),_:1}),e("["),W,e("]> & "),o(l,{to:"/docs/#imaterialimpl"},{default:d(()=>[z]),_:1})]),J,t("table",null,[Y,t("tbody",null,[Z,$,t("tr",null,[tt,t("td",et,[o(l,{to:"/docs/classes/Vector3.html"},{default:d(()=>[lt]),_:1}),e(" | "),ot])]),t("tr",null,[dt,t("td",at,[o(l,{to:"/docs/classes/Quaternion.html"},{default:d(()=>[nt]),_:1}),e(" | "),st])]),t("tr",null,[ct,t("td",it,[o(l,{to:"/docs/classes/Vector3.html"},{default:d(()=>[rt]),_:1}),e(" | "),ht])]),t("tr",null,[ut,t("td",_t,[o(l,{to:"/docs/classes/Vector3.html"},{default:d(()=>[yt]),_:1}),e(" | "),ft])])])]),pt,t("table",null,[gt,t("tbody",null,[mt,t("tr",null,[xt,t("td",bt,[e("<T>("),Tt,e(": "),It,e(", "),Rt,e(": "),Ct,e(", "),Xt,e(": "),Mt,e(" | "),o(l,{to:"/docs/#idatatypemap"},{default:d(()=>[Nt]),_:1}),e("["),Vt,e("]) => "),Dt])]),Lt])]),qt,t("table",null,[kt,t("tbody",null,[t("tr",null,[Et,t("td",jt,[e("("),St,e(": "),o(l,{to:"/docs/classes/Quaternion.html"},{default:d(()=>[vt]),_:1}),e(") => { "),Pt,e(": "),Ot,e(" ; "),At,e(": "),o(l,{to:"/docs/classes/Vector3.html"},{default:d(()=>[Bt]),_:1}),e(" }")])]),Gt])]),Qt,Ut,Ft,wt,t("table",null,[Ht,t("tbody",null,[t("tr",null,[Kt,t("td",Wt,[e("<T>("),zt,e(": "),Jt,e(", "),Yt,e(": "),Zt,e(" | "),$t,e(") => "),te,e(" | "),o(l,{to:"/docs/#idatatypemap"},{default:d(()=>[ee]),_:1}),e("["),le,e("]")])]),t("tr",null,[oe,t("td",de,[e("<T>("),ae,e(": "),ne,e(", "),se,e(": "),ce,e(") => "),ie,e(" | "),o(l,{to:"/docs/#idatatypemap"},{default:d(()=>[re]),_:1}),e("["),he,e("]")])]),t("tr",null,[ue,t("td",_e,[e("<T>("),ye,e(": "),fe,e(", "),pe,e(": "),ge,e(" | "),me,e(" | "),o(l,{to:"/docs/#idatatypemap"},{default:d(()=>[xe]),_:1}),e("["),be,e("], "),Te,e(": "),Ie,e(" | "),Re,e(" | "),o(l,{to:"/docs/#idatatypemap"},{default:d(()=>[Ce]),_:1}),e("["),Xe,e("]) => "),Me])]),t("tr",null,[Ne,t("td",Ve,[e("<T>("),De,e(": "),Le,e(", "),qe,e(": "),ke,e(" | "),o(l,{to:"/docs/#idatatypemap"},{default:d(()=>[Ee]),_:1}),e("["),je,e("]) => "),Se,e(" | "),ve])]),t("tr",null,[Pe,t("td",Oe,[e("<T>("),Ae,e(": "),Be,e(", "),Ge,e(": "),o(l,{to:"/docs/#idatatypemap"},{default:d(()=>[Qe]),_:1}),e("["),Ue,e("]) => "),Fe])])])]),we])}const Je=n(r,[["render",He],["__file","index.html.vue"]]);export{Je as default};
